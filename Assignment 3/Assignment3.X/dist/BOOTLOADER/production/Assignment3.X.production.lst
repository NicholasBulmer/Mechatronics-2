

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Wed Sep 27 10:52:38 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F67J50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1,group=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1,inline
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   143                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   144  0000                     
   145                           ; Version 1.43
   146                           ; Generated 25/07/2017 GMT
   147                           ; 
   148                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   149                           ; All rights reserved.
   150                           ; 
   151                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   152                           ; 
   153                           ; Redistribution and use in source and binary forms, with or without modification, are
   154                           ; permitted provided that the following conditions are met:
   155                           ; 
   156                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   157                           ;        conditions and the following disclaimer.
   158                           ; 
   159                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   160                           ;        of conditions and the following disclaimer in the documentation and/or other
   161                           ;        materials provided with the distribution.
   162                           ; 
   163                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   164                           ;        software without specific prior written permission.
   165                           ; 
   166                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   167                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   168                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   169                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   170                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   171                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   172                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   173                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   174                           ; 
   175                           ; 
   176                           ; Code-generator required, PIC18F67J50 Definitions
   177                           ; 
   178                           ; SFR Addresses
   179  0000                     
   180 ;; Function _HMI_LeftSwitch is unused but had its address taken
   181  0000                     
   182 ;; Function _HMI_RightSwitch is unused but had its address taken
   183  0000                     
   184 ;; Function _HMI_UpSwitch is unused but had its address taken
   185  0000                     
   186 ;; Function _HMI_DownSwitch is unused but had its address taken
   187  0000                     
   188 ;; Function _HMI_DIPSwitch is unused but had its address taken
   189  0000                     
   190 ;; Function _MXK_TestButton is unused but had its address taken
   191  0000                     
   192 ;; Function _MXK_DIPSwitch is unused but had its address taken
   193  0000                     
   194 ;; Function _Event_NULL is unused but had its address taken
   195  0000                     
   196 ;; Function _Event_DIPSwitch is unused but had its address taken
   197  0000                     
   198 ;; Function _Event_TestButton is unused but had its address taken
   199  0000                     
   200                           	psect	idataCOMRAM
   201  014B24                     __pidataCOMRAM:
   202                           	opt stack 0
   203                           
   204                           ;initializer for _gCursor
   205  014B24  0006               	dw	6
   206  014B26  0006               	dw	6
   207                           
   208                           ;initializer for _yPos
   209  014B28  0002               	dw	2
   210                           
   211                           ;initializer for _xPos
   212  014B2A  0009               	dw	9
   213                           
   214                           ;initializer for _bearing
   215  014B2C  0002               	dw	2
   216                           
   217                           ;initializer for _Bus_State
   218  014B2E  01                 	db	1
   219                           
   220                           ;initializer for _change
   221  014B2F  01                 	db	1
   222                           
   223                           ;initializer for _zero
   224  014B30  30                 	db	48
   225                           
   226                           ;initializer for _l
   227  014B31  80                 	db	128
   228                           
   229                           ;initializer for _w
   230  014B32  80                 	db	128
   231                           
   232                           	psect	idataBANK0
   233  014BC4                     __pidataBANK0:
   234                           	opt stack 0
   235                           
   236                           ;initializer for _gridSize
   237  014BC4  0064               	dw	100
   238                           
   239                           ;initializer for _gForecolour
   240  014BC6  FFFF               	dw	65535
   241                           
   242                           ;initializer for _A
   243  014BC8  41                 	db	65
   244                           
   245                           ;initializer for _a
   246  014BC9  61                 	db	97
   247                           
   248                           	psect	idataBANK1
   249  014B7A                     __pidataBANK1:
   250                           	opt stack 0
   251                           
   252                           ;initializer for Console_Render@F6956
   253  014B7A  0006               	dw	6
   254  014B7C  0006               	dw	6
   255                           
   256                           ;initializer for _gLineSize
   257  014B7E  0080               	dw	128
   258  014B80  0007               	dw	7
   259                           
   260                           ;initializer for _gCharSize
   261  014B82  0005               	dw	5
   262  014B84  0007               	dw	7
   263                           
   264                           	psect	idataBANK3
   265  013124                     __pidataBANK3:
   266                           	opt stack 0
   267                           
   268                           ;initializer for _maze
   269  013124  009B               	dw	155
   270  013126  009B               	dw	155
   271  013128  009B               	dw	155
   272  01312A  009B               	dw	155
   273  01312C  009B               	dw	155
   274  01312E  009B               	dw	155
   275  013130  009B               	dw	155
   276  013132  009B               	dw	155
   277  013134  009B               	dw	155
   278  013136  009B               	dw	155
   279  013138  009B               	dw	155
   280  01313A  009B               	dw	155
   281  01313C  009A               	dw	154
   282  01313E  009A               	dw	154
   283  013140  009A               	dw	154
   284  013142  009B               	dw	155
   285  013144  009A               	dw	154
   286  013146  009B               	dw	155
   287  013148  0000               	dw	0
   288  01314A  009A               	dw	154
   289  01314C  009A               	dw	154
   290  01314E  009B               	dw	155
   291  013150  009B               	dw	155
   292  013152  009A               	dw	154
   293  013154  009B               	dw	155
   294  013156  009B               	dw	155
   295  013158  009B               	dw	155
   296  01315A  009A               	dw	154
   297  01315C  009B               	dw	155
   298  01315E  009B               	dw	155
   299  013160  009B               	dw	155
   300  013162  009A               	dw	154
   301  013164  009B               	dw	155
   302  013166  009B               	dw	155
   303  013168  009A               	dw	154
   304  01316A  009A               	dw	154
   305  01316C  009A               	dw	154
   306  01316E  009A               	dw	154
   307  013170  009A               	dw	154
   308  013172  009A               	dw	154
   309  013174  009A               	dw	154
   310  013176  009A               	dw	154
   311  013178  009A               	dw	154
   312  01317A  009B               	dw	155
   313  01317C  009B               	dw	155
   314  01317E  009B               	dw	155
   315  013180  009B               	dw	155
   316  013182  009B               	dw	155
   317  013184  009B               	dw	155
   318  013186  009A               	dw	154
   319  013188  009B               	dw	155
   320  01318A  009B               	dw	155
   321  01318C  009B               	dw	155
   322  01318E  009A               	dw	154
   323  013190  009B               	dw	155
   324  013192  009B               	dw	155
   325  013194  009A               	dw	154
   326  013196  009A               	dw	154
   327  013198  009A               	dw	154
   328  01319A  009B               	dw	155
   329  01319C  009A               	dw	154
   330  01319E  009B               	dw	155
   331  0131A0  009A               	dw	154
   332  0131A2  009A               	dw	154
   333  0131A4  009A               	dw	154
   334  0131A6  009B               	dw	155
   335  0131A8  009B               	dw	155
   336  0131AA  009A               	dw	154
   337  0131AC  009B               	dw	155
   338  0131AE  009A               	dw	154
   339  0131B0  009B               	dw	155
   340  0131B2  009A               	dw	154
   341  0131B4  009B               	dw	155
   342  0131B6  009B               	dw	155
   343  0131B8  009B               	dw	155
   344  0131BA  009A               	dw	154
   345  0131BC  009B               	dw	155
   346  0131BE  009B               	dw	155
   347  0131C0  009A               	dw	154
   348  0131C2  009B               	dw	155
   349  0131C4  009A               	dw	154
   350  0131C6  009A               	dw	154
   351  0131C8  009A               	dw	154
   352  0131CA  009A               	dw	154
   353  0131CC  009A               	dw	154
   354  0131CE  009A               	dw	154
   355  0131D0  009A               	dw	154
   356  0131D2  009B               	dw	155
   357  0131D4  009B               	dw	155
   358  0131D6  009B               	dw	155
   359  0131D8  009B               	dw	155
   360  0131DA  009B               	dw	155
   361  0131DC  009B               	dw	155
   362  0131DE  009B               	dw	155
   363  0131E0  009B               	dw	155
   364  0131E2  009B               	dw	155
   365  0131E4  009B               	dw	155
   366  0131E6  009B               	dw	155
   367  0131E8  009B               	dw	155
   368                           
   369                           	psect	mediumconst
   370  00FCF2                     __pmediumconst:
   371                           	opt stack 0
   372  00FCF2  00                 	db	0
   373  00FCF3                     _InitList:
   374                           	opt stack 0
   375  00FCF3  1100               	dw	4352
   376  00FCF5  0080               	dw	128
   377  00FCF7  012C               	dw	300
   378  00FCF9  B100               	dw	45312
   379  00FCFB  0002               	dw	2
   380  00FCFD  0035               	dw	53
   381  00FCFF  0036               	dw	54
   382  00FD01  B200               	dw	45568
   383  00FD03  0002               	dw	2
   384  00FD05  0035               	dw	53
   385  00FD07  0036               	dw	54
   386  00FD09  B300               	dw	45824
   387  00FD0B  0002               	dw	2
   388  00FD0D  0035               	dw	53
   389  00FD0F  0036               	dw	54
   390  00FD11  0002               	dw	2
   391  00FD13  0035               	dw	53
   392  00FD15  0036               	dw	54
   393  00FD17  B400               	dw	46080
   394  00FD19  0000               	dw	0
   395  00FD1B  C000               	dw	49152
   396  00FD1D  00A2               	dw	162
   397  00FD1F  0002               	dw	2
   398  00FD21  0084               	dw	132
   399  00FD23  C100               	dw	49408
   400  00FD25  00C5               	dw	197
   401  00FD27  C200               	dw	49664
   402  00FD29  000D               	dw	13
   403  00FD2B  0000               	dw	0
   404  00FD2D  C300               	dw	49920
   405  00FD2F  008D               	dw	141
   406  00FD31  002A               	dw	42
   407  00FD33  C400               	dw	50176
   408  00FD35  008D               	dw	141
   409  00FD37  00EE               	dw	238
   410  00FD39  C500               	dw	50432
   411  00FD3B  000A               	dw	10
   412  00FD3D  3600               	dw	13824
   413  00FD3F  00C8               	dw	200
   414  00FD41  E000               	dw	57344
   415  00FD43  0012               	dw	18
   416  00FD45  001C               	dw	28
   417  00FD47  0010               	dw	16
   418  00FD49  0018               	dw	24
   419  00FD4B  0033               	dw	51
   420  00FD4D  002C               	dw	44
   421  00FD4F  0025               	dw	37
   422  00FD51  0028               	dw	40
   423  00FD53  0028               	dw	40
   424  00FD55  0027               	dw	39
   425  00FD57  002F               	dw	47
   426  00FD59  003C               	dw	60
   427  00FD5B  0000               	dw	0
   428  00FD5D  0003               	dw	3
   429  00FD5F  0003               	dw	3
   430  00FD61  0010               	dw	16
   431  00FD63  0080               	dw	128
   432  00FD65  0078               	dw	120
   433  00FD67  E100               	dw	57600
   434  00FD69  0012               	dw	18
   435  00FD6B  001C               	dw	28
   436  00FD6D  0010               	dw	16
   437  00FD6F  0018               	dw	24
   438  00FD71  002D               	dw	45
   439  00FD73  0028               	dw	40
   440  00FD75  0023               	dw	35
   441  00FD77  0028               	dw	40
   442  00FD79  0028               	dw	40
   443  00FD7B  0026               	dw	38
   444  00FD7D  002F               	dw	47
   445  00FD7F  003B               	dw	59
   446  00FD81  0000               	dw	0
   447  00FD83  0003               	dw	3
   448  00FD85  0003               	dw	3
   449  00FD87  0010               	dw	16
   450  00FD89  3A00               	dw	14848
   451  00FD8B  0005               	dw	5
   452  00FD8D  2A00               	dw	10752
   453  00FD8F  0000               	dw	0
   454  00FD91  0002               	dw	2
   455  00FD93  0000               	dw	0
   456  00FD95  0081               	dw	129
   457  00FD97  2B00               	dw	11008
   458  00FD99  0000               	dw	0
   459  00FD9B  0003               	dw	3
   460  00FD9D  0000               	dw	0
   461  00FD9F  00A2               	dw	162
   462  00FDA1  2900               	dw	10496
   463  00FDA3  2C00               	dw	11264
   464  00FDA5                     __end_of_InitList:
   465                           	opt stack 0
   466  00FDA5                     Timer0_Init@PRESCALE:
   467                           	opt stack 0
   468  00FDA5  0002               	dw	2
   469  00FDA7  0004               	dw	4
   470  00FDA9  0008               	dw	8
   471  00FDAB  0010               	dw	16
   472  00FDAD  0020               	dw	32
   473  00FDAF  0040               	dw	64
   474  00FDB1  0080               	dw	128
   475  00FDB3  0100               	dw	256
   476  00FDB5                     __end_ofTimer0_Init@PRESCALE:
   477                           	opt stack 0
   478  00FDB5                     PortProperty_Valid@F6830:
   479                           	opt stack 0
   480  00FDB5  00                 	db	0
   481  00FDB6  01                 	db	1
   482  00FDB7  02                 	db	2
   483  00FDB8  00                 	db	0
   484  00FDB9  01                 	db	1
   485  00FDBA  00                 	db	0
   486  00FDBB  01                 	db	1
   487  00FDBC  00                 	db	0
   488  00FDBD  02                 	db	2
   489  00FDBE  02                 	db	2
   490  00FDBF  00                 	db	0
   491  00FDC0  00                 	db	0
   492  00FDC1  03                 	db	3
   493  00FDC2  03                 	db	3
   494  00FDC3  03                 	db	3
   495  00FDC4  00                 	db	0
   496  00FDC5                     __end_ofPortProperty_Valid@F6830:
   497                           	opt stack 0
   498  00FDC5                     _dpowers:
   499                           	opt stack 0
   500  00FDC5  0001               	dw	1
   501  00FDC7  000A               	dw	10
   502  00FDC9  0064               	dw	100
   503  00FDCB  03E8               	dw	1000
   504  00FDCD  2710               	dw	10000
   505  00FDCF                     __end_of_dpowers:
   506                           	opt stack 0
   507  00FDCF                     _MASKS:
   508                           	opt stack 0
   509  00FDCF  00                 	db	0
   510  00FDD0  01                 	db	1
   511  00FDD1  03                 	db	3
   512  00FDD2  07                 	db	7
   513  00FDD3  0F                 	db	15
   514  00FDD4  1F                 	db	31
   515  00FDD5  3F                 	db	63
   516  00FDD6  7F                 	db	127
   517  00FDD7  FF                 	db	255
   518  00FDD8                     __end_of_MASKS:
   519                           	opt stack 0
   520  00FDD8                     HMI_SetButton@F7213:
   521                           	opt stack 0
   522  00FDD8  00                 	db	0
   523  00FDD9  02                 	db	2
   524  00FDDA  01                 	db	1
   525  00FDDB  03                 	db	3
   526  00FDDC                     __end_ofHMI_SetButton@F7213:
   527                           	opt stack 0
   528  00FDDC                     Timer2_Init@PRESCALE:
   529                           	opt stack 0
   530  00FDDC  01                 	db	1
   531  00FDDD  04                 	db	4
   532  00FDDE  10                 	db	16
   533  00FDDF                     __end_ofTimer2_Init@PRESCALE:
   534                           	opt stack 0
   535  00FDDF                     _Font5x7:
   536                           	opt stack 0
   537  00FDDF  00                 	db	0
   538  00FDE0  00                 	db	0
   539  00FDE1  00                 	db	0
   540  00FDE2  00                 	db	0
   541  00FDE3  00                 	db	0
   542  00FDE4  00                 	db	0
   543  00FDE5  00                 	db	0
   544  00FDE6  5F                 	db	95
   545  00FDE7  00                 	db	0
   546  00FDE8  00                 	db	0
   547  00FDE9  00                 	db	0
   548  00FDEA  07                 	db	7
   549  00FDEB  00                 	db	0
   550  00FDEC  07                 	db	7
   551  00FDED  00                 	db	0
   552  00FDEE  14                 	db	20
   553  00FDEF  7F                 	db	127
   554  00FDF0  14                 	db	20
   555  00FDF1  7F                 	db	127
   556  00FDF2  14                 	db	20
   557  00FDF3  24                 	db	36
   558  00FDF4  2A                 	db	42
   559  00FDF5  7F                 	db	127
   560  00FDF6  2A                 	db	42
   561  00FDF7  12                 	db	18
   562  00FDF8  23                 	db	35
   563  00FDF9  13                 	db	19
   564  00FDFA  08                 	db	8
   565  00FDFB  64                 	db	100
   566  00FDFC  62                 	db	98
   567  00FDFD  36                 	db	54
   568  00FDFE  49                 	db	73
   569  00FDFF  55                 	db	85
   570  00FE00  22                 	db	34
   571  00FE01  50                 	db	80
   572  00FE02  00                 	db	0
   573  00FE03  05                 	db	5
   574  00FE04  03                 	db	3
   575  00FE05  00                 	db	0
   576  00FE06  00                 	db	0
   577  00FE07  00                 	db	0
   578  00FE08  1C                 	db	28
   579  00FE09  22                 	db	34
   580  00FE0A  41                 	db	65
   581  00FE0B  00                 	db	0
   582  00FE0C  00                 	db	0
   583  00FE0D  41                 	db	65
   584  00FE0E  22                 	db	34
   585  00FE0F  1C                 	db	28
   586  00FE10  00                 	db	0
   587  00FE11  08                 	db	8
   588  00FE12  2A                 	db	42
   589  00FE13  1C                 	db	28
   590  00FE14  2A                 	db	42
   591  00FE15  08                 	db	8
   592  00FE16  08                 	db	8
   593  00FE17  08                 	db	8
   594  00FE18  3E                 	db	62
   595  00FE19  08                 	db	8
   596  00FE1A  08                 	db	8
   597  00FE1B  00                 	db	0
   598  00FE1C  50                 	db	80
   599  00FE1D  30                 	db	48
   600  00FE1E  00                 	db	0
   601  00FE1F  00                 	db	0
   602  00FE20  08                 	db	8
   603  00FE21  08                 	db	8
   604  00FE22  08                 	db	8
   605  00FE23  08                 	db	8
   606  00FE24  08                 	db	8
   607  00FE25  00                 	db	0
   608  00FE26  60                 	db	96
   609  00FE27  60                 	db	96
   610  00FE28  00                 	db	0
   611  00FE29  00                 	db	0
   612  00FE2A  20                 	db	32
   613  00FE2B  10                 	db	16
   614  00FE2C  08                 	db	8
   615  00FE2D  04                 	db	4
   616  00FE2E  02                 	db	2
   617  00FE2F  3E                 	db	62
   618  00FE30  51                 	db	81
   619  00FE31  49                 	db	73
   620  00FE32  45                 	db	69
   621  00FE33  3E                 	db	62
   622  00FE34  00                 	db	0
   623  00FE35  42                 	db	66
   624  00FE36  7F                 	db	127
   625  00FE37  40                 	db	64
   626  00FE38  00                 	db	0
   627  00FE39  42                 	db	66
   628  00FE3A  61                 	db	97
   629  00FE3B  51                 	db	81
   630  00FE3C  49                 	db	73
   631  00FE3D  46                 	db	70
   632  00FE3E  21                 	db	33
   633  00FE3F  41                 	db	65
   634  00FE40  45                 	db	69
   635  00FE41  4B                 	db	75
   636  00FE42  31                 	db	49
   637  00FE43  18                 	db	24
   638  00FE44  14                 	db	20
   639  00FE45  12                 	db	18
   640  00FE46  7F                 	db	127
   641  00FE47  10                 	db	16
   642  00FE48  27                 	db	39
   643  00FE49  45                 	db	69
   644  00FE4A  45                 	db	69
   645  00FE4B  45                 	db	69
   646  00FE4C  39                 	db	57
   647  00FE4D  3C                 	db	60
   648  00FE4E  4A                 	db	74
   649  00FE4F  49                 	db	73
   650  00FE50  49                 	db	73
   651  00FE51  30                 	db	48
   652  00FE52  01                 	db	1
   653  00FE53  71                 	db	113
   654  00FE54  09                 	db	9
   655  00FE55  05                 	db	5
   656  00FE56  03                 	db	3
   657  00FE57  36                 	db	54
   658  00FE58  49                 	db	73
   659  00FE59  49                 	db	73
   660  00FE5A  49                 	db	73
   661  00FE5B  36                 	db	54
   662  00FE5C  06                 	db	6
   663  00FE5D  49                 	db	73
   664  00FE5E  49                 	db	73
   665  00FE5F  29                 	db	41
   666  00FE60  1E                 	db	30
   667  00FE61  00                 	db	0
   668  00FE62  36                 	db	54
   669  00FE63  36                 	db	54
   670  00FE64  00                 	db	0
   671  00FE65  00                 	db	0
   672  00FE66  00                 	db	0
   673  00FE67  56                 	db	86
   674  00FE68  36                 	db	54
   675  00FE69  00                 	db	0
   676  00FE6A  00                 	db	0
   677  00FE6B  00                 	db	0
   678  00FE6C  08                 	db	8
   679  00FE6D  14                 	db	20
   680  00FE6E  22                 	db	34
   681  00FE6F  41                 	db	65
   682  00FE70  14                 	db	20
   683  00FE71  14                 	db	20
   684  00FE72  14                 	db	20
   685  00FE73  14                 	db	20
   686  00FE74  14                 	db	20
   687  00FE75  41                 	db	65
   688  00FE76  22                 	db	34
   689  00FE77  14                 	db	20
   690  00FE78  08                 	db	8
   691  00FE79  00                 	db	0
   692  00FE7A  02                 	db	2
   693  00FE7B  01                 	db	1
   694  00FE7C  51                 	db	81
   695  00FE7D  09                 	db	9
   696  00FE7E  06                 	db	6
   697  00FE7F  32                 	db	50
   698  00FE80  49                 	db	73
   699  00FE81  79                 	db	121
   700  00FE82  41                 	db	65
   701  00FE83  3E                 	db	62
   702  00FE84  7E                 	db	126
   703  00FE85  11                 	db	17
   704  00FE86  11                 	db	17
   705  00FE87  11                 	db	17
   706  00FE88  7E                 	db	126
   707  00FE89  7F                 	db	127
   708  00FE8A  49                 	db	73
   709  00FE8B  49                 	db	73
   710  00FE8C  49                 	db	73
   711  00FE8D  36                 	db	54
   712  00FE8E  3E                 	db	62
   713  00FE8F  41                 	db	65
   714  00FE90  41                 	db	65
   715  00FE91  41                 	db	65
   716  00FE92  22                 	db	34
   717  00FE93  7F                 	db	127
   718  00FE94  41                 	db	65
   719  00FE95  41                 	db	65
   720  00FE96  22                 	db	34
   721  00FE97  1C                 	db	28
   722  00FE98  7F                 	db	127
   723  00FE99  49                 	db	73
   724  00FE9A  49                 	db	73
   725  00FE9B  49                 	db	73
   726  00FE9C  41                 	db	65
   727  00FE9D  7F                 	db	127
   728  00FE9E  09                 	db	9
   729  00FE9F  09                 	db	9
   730  00FEA0  01                 	db	1
   731  00FEA1  01                 	db	1
   732  00FEA2  3E                 	db	62
   733  00FEA3  41                 	db	65
   734  00FEA4  41                 	db	65
   735  00FEA5  51                 	db	81
   736  00FEA6  32                 	db	50
   737  00FEA7  7F                 	db	127
   738  00FEA8  08                 	db	8
   739  00FEA9  08                 	db	8
   740  00FEAA  08                 	db	8
   741  00FEAB  7F                 	db	127
   742  00FEAC  00                 	db	0
   743  00FEAD  41                 	db	65
   744  00FEAE  7F                 	db	127
   745  00FEAF  41                 	db	65
   746  00FEB0  00                 	db	0
   747  00FEB1  20                 	db	32
   748  00FEB2  40                 	db	64
   749  00FEB3  41                 	db	65
   750  00FEB4  3F                 	db	63
   751  00FEB5  01                 	db	1
   752  00FEB6  7F                 	db	127
   753  00FEB7  08                 	db	8
   754  00FEB8  14                 	db	20
   755  00FEB9  22                 	db	34
   756  00FEBA  41                 	db	65
   757  00FEBB  7F                 	db	127
   758  00FEBC  40                 	db	64
   759  00FEBD  40                 	db	64
   760  00FEBE  40                 	db	64
   761  00FEBF  40                 	db	64
   762  00FEC0  7F                 	db	127
   763  00FEC1  02                 	db	2
   764  00FEC2  04                 	db	4
   765  00FEC3  02                 	db	2
   766  00FEC4  7F                 	db	127
   767  00FEC5  7F                 	db	127
   768  00FEC6  04                 	db	4
   769  00FEC7  08                 	db	8
   770  00FEC8  10                 	db	16
   771  00FEC9  7F                 	db	127
   772  00FECA  3E                 	db	62
   773  00FECB  41                 	db	65
   774  00FECC  41                 	db	65
   775  00FECD  41                 	db	65
   776  00FECE  3E                 	db	62
   777  00FECF  7F                 	db	127
   778  00FED0  09                 	db	9
   779  00FED1  09                 	db	9
   780  00FED2  09                 	db	9
   781  00FED3  06                 	db	6
   782  00FED4  3E                 	db	62
   783  00FED5  41                 	db	65
   784  00FED6  51                 	db	81
   785  00FED7  21                 	db	33
   786  00FED8  5E                 	db	94
   787  00FED9  7F                 	db	127
   788  00FEDA  09                 	db	9
   789  00FEDB  19                 	db	25
   790  00FEDC  29                 	db	41
   791  00FEDD  46                 	db	70
   792  00FEDE  46                 	db	70
   793  00FEDF  49                 	db	73
   794  00FEE0  49                 	db	73
   795  00FEE1  49                 	db	73
   796  00FEE2  31                 	db	49
   797  00FEE3  01                 	db	1
   798  00FEE4  01                 	db	1
   799  00FEE5  7F                 	db	127
   800  00FEE6  01                 	db	1
   801  00FEE7  01                 	db	1
   802  00FEE8  3F                 	db	63
   803  00FEE9  40                 	db	64
   804  00FEEA  40                 	db	64
   805  00FEEB  40                 	db	64
   806  00FEEC  3F                 	db	63
   807  00FEED  1F                 	db	31
   808  00FEEE  20                 	db	32
   809  00FEEF  40                 	db	64
   810  00FEF0  20                 	db	32
   811  00FEF1  1F                 	db	31
   812  00FEF2  7F                 	db	127
   813  00FEF3  20                 	db	32
   814  00FEF4  18                 	db	24
   815  00FEF5  20                 	db	32
   816  00FEF6  7F                 	db	127
   817  00FEF7  63                 	db	99
   818  00FEF8  14                 	db	20
   819  00FEF9  08                 	db	8
   820  00FEFA  14                 	db	20
   821  00FEFB  63                 	db	99
   822  00FEFC  03                 	db	3
   823  00FEFD  04                 	db	4
   824  00FEFE  78                 	db	120
   825  00FEFF  04                 	db	4
   826  00FF00  03                 	db	3
   827  00FF01  61                 	db	97
   828  00FF02  51                 	db	81
   829  00FF03  49                 	db	73
   830  00FF04  45                 	db	69
   831  00FF05  43                 	db	67
   832  00FF06  00                 	db	0
   833  00FF07  00                 	db	0
   834  00FF08  7F                 	db	127
   835  00FF09  41                 	db	65
   836  00FF0A  41                 	db	65
   837  00FF0B  02                 	db	2
   838  00FF0C  04                 	db	4
   839  00FF0D  08                 	db	8
   840  00FF0E  10                 	db	16
   841  00FF0F  20                 	db	32
   842  00FF10  41                 	db	65
   843  00FF11  41                 	db	65
   844  00FF12  7F                 	db	127
   845  00FF13  00                 	db	0
   846  00FF14  00                 	db	0
   847  00FF15  04                 	db	4
   848  00FF16  02                 	db	2
   849  00FF17  01                 	db	1
   850  00FF18  02                 	db	2
   851  00FF19  04                 	db	4
   852  00FF1A  40                 	db	64
   853  00FF1B  40                 	db	64
   854  00FF1C  40                 	db	64
   855  00FF1D  40                 	db	64
   856  00FF1E  40                 	db	64
   857  00FF1F  00                 	db	0
   858  00FF20  01                 	db	1
   859  00FF21  02                 	db	2
   860  00FF22  04                 	db	4
   861  00FF23  00                 	db	0
   862  00FF24  20                 	db	32
   863  00FF25  54                 	db	84
   864  00FF26  54                 	db	84
   865  00FF27  54                 	db	84
   866  00FF28  78                 	db	120
   867  00FF29  7F                 	db	127
   868  00FF2A  48                 	db	72
   869  00FF2B  44                 	db	68
   870  00FF2C  44                 	db	68
   871  00FF2D  38                 	db	56
   872  00FF2E  38                 	db	56
   873  00FF2F  44                 	db	68
   874  00FF30  44                 	db	68
   875  00FF31  44                 	db	68
   876  00FF32  20                 	db	32
   877  00FF33  38                 	db	56
   878  00FF34  44                 	db	68
   879  00FF35  44                 	db	68
   880  00FF36  48                 	db	72
   881  00FF37  7F                 	db	127
   882  00FF38  38                 	db	56
   883  00FF39  54                 	db	84
   884  00FF3A  54                 	db	84
   885  00FF3B  54                 	db	84
   886  00FF3C  18                 	db	24
   887  00FF3D  08                 	db	8
   888  00FF3E  7E                 	db	126
   889  00FF3F  09                 	db	9
   890  00FF40  01                 	db	1
   891  00FF41  02                 	db	2
   892  00FF42  08                 	db	8
   893  00FF43  14                 	db	20
   894  00FF44  54                 	db	84
   895  00FF45  54                 	db	84
   896  00FF46  3C                 	db	60
   897  00FF47  7F                 	db	127
   898  00FF48  08                 	db	8
   899  00FF49  04                 	db	4
   900  00FF4A  04                 	db	4
   901  00FF4B  78                 	db	120
   902  00FF4C  00                 	db	0
   903  00FF4D  44                 	db	68
   904  00FF4E  7D                 	db	125
   905  00FF4F  40                 	db	64
   906  00FF50  00                 	db	0
   907  00FF51  20                 	db	32
   908  00FF52  40                 	db	64
   909  00FF53  44                 	db	68
   910  00FF54  3D                 	db	61
   911  00FF55  00                 	db	0
   912  00FF56  00                 	db	0
   913  00FF57  7F                 	db	127
   914  00FF58  10                 	db	16
   915  00FF59  28                 	db	40
   916  00FF5A  44                 	db	68
   917  00FF5B  00                 	db	0
   918  00FF5C  41                 	db	65
   919  00FF5D  7F                 	db	127
   920  00FF5E  40                 	db	64
   921  00FF5F  00                 	db	0
   922  00FF60  7C                 	db	124
   923  00FF61  04                 	db	4
   924  00FF62  18                 	db	24
   925  00FF63  04                 	db	4
   926  00FF64  78                 	db	120
   927  00FF65  7C                 	db	124
   928  00FF66  08                 	db	8
   929  00FF67  04                 	db	4
   930  00FF68  04                 	db	4
   931  00FF69  78                 	db	120
   932  00FF6A  38                 	db	56
   933  00FF6B  44                 	db	68
   934  00FF6C  44                 	db	68
   935  00FF6D  44                 	db	68
   936  00FF6E  38                 	db	56
   937  00FF6F  7C                 	db	124
   938  00FF70  14                 	db	20
   939  00FF71  14                 	db	20
   940  00FF72  14                 	db	20
   941  00FF73  08                 	db	8
   942  00FF74  08                 	db	8
   943  00FF75  14                 	db	20
   944  00FF76  14                 	db	20
   945  00FF77  18                 	db	24
   946  00FF78  7C                 	db	124
   947  00FF79  7C                 	db	124
   948  00FF7A  08                 	db	8
   949  00FF7B  04                 	db	4
   950  00FF7C  04                 	db	4
   951  00FF7D  08                 	db	8
   952  00FF7E  48                 	db	72
   953  00FF7F  54                 	db	84
   954  00FF80  54                 	db	84
   955  00FF81  54                 	db	84
   956  00FF82  20                 	db	32
   957  00FF83  04                 	db	4
   958  00FF84  3F                 	db	63
   959  00FF85  44                 	db	68
   960  00FF86  40                 	db	64
   961  00FF87  20                 	db	32
   962  00FF88  3C                 	db	60
   963  00FF89  40                 	db	64
   964  00FF8A  40                 	db	64
   965  00FF8B  20                 	db	32
   966  00FF8C  7C                 	db	124
   967  00FF8D  1C                 	db	28
   968  00FF8E  20                 	db	32
   969  00FF8F  40                 	db	64
   970  00FF90  20                 	db	32
   971  00FF91  1C                 	db	28
   972  00FF92  3C                 	db	60
   973  00FF93  40                 	db	64
   974  00FF94  30                 	db	48
   975  00FF95  40                 	db	64
   976  00FF96  3C                 	db	60
   977  00FF97  44                 	db	68
   978  00FF98  28                 	db	40
   979  00FF99  10                 	db	16
   980  00FF9A  28                 	db	40
   981  00FF9B  44                 	db	68
   982  00FF9C  0C                 	db	12
   983  00FF9D  50                 	db	80
   984  00FF9E  50                 	db	80
   985  00FF9F  50                 	db	80
   986  00FFA0  3C                 	db	60
   987  00FFA1  44                 	db	68
   988  00FFA2  64                 	db	100
   989  00FFA3  54                 	db	84
   990  00FFA4  4C                 	db	76
   991  00FFA5  44                 	db	68
   992  00FFA6  00                 	db	0
   993  00FFA7  08                 	db	8
   994  00FFA8  36                 	db	54
   995  00FFA9  41                 	db	65
   996  00FFAA  00                 	db	0
   997  00FFAB  00                 	db	0
   998  00FFAC  00                 	db	0
   999  00FFAD  7F                 	db	127
  1000  00FFAE  00                 	db	0
  1001  00FFAF  00                 	db	0
  1002  00FFB0  00                 	db	0
  1003  00FFB1  41                 	db	65
  1004  00FFB2  36                 	db	54
  1005  00FFB3  08                 	db	8
  1006  00FFB4  00                 	db	0
  1007  00FFB5  08                 	db	8
  1008  00FFB6  08                 	db	8
  1009  00FFB7  2A                 	db	42
  1010  00FFB8  1C                 	db	28
  1011  00FFB9  08                 	db	8
  1012  00FFBA  08                 	db	8
  1013  00FFBB  1C                 	db	28
  1014  00FFBC  2A                 	db	42
  1015  00FFBD  08                 	db	8
  1016  00FFBE  08                 	db	8
  1017  00FFBF                     __end_of_Font5x7:
  1018                           	opt stack 0
  1019  00FFBF                     sin@coeff_a:
  1020                           	opt stack 0
  1021  00FFBF  F3EC               	dw	62444
  1022  00FFC1  484A               	dw	18506
  1023  00FFC3  9535               	dw	38197
  1024  00FFC5  C795               	dw	51093
  1025  00FFC7  C117               	dw	49431
  1026  00FFC9  45DC               	dw	17884
  1027  00FFCB  DBFD               	dw	56317
  1028  00FFCD  C36D               	dw	50029
  1029  00FFCF  B372               	dw	45938
  1030  00FFD1  4033               	dw	16435
  1031  00FFD3                     __end_ofsin@coeff_a:
  1032                           	opt stack 0
  1033  00FFD3                     sin@coeff_b:
  1034                           	opt stack 0
  1035  00FFD3  342B               	dw	13355
  1036  00FFD5  4801               	dw	18433
  1037  00FFD7  9D7F               	dw	40319
  1038  00FFD9  45B0               	dw	17840
  1039  00FFDB  FFE7               	dw	65511
  1040  00FFDD  42D9               	dw	17113
  1041  00FFDF  0000               	dw	0
  1042  00FFE1  3F80               	dw	16256
  1043  00FFE3                     __end_ofsin@coeff_b:
  1044                           	opt stack 0
  1045  00FFE3                     _PortG_Property:
  1046                           	opt stack 0
  1047  00FFE3  FC00               	dw	64512
  1048  00FFE5                     __end_of_PortG_Property:
  1049                           	opt stack 0
  1050  00FFE5                     _PortF_Property:
  1051                           	opt stack 0
  1052  00FFE5  0FFF               	dw	4095
  1053  00FFE7                     __end_of_PortF_Property:
  1054                           	opt stack 0
  1055  00FFE7                     _PortE_Property:
  1056                           	opt stack 0
  1057  00FFE7  0000               	dw	0
  1058  00FFE9                     __end_of_PortE_Property:
  1059                           	opt stack 0
  1060  00FFE9                     _PortD_Property:
  1061                           	opt stack 0
  1062  00FFE9  FFFF               	dw	65535
  1063  00FFEB                     __end_of_PortD_Property:
  1064                           	opt stack 0
  1065  00FFEB                     _PortC_Property:
  1066                           	opt stack 0
  1067  00FFEB  FFF0               	dw	65520
  1068  00FFED                     __end_of_PortC_Property:
  1069                           	opt stack 0
  1070  00FFED                     _PortB_Property:
  1071                           	opt stack 0
  1072  00FFED  FF00               	dw	65280
  1073  00FFEF                     __end_of_PortB_Property:
  1074                           	opt stack 0
  1075  00FFEF                     _PortA_Property:
  1076                           	opt stack 0
  1077  00FFEF  00FF               	dw	255
  1078  00FFF1                     __end_of_PortA_Property:
  1079                           	opt stack 0
  1080  0000                     _TMR0	set	4054
  1081  0000                     _RCREG1	set	4015
  1082  0000                     _TXREG1	set	4014
  1083  0000                     _SPBRG1	set	4016
  1084  0000                     _TXSTA1bits	set	4013
  1085  0000                     _BAUDCON1bits	set	3966
  1086  0000                     _RCSTA1	set	4012
  1087  0000                     _TXSTA1	set	4013
  1088  0000                     _TRISCbits	set	3988
  1089  0000                     _PR2	set	4043
  1090  0000                     _T2CONbits	set	4042
  1091  0000                     _T0CONbits	set	4053
  1092  0000                     _RCONbits	set	4048
  1093  0000                     _OSCTUNEbits	set	3995
  1094  0000                     _PIR3	set	4004
  1095  0000                     _PIR2	set	4001
  1096  0000                     _PIR1	set	3998
  1097  0000                     _INTCONbits	set	4082
  1098  0000                     _SSP2CON2bits	set	3947
  1099  0000                     _SSP1CON2bits	set	4037
  1100  0000                     _SSP1ADD	set	4040
  1101  0000                     _ANCON0	set	4033
  1102  0000                     _ADRESL	set	4035
  1103  0000                     _ADRESH	set	4036
  1104  0000                     _ADCON1bits	set	4033
  1105  0000                     _ADCON0bits	set	4034
  1106  0000                     _SSP2CON1bits	set	3948
  1107  0000                     _SSP1CON1bits	set	4038
  1108  0000                     _SSP2STATbits	set	3949
  1109  0000                     _SSP1STATbits	set	4039
  1110  0000                     _PIE3bits	set	4003
  1111  0000                     _PIE1bits	set	3997
  1112  0000                     _PIR3bits	set	4004
  1113  0000                     _PIR1bits	set	3998
  1114  0000                     _IPR3bits	set	4005
  1115  0000                     _IPR1bits	set	3999
  1116  0000                     _PORTFbits	set	3973
  1117  0000                     _SSP2CON2	set	3947
  1118  0000                     _SSP1CON2	set	4037
  1119  0000                     _SSP2BUF	set	3951
  1120  0000                     _SSP2CON1	set	3948
  1121  0000                     _SSP2STAT	set	3949
  1122  0000                     _SSP1BUF	set	4041
  1123  0000                     _SSP1CON1	set	4038
  1124  0000                     _SSP1STAT	set	4039
  1125  0000                     _LATG	set	3983
  1126  0000                     _LATF	set	3982
  1127  0000                     _LATE	set	3981
  1128  0000                     _LATD	set	3980
  1129  0000                     _LATC	set	3979
  1130  0000                     _LATB	set	3978
  1131  0000                     _LATA	set	3977
  1132  0000                     _TRISG	set	3992
  1133  0000                     _TRISF	set	3991
  1134  0000                     _TRISE	set	3990
  1135  0000                     _TRISD	set	3989
  1136  0000                     _TRISC	set	3988
  1137  0000                     _TRISB	set	3987
  1138  0000                     _TRISA	set	3986
  1139  0000                     _PORTG	set	3974
  1140  0000                     _PORTF	set	3973
  1141  0000                     _PORTE	set	3972
  1142  0000                     _PORTD	set	3971
  1143  0000                     _PORTC	set	3970
  1144  0000                     _PORTB	set	3969
  1145  0000                     _PORTA	set	3968
  1146  00FFF1                     STR_2:
  1147  00FFF1  56                 	db	86	;'V'
  1148  00FFF2  61                 	db	97	;'a'
  1149  00FFF3  72                 	db	114	;'r'
  1150  00FFF4  31                 	db	49	;'1'
  1151  00FFF5  3A                 	db	58	;':'
  1152  00FFF6  20                 	db	32
  1153  00FFF7  25                 	db	37
  1154  00FFF8  64                 	db	100	;'d'
  1155  00FFF9  0A                 	db	10
  1156  00FFFA  00                 	db	0
  1157  00FFFB                     STR_1:
  1158  00FFFB  25                 	db	37
  1159  00FFFC  63                 	db	99	;'c'
  1160  00FFFD  00                 	db	0
  1161  0000                     
  1162                           ; #config settings
  1163  00FFFE  00                 	db	0	; dummy byte at the end
  1164  0000                     
  1165                           	psect	cinit
  1166  012CF0                     __pcinit:
  1167                           	opt stack 0
  1168  012CF0                     start_initialization:
  1169                           	opt stack 0
  1170  012CF0                     __initialization:
  1171                           	opt stack 0
  1172                           
  1173                           ; Initialize objects allocated to BANK3 (198 bytes)
  1174                           ; load TBLPTR registers with __pidataBANK3
  1175  012CF0  0E24               	movlw	low __pidataBANK3
  1176  012CF2  6EF6               	movwf	tblptrl,c
  1177  012CF4  0E31               	movlw	high __pidataBANK3
  1178  012CF6  6EF7               	movwf	tblptrh,c
  1179  012CF8  0E01               	movlw	low (__pidataBANK3 shr (0+16))
  1180  012CFA  6EF8               	movwf	tblptru,c
  1181  012CFC  EE03  F000         	lfsr	0,__pdataBANK3
  1182  012D00  EE10 F0C6          	lfsr	1,198
  1183  012D04                     copy_data0:
  1184  012D04  0009               	tblrd		*+
  1185  012D06  CFF5 FFEE          	movff	tablat,postinc0
  1186  012D0A  50E5               	movf	postdec1,w,c
  1187  012D0C  50E1               	movf	fsr1l,w,c
  1188  012D0E  E1FA               	bnz	copy_data0
  1189                           
  1190                           ; Initialize objects allocated to BANK1 (12 bytes)
  1191                           ; load TBLPTR registers with __pidataBANK1
  1192  012D10  0E7A               	movlw	low __pidataBANK1
  1193  012D12  6EF6               	movwf	tblptrl,c
  1194  012D14  0E4B               	movlw	high __pidataBANK1
  1195  012D16  6EF7               	movwf	tblptrh,c
  1196  012D18  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1197  012D1A  6EF8               	movwf	tblptru,c
  1198  012D1C  EE01  F0F0         	lfsr	0,__pdataBANK1
  1199  012D20  EE10 F00C          	lfsr	1,12
  1200  012D24                     copy_data1:
  1201  012D24  0009               	tblrd		*+
  1202  012D26  CFF5 FFEE          	movff	tablat,postinc0
  1203  012D2A  50E5               	movf	postdec1,w,c
  1204  012D2C  50E1               	movf	fsr1l,w,c
  1205  012D2E  E1FA               	bnz	copy_data1
  1206                           
  1207                           ; Initialize objects allocated to BANK0 (6 bytes)
  1208                           ; load TBLPTR registers with __pidataBANK0
  1209  012D30  0EC4               	movlw	low __pidataBANK0
  1210  012D32  6EF6               	movwf	tblptrl,c
  1211  012D34  0E4B               	movlw	high __pidataBANK0
  1212  012D36  6EF7               	movwf	tblptrh,c
  1213  012D38  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1214  012D3A  6EF8               	movwf	tblptru,c
  1215  012D3C  EE00  F0FA         	lfsr	0,__pdataBANK0
  1216  012D40  EE10 F006          	lfsr	1,6
  1217  012D44                     copy_data2:
  1218  012D44  0009               	tblrd		*+
  1219  012D46  CFF5 FFEE          	movff	tablat,postinc0
  1220  012D4A  50E5               	movf	postdec1,w,c
  1221  012D4C  50E1               	movf	fsr1l,w,c
  1222  012D4E  E1FA               	bnz	copy_data2
  1223                           
  1224                           ; Initialize objects allocated to COMRAM (15 bytes)
  1225                           ; load TBLPTR registers with __pidataCOMRAM
  1226  012D50  0E24               	movlw	low __pidataCOMRAM
  1227  012D52  6EF6               	movwf	tblptrl,c
  1228  012D54  0E4B               	movlw	high __pidataCOMRAM
  1229  012D56  6EF7               	movwf	tblptrh,c
  1230  012D58  0E01               	movlw	low (__pidataCOMRAM shr (0+16))
  1231  012D5A  6EF8               	movwf	tblptru,c
  1232  012D5C  EE00  F042         	lfsr	0,__pdataCOMRAM
  1233  012D60  EE10 F00F          	lfsr	1,15
  1234  012D64                     copy_data3:
  1235  012D64  0009               	tblrd		*+
  1236  012D66  CFF5 FFEE          	movff	tablat,postinc0
  1237  012D6A  50E5               	movf	postdec1,w,c
  1238  012D6C  50E1               	movf	fsr1l,w,c
  1239  012D6E  E1FA               	bnz	copy_data3
  1240                           
  1241                           ; Clear objects allocated to BIGRAM (300 bytes)
  1242  012D70  EE04  F063         	lfsr	0,__pbssBIGRAM
  1243  012D74  EE11 F02C          	lfsr	1,300
  1244  012D78                     clear_0:
  1245  012D78  6AEE               	clrf	postinc0,c
  1246  012D7A  50E5               	movf	postdec1,w,c
  1247  012D7C  50E1               	movf	fsr1l,w,c
  1248  012D7E  E1FC               	bnz	clear_0
  1249  012D80  50E2               	movf	fsr1h,w,c
  1250  012D82  E1FA               	bnz	clear_0
  1251                           
  1252                           ; Clear objects allocated to BANK4 (99 bytes)
  1253  012D84  EE04  F000         	lfsr	0,__pbssBANK4
  1254  012D88  0E63               	movlw	99
  1255  012D8A                     clear_1:
  1256  012D8A  6AEE               	clrf	postinc0,c
  1257  012D8C  06E8               	decf	wreg,f,c
  1258  012D8E  E1FD               	bnz	clear_1
  1259                           
  1260                           ; Clear objects allocated to BANK2 (170 bytes)
  1261  012D90  EE02  F000         	lfsr	0,__pbssBANK2
  1262  012D94  0EAA               	movlw	170
  1263  012D96                     clear_2:
  1264  012D96  6AEE               	clrf	postinc0,c
  1265  012D98  06E8               	decf	wreg,f,c
  1266  012D9A  E1FD               	bnz	clear_2
  1267                           
  1268                           ; Clear objects allocated to BANK1 (240 bytes)
  1269  012D9C  EE01  F000         	lfsr	0,__pbssBANK1
  1270  012DA0  0EF0               	movlw	240
  1271  012DA2                     clear_3:
  1272  012DA2  6AEE               	clrf	postinc0,c
  1273  012DA4  06E8               	decf	wreg,f,c
  1274  012DA6  E1FD               	bnz	clear_3
  1275                           
  1276                           ; Clear objects allocated to BANK0 (90 bytes)
  1277  012DA8  EE00  F060         	lfsr	0,__pbssBANK0
  1278  012DAC  0E5A               	movlw	90
  1279  012DAE                     clear_4:
  1280  012DAE  6AEE               	clrf	postinc0,c
  1281  012DB0  06E8               	decf	wreg,f,c
  1282  012DB2  E1FD               	bnz	clear_4
  1283                           
  1284                           ; Clear objects allocated to COMRAM (25 bytes)
  1285  012DB4  EE00  F029         	lfsr	0,__pbssCOMRAM
  1286  012DB8  0E19               	movlw	25
  1287  012DBA                     clear_5:
  1288  012DBA  6AEE               	clrf	postinc0,c
  1289  012DBC  06E8               	decf	wreg,f,c
  1290  012DBE  E1FD               	bnz	clear_5
  1291  012DC0                     end_of_initialization:
  1292                           	opt stack 0
  1293  012DC0                     __end_of__initialization:
  1294                           	opt stack 0
  1295  012DC0  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1296  012DC2  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1297  012DC4  0100               	movlb	0
  1298  012DC6  EF74  F0A5         	goto	_main	;jump to C main() function
  1299                           tblptru	equ	0xFF8
  1300                           tblptrh	equ	0xFF7
  1301                           tblptrl	equ	0xFF6
  1302                           tablat	equ	0xFF5
  1303                           postinc0	equ	0xFEE
  1304                           wreg	equ	0xFE8
  1305                           postdec1	equ	0xFE5
  1306                           fsr1h	equ	0xFE2
  1307                           fsr1l	equ	0xFE1
  1308                           
  1309                           	psect	bssCOMRAM
  1310  000029                     __pbssCOMRAM:
  1311                           	opt stack 0
  1312  000029                     _currentPos:
  1313                           	opt stack 0
  1314  000029                     	ds	2
  1315  00002B                     _yPosNext:
  1316                           	opt stack 0
  1317  00002B                     	ds	2
  1318  00002D                     _xPosNext:
  1319                           	opt stack 0
  1320  00002D                     	ds	2
  1321  00002F                     _distanceTotal:
  1322                           	opt stack 0
  1323  00002F                     	ds	2
  1324  000031                     HMI_GRender@a:
  1325                           	opt stack 0
  1326  000031                     	ds	2
  1327  000033                     _gBackcolour:
  1328                           	opt stack 0
  1329  000033                     	ds	2
  1330  000035                     _currentPosChar:
  1331                           	opt stack 0
  1332  000035                     	ds	1
  1333  000036                     _rightWall:
  1334                           	opt stack 0
  1335  000036                     	ds	1
  1336  000037                     _stepperMoved:
  1337                           	opt stack 0
  1338  000037                     	ds	1
  1339  000038                     _iRVirtualWall:
  1340                           	opt stack 0
  1341  000038                     	ds	1
  1342  000039                     _iRBumpDrop:
  1343                           	opt stack 0
  1344  000039                     	ds	1
  1345  00003A                     _iRScriptIndex:
  1346                           	opt stack 0
  1347  00003A                     	ds	1
  1348  00003B                     rand@screw:
  1349                           	opt stack 0
  1350  00003B                     	ds	1
  1351  00003C                     OutSeg@a:
  1352                           	opt stack 0
  1353  00003C                     	ds	1
  1354  00003D                     OutSeg@segset:
  1355                           	opt stack 0
  1356  00003D                     	ds	1
  1357  00003E                     OutSeg@cur:
  1358                           	opt stack 0
  1359  00003E                     	ds	1
  1360  00003F                     _lBufferY:
  1361                           	opt stack 0
  1362  00003F                     	ds	1
  1363  000040                     _lBufferX:
  1364                           	opt stack 0
  1365  000040                     	ds	1
  1366  000041                     _clearall:
  1367                           	opt stack 0
  1368  000041                     	ds	1
  1369                           tblptru	equ	0xFF8
  1370                           tblptrh	equ	0xFF7
  1371                           tblptrl	equ	0xFF6
  1372                           tablat	equ	0xFF5
  1373                           postinc0	equ	0xFEE
  1374                           wreg	equ	0xFE8
  1375                           postdec1	equ	0xFE5
  1376                           fsr1h	equ	0xFE2
  1377                           fsr1l	equ	0xFE1
  1378                           
  1379                           	psect	dataCOMRAM
  1380  000042                     __pdataCOMRAM:
  1381                           	opt stack 0
  1382  000042                     _gCursor:
  1383                           	opt stack 0
  1384  000042                     	ds	4
  1385  000046                     _yPos:
  1386                           	opt stack 0
  1387  000046                     	ds	2
  1388  000048                     _xPos:
  1389                           	opt stack 0
  1390  000048                     	ds	2
  1391  00004A                     _bearing:
  1392                           	opt stack 0
  1393  00004A                     	ds	2
  1394  00004C                     _Bus_State:
  1395                           	opt stack 0
  1396  00004C                     	ds	1
  1397  00004D                     _change:
  1398                           	opt stack 0
  1399  00004D                     	ds	1
  1400  00004E                     	ds	1
  1401  00004F                     _l:
  1402                           	opt stack 0
  1403  00004F                     	ds	1
  1404  000050                     _w:
  1405                           	opt stack 0
  1406  000050                     	ds	1
  1407                           tblptru	equ	0xFF8
  1408                           tblptrh	equ	0xFF7
  1409                           tblptrl	equ	0xFF6
  1410                           tablat	equ	0xFF5
  1411                           postinc0	equ	0xFEE
  1412                           wreg	equ	0xFE8
  1413                           postdec1	equ	0xFE5
  1414                           fsr1h	equ	0xFE2
  1415                           fsr1l	equ	0xFE1
  1416                           
  1417                           	psect	bssBANK0
  1418  000060                     __pbssBANK0:
  1419                           	opt stack 0
  1420  000060                     _gISR:
  1421                           	opt stack 0
  1422  000060                     	ds	3
  1423  000063                     _lQueue:
  1424                           	opt stack 0
  1425  000063                     	ds	3
  1426  000066                     _lStepFunction:
  1427                           	opt stack 0
  1428  000066                     	ds	3
  1429  000069                     _cardinalAngle:
  1430                           	opt stack 0
  1431  000069                     	ds	2
  1432  00006B                     _localSensorAngle:
  1433                           	opt stack 0
  1434  00006B                     	ds	2
  1435  00006D                     _IRValue:
  1436                           	opt stack 0
  1437  00006D                     	ds	2
  1438  00006F                     _angleTotal:
  1439                           	opt stack 0
  1440  00006F                     	ds	2
  1441  000071                     _pShiftVal:
  1442                           	opt stack 0
  1443  000071                     	ds	2
  1444  000073                     _val:
  1445                           	opt stack 0
  1446  000073                     	ds	2
  1447  000075                     _COUNTER:
  1448                           	opt stack 0
  1449  000075                     	ds	2
  1450  000077                     _lMotor:
  1451                           	opt stack 0
  1452  000077                     	ds	2
  1453  000079                     _lCurrent:
  1454                           	opt stack 0
  1455  000079                     	ds	2
  1456  00007B                     SPI_Send9@dat:
  1457                           	opt stack 0
  1458  00007B                     	ds	2
  1459  00007D                     _iRDropCaster:
  1460                           	opt stack 0
  1461  00007D                     	ds	1
  1462  00007E                     _iRDropLeft:
  1463                           	opt stack 0
  1464  00007E                     	ds	1
  1465  00007F                     _iRDropRight:
  1466                           	opt stack 0
  1467  00007F                     	ds	1
  1468  000080                     _iRBumpLeft:
  1469                           	opt stack 0
  1470  000080                     	ds	1
  1471  000081                     _iRBumpRight:
  1472                           	opt stack 0
  1473  000081                     	ds	1
  1474  000082                     _iRCliffR:
  1475                           	opt stack 0
  1476  000082                     	ds	1
  1477  000083                     _iRCliffFR:
  1478                           	opt stack 0
  1479  000083                     	ds	1
  1480  000084                     _iRCliffFL:
  1481                           	opt stack 0
  1482  000084                     	ds	1
  1483  000085                     _iRCliffL:
  1484                           	opt stack 0
  1485  000085                     	ds	1
  1486  000086                     _iRWall:
  1487                           	opt stack 0
  1488  000086                     	ds	1
  1489  000087                     Event_TestButton@j:
  1490                           	opt stack 0
  1491  000087                     	ds	1
  1492  000088                     _u:
  1493                           	opt stack 0
  1494  000088                     	ds	1
  1495  000089                     _j:
  1496                           	opt stack 0
  1497  000089                     	ds	1
  1498  00008A                     _i:
  1499                           	opt stack 0
  1500  00008A                     	ds	1
  1501  00008B                     Timer2_Init@PRE:
  1502                           	opt stack 0
  1503  00008B                     	ds	1
  1504  00008C                     Timer2_Init@INDEX:
  1505                           	opt stack 0
  1506  00008C                     	ds	1
  1507  00008D                     Timer0_Init@PRE:
  1508                           	opt stack 0
  1509  00008D                     	ds	1
  1510  00008E                     _INDEX:
  1511                           	opt stack 0
  1512  00008E                     	ds	1
  1513  00008F                     _ADC_Initialised:
  1514                           	opt stack 0
  1515  00008F                     	ds	1
  1516  000090                     _PortE:
  1517                           	opt stack 0
  1518  000090                     	ds	10
  1519  00009A                     _PortD:
  1520                           	opt stack 0
  1521  00009A                     	ds	10
  1522  0000A4                     _PortC:
  1523                           	opt stack 0
  1524  0000A4                     	ds	10
  1525  0000AE                     _I2C1T:
  1526                           	opt stack 0
  1527  0000AE                     	ds	7
  1528  0000B5                     _ADC_AN0:
  1529                           	opt stack 0
  1530  0000B5                     	ds	5
  1531                           tblptru	equ	0xFF8
  1532                           tblptrh	equ	0xFF7
  1533                           tblptrl	equ	0xFF6
  1534                           tablat	equ	0xFF5
  1535                           postinc0	equ	0xFEE
  1536                           wreg	equ	0xFE8
  1537                           postdec1	equ	0xFE5
  1538                           fsr1h	equ	0xFE2
  1539                           fsr1l	equ	0xFE1
  1540                           
  1541                           	psect	dataBANK0
  1542  0000FA                     __pdataBANK0:
  1543                           	opt stack 0
  1544  0000FA                     _gridSize:
  1545                           	opt stack 0
  1546  0000FA                     	ds	2
  1547  0000FC                     _gForecolour:
  1548                           	opt stack 0
  1549  0000FC                     	ds	2
  1550  0000FE                     	ds	1
  1551  0000FF                     	ds	1
  1552                           tblptru	equ	0xFF8
  1553                           tblptrh	equ	0xFF7
  1554                           tblptrl	equ	0xFF6
  1555                           tablat	equ	0xFF5
  1556                           postinc0	equ	0xFEE
  1557                           wreg	equ	0xFE8
  1558                           postdec1	equ	0xFE5
  1559                           fsr1h	equ	0xFE2
  1560                           fsr1l	equ	0xFE1
  1561                           
  1562                           	psect	bssBANK1
  1563  000100                     __pbssBANK1:
  1564                           	opt stack 0
  1565  000100                     _lCBuffer:
  1566                           	opt stack 0
  1567  000100                     	ds	30
  1568  00011E                     _iRAngleSS:
  1569                           	opt stack 0
  1570  00011E                     	ds	4
  1571  000122                     _iRDistanceSS:
  1572                           	opt stack 0
  1573  000122                     	ds	4
  1574  000126                     Timer2_Init@DIV:
  1575                           	opt stack 0
  1576  000126                     	ds	4
  1577  00012A                     Timer0_Init@DIV:
  1578                           	opt stack 0
  1579  00012A                     	ds	4
  1580  00012E                     _I2C2_More:
  1581                           	opt stack 0
  1582  00012E                     	ds	3
  1583  000131                     _I2C1_More:
  1584                           	opt stack 0
  1585  000131                     	ds	3
  1586  000134                     _I2C2_Done:
  1587                           	opt stack 0
  1588  000134                     	ds	3
  1589  000137                     _I2C1_Done:
  1590                           	opt stack 0
  1591  000137                     	ds	3
  1592  00013A                     _errno:
  1593                           	opt stack 0
  1594  00013A                     	ds	2
  1595  00013C                     _iRAngle:
  1596                           	opt stack 0
  1597  00013C                     	ds	2
  1598  00013E                     _iRDistance:
  1599                           	opt stack 0
  1600  00013E                     	ds	2
  1601  000140                     _HMIBoard:
  1602                           	opt stack 0
  1603  000140                     	ds	58
  1604  00017A                     _SPI1:
  1605                           	opt stack 0
  1606  00017A                     	ds	11
  1607  000185                     _SPI2:
  1608                           	opt stack 0
  1609  000185                     	ds	11
  1610  000190                     _DIPSwitch:
  1611                           	opt stack 0
  1612  000190                     	ds	10
  1613  00019A                     _TestButton:
  1614                           	opt stack 0
  1615  00019A                     	ds	10
  1616  0001A4                     _PortG:
  1617                           	opt stack 0
  1618  0001A4                     	ds	10
  1619  0001AE                     _PortB:
  1620                           	opt stack 0
  1621  0001AE                     	ds	10
  1622  0001B8                     _PortA:
  1623                           	opt stack 0
  1624  0001B8                     	ds	10
  1625  0001C2                     _PortF:
  1626                           	opt stack 0
  1627  0001C2                     	ds	10
  1628  0001CC                     _I2C2T:
  1629                           	opt stack 0
  1630  0001CC                     	ds	7
  1631  0001D3                     _Stepper:
  1632                           	opt stack 0
  1633  0001D3                     	ds	6
  1634  0001D9                     _ADC_AN3:
  1635                           	opt stack 0
  1636  0001D9                     	ds	5
  1637  0001DE                     _ADC_AN2:
  1638                           	opt stack 0
  1639  0001DE                     	ds	5
  1640  0001E3                     _ADC_AN1:
  1641                           	opt stack 0
  1642  0001E3                     	ds	5
  1643  0001E8                     LCD_DrawRectangle@p4:
  1644                           	opt stack 0
  1645  0001E8                     	ds	4
  1646  0001EC                     LCD_DrawRectangle@p2:
  1647                           	opt stack 0
  1648  0001EC                     	ds	4
  1649                           tblptru	equ	0xFF8
  1650                           tblptrh	equ	0xFF7
  1651                           tblptrl	equ	0xFF6
  1652                           tablat	equ	0xFF5
  1653                           postinc0	equ	0xFEE
  1654                           wreg	equ	0xFE8
  1655                           postdec1	equ	0xFE5
  1656                           fsr1h	equ	0xFE2
  1657                           fsr1l	equ	0xFE1
  1658                           
  1659                           	psect	dataBANK1
  1660  0001F0                     __pdataBANK1:
  1661                           	opt stack 0
  1662  0001F0                     Console_Render@F6956:
  1663                           	opt stack 0
  1664  0001F0                     	ds	4
  1665  0001F4                     _gLineSize:
  1666                           	opt stack 0
  1667  0001F4                     	ds	4
  1668  0001F8                     _gCharSize:
  1669                           	opt stack 0
  1670  0001F8                     	ds	4
  1671                           tblptru	equ	0xFF8
  1672                           tblptrh	equ	0xFF7
  1673                           tblptrl	equ	0xFF6
  1674                           tablat	equ	0xFF5
  1675                           postinc0	equ	0xFEE
  1676                           wreg	equ	0xFE8
  1677                           postdec1	equ	0xFE5
  1678                           fsr1h	equ	0xFE2
  1679                           fsr1l	equ	0xFE1
  1680                           
  1681                           	psect	bssBANK2
  1682  000200                     __pbssBANK2:
  1683                           	opt stack 0
  1684  000200                     _iRScriptStack:
  1685                           	opt stack 0
  1686  000200                     	ds	100
  1687  000264                     Console_MakeField@Fill:
  1688                           	opt stack 0
  1689  000264                     	ds	70
  1690                           tblptru	equ	0xFF8
  1691                           tblptrh	equ	0xFF7
  1692                           tblptrl	equ	0xFF6
  1693                           tablat	equ	0xFF5
  1694                           postinc0	equ	0xFEE
  1695                           wreg	equ	0xFE8
  1696                           postdec1	equ	0xFE5
  1697                           fsr1h	equ	0xFE2
  1698                           fsr1l	equ	0xFE1
  1699                           
  1700                           	psect	dataBANK3
  1701  000300                     __pdataBANK3:
  1702                           	opt stack 0
  1703  000300                     _maze:
  1704                           	opt stack 0
  1705  000300                     	ds	198
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           postinc0	equ	0xFEE
  1711                           wreg	equ	0xFE8
  1712                           postdec1	equ	0xFE5
  1713                           fsr1h	equ	0xFE2
  1714                           fsr1l	equ	0xFE1
  1715                           
  1716                           	psect	bssBANK4
  1717  000400                     __pbssBANK4:
  1718                           	opt stack 0
  1719  000400                     _mazeConsole:
  1720                           	opt stack 0
  1721  000400                     	ds	99
  1722                           tblptru	equ	0xFF8
  1723                           tblptrh	equ	0xFF7
  1724                           tblptrl	equ	0xFF6
  1725                           tablat	equ	0xFF5
  1726                           postinc0	equ	0xFEE
  1727                           wreg	equ	0xFE8
  1728                           postdec1	equ	0xFE5
  1729                           fsr1h	equ	0xFE2
  1730                           fsr1l	equ	0xFE1
  1731                           
  1732                           	psect	bssBIGRAM
  1733  000463                     __pbssBIGRAM:
  1734                           	opt stack 0
  1735  000463                     _lBuffer:
  1736                           	opt stack 0
  1737  000463                     	ds	300
  1738                           tblptru	equ	0xFF8
  1739                           tblptrh	equ	0xFF7
  1740                           tblptrl	equ	0xFF6
  1741                           tablat	equ	0xFF5
  1742                           postinc0	equ	0xFEE
  1743                           wreg	equ	0xFE8
  1744                           postdec1	equ	0xFE5
  1745                           fsr1h	equ	0xFE2
  1746                           fsr1l	equ	0xFE1
  1747                           
  1748                           	psect	cstackBANK2
  1749  0002AA                     __pcstackBANK2:
  1750                           	opt stack 0
  1751  0002AA                     ??_Port_Init:
  1752  0002AA                     Button_Init@pInput:
  1753                           	opt stack 0
  1754  0002AA                     _update_IR_distance$15702:
  1755                           	opt stack 0
  1756                           
  1757                           ; 4 bytes @ 0x0
  1758  0002AA                     	ds	2
  1759  0002AC                     Button_Init@pThreshold:
  1760                           	opt stack 0
  1761                           
  1762                           ; 2 bytes @ 0x2
  1763  0002AC                     	ds	2
  1764  0002AE                     update_IR_distance@i:
  1765                           	opt stack 0
  1766  0002AE                     Button_Init@pInitIO:
  1767                           	opt stack 0
  1768                           
  1769                           ; 3 bytes @ 0x4
  1770  0002AE                     	ds	2
  1771  0002B0                     update_IR_distance@IRSamples:
  1772                           	opt stack 0
  1773                           
  1774                           ; 1 bytes @ 0x6
  1775  0002B0                     	ds	1
  1776  0002B1                     Button_Init@pGetState:
  1777                           	opt stack 0
  1778  0002B1                     update_IR_distance@IRCumulative:
  1779                           	opt stack 0
  1780                           
  1781                           ; 4 bytes @ 0x7
  1782  0002B1                     	ds	3
  1783  0002B4                     Button_Init@pFunction:
  1784                           	opt stack 0
  1785                           
  1786                           ; 3 bytes @ 0xA
  1787  0002B4                     	ds	3
  1788                           tblptru	equ	0xFF8
  1789                           tblptrh	equ	0xFF7
  1790                           tblptrl	equ	0xFF6
  1791                           tablat	equ	0xFF5
  1792                           postinc0	equ	0xFEE
  1793                           wreg	equ	0xFE8
  1794                           postdec1	equ	0xFE5
  1795                           fsr1h	equ	0xFE2
  1796                           fsr1l	equ	0xFE1
  1797                           
  1798                           	psect	cstackBANK1
  1799  0001FC                     __pcstackBANK1:
  1800                           	opt stack 0
  1801  0001FC                     ??_update_IR_distance:
  1802  0001FC                     Port_Init@pInput:
  1803                           	opt stack 0
  1804                           
  1805                           ; 2 bytes @ 0x0
  1806  0001FC                     	ds	2
  1807  0001FE                     Port_Init@pPort:
  1808                           	opt stack 0
  1809                           
  1810                           ; 1 bytes @ 0x2
  1811  0001FE                     	ds	1
  1812  0001FF                     Port_Init@i:
  1813                           	opt stack 0
  1814                           
  1815                           ; 1 bytes @ 0x3
  1816  0001FF                     	ds	1
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           postdec1	equ	0xFE5
  1824                           fsr1h	equ	0xFE2
  1825                           fsr1l	equ	0xFE1
  1826                           
  1827                           	psect	cstackBANK0
  1828  0000BA                     __pcstackBANK0:
  1829                           	opt stack 0
  1830  0000BA                     ??_ADC_SetChannel:
  1831  0000BA                     ??_ADC_ConversionTime:
  1832  0000BA                     ??_ADC_SetupIO:
  1833  0000BA                     ??_Console_Init:
  1834  0000BA                     ?_GetPortProperties:
  1835                           	opt stack 0
  1836  0000BA                     ?_GetPortPORT:
  1837                           	opt stack 0
  1838  0000BA                     ?_GetPortTRIS:
  1839                           	opt stack 0
  1840  0000BA                     ?___lwdiv:
  1841                           	opt stack 0
  1842  0000BA                     ?___lwmod:
  1843                           	opt stack 0
  1844  0000BA                     ?___fldiv:
  1845                           	opt stack 0
  1846  0000BA                     ?___flmul:
  1847                           	opt stack 0
  1848  0000BA                     ?___fltol:
  1849                           	opt stack 0
  1850  0000BA                     ?___lldiv:
  1851                           	opt stack 0
  1852  0000BA                     ?___xxtofl:
  1853                           	opt stack 0
  1854  0000BA                     Mode_Set@pMode:
  1855                           	opt stack 0
  1856  0000BA                     ToSegment@pCHR:
  1857                           	opt stack 0
  1858  0000BA                     ADC_ClockDivision@pDivide:
  1859                           	opt stack 0
  1860  0000BA                     eusart_putch@eusartSendChar:
  1861                           	opt stack 0
  1862  0000BA                     Port_GetPin@pInput:
  1863                           	opt stack 0
  1864  0000BA                     SPI_DisableISR@pInput:
  1865                           	opt stack 0
  1866  0000BA                     SPI_DCS@pInput:
  1867                           	opt stack 0
  1868  0000BA                     SPI_Send@pInput:
  1869                           	opt stack 0
  1870  0000BA                     Byte_SetBit@pInput:
  1871                           	opt stack 0
  1872  0000BA                     Byte_SetZone@pInput:
  1873                           	opt stack 0
  1874  0000BA                     Byte_GetZone@pInput:
  1875                           	opt stack 0
  1876  0000BA                     Byte_SetByte@pInput:
  1877                           	opt stack 0
  1878  0000BA                     delay_ms@ms:
  1879                           	opt stack 0
  1880  0000BA                     delay_us@us:
  1881                           	opt stack 0
  1882  0000BA                     reverse@input:
  1883                           	opt stack 0
  1884  0000BA                     ___lwdiv@dividend:
  1885                           	opt stack 0
  1886  0000BA                     ___lwmod@dividend:
  1887                           	opt stack 0
  1888  0000BA                     MXK_Queue@pCallback:
  1889                           	opt stack 0
  1890  0000BA                     ___fltol@f1:
  1891                           	opt stack 0
  1892  0000BA                     ___lldiv@dividend:
  1893                           	opt stack 0
  1894  0000BA                     ___fldiv@b:
  1895                           	opt stack 0
  1896  0000BA                     ___flmul@b:
  1897                           	opt stack 0
  1898  0000BA                     ___xxtofl@val:
  1899                           	opt stack 0
  1900                           
  1901                           ; 4 bytes @ 0x0
  1902  0000BA                     	ds	1
  1903  0000BB                     ADC_SetChannel@pChannel:
  1904                           	opt stack 0
  1905  0000BB                     ADC_ClockDivision@reg:
  1906                           	opt stack 0
  1907  0000BB                     ADC_ConversionTime@pCount:
  1908                           	opt stack 0
  1909  0000BB                     HMI_SetSegments@pString:
  1910                           	opt stack 0
  1911                           
  1912                           ; 2 bytes @ 0x1
  1913  0000BB                     	ds	1
  1914  0000BC                     GetPortProperties@pInput:
  1915                           	opt stack 0
  1916  0000BC                     GetPortPORT@pInput:
  1917                           	opt stack 0
  1918  0000BC                     GetPortTRIS@pInput:
  1919                           	opt stack 0
  1920  0000BC                     Port_GetPin@pPin:
  1921                           	opt stack 0
  1922  0000BC                     SPI_Send@pData:
  1923                           	opt stack 0
  1924  0000BC                     Byte_SetBit@pBit:
  1925                           	opt stack 0
  1926  0000BC                     Byte_SetZone@pMax:
  1927                           	opt stack 0
  1928  0000BC                     Byte_GetZone@pMax:
  1929                           	opt stack 0
  1930  0000BC                     Byte_SetByte@pValue:
  1931                           	opt stack 0
  1932  0000BC                     Console_Init@x:
  1933                           	opt stack 0
  1934  0000BC                     ADC_SetupIO@pChannel:
  1935                           	opt stack 0
  1936  0000BC                     ADC_ClockDivision@unfound:
  1937                           	opt stack 0
  1938  0000BC                     reverse@length:
  1939                           	opt stack 0
  1940  0000BC                     ADC_Start@pInput:
  1941                           	opt stack 0
  1942  0000BC                     ___lwdiv@divisor:
  1943                           	opt stack 0
  1944  0000BC                     ___lwmod@divisor:
  1945                           	opt stack 0
  1946  0000BC                     delay_ms@u:
  1947                           	opt stack 0
  1948  0000BC                     delay_us@u:
  1949                           	opt stack 0
  1950                           
  1951                           ; 4 bytes @ 0x2
  1952  0000BC                     	ds	1
  1953  0000BD                     ??_Port_GetPin:
  1954  0000BD                     LCD_Write@mode:
  1955                           	opt stack 0
  1956  0000BD                     Byte_SetBit@pValue:
  1957                           	opt stack 0
  1958  0000BD                     Byte_SetZone@pChunk:
  1959                           	opt stack 0
  1960  0000BD                     Byte_GetZone@pChunk:
  1961                           	opt stack 0
  1962  0000BD                     Console_Init@y:
  1963                           	opt stack 0
  1964  0000BD                     OutSeg@pSegment:
  1965                           	opt stack 0
  1966  0000BD                     ADC_SetupIO@MASK:
  1967                           	opt stack 0
  1968                           
  1969                           ; 1 bytes @ 0x3
  1970  0000BD                     	ds	1
  1971  0000BE                     ??_Byte_SetBit:
  1972  0000BE                     ??_OutSeg:
  1973  0000BE                     ??_ADC_Start:
  1974  0000BE                     ??___fltol:
  1975  0000BE                     ??___xxtofl:
  1976  0000BE                     LCD_Write@value:
  1977                           	opt stack 0
  1978  0000BE                     Byte_SetZone@pChunkSize:
  1979                           	opt stack 0
  1980  0000BE                     Byte_GetZone@pChunkSize:
  1981                           	opt stack 0
  1982  0000BE                     reverse@tempVar:
  1983                           	opt stack 0
  1984  0000BE                     ___lwdiv@counter:
  1985                           	opt stack 0
  1986  0000BE                     ___lwmod@counter:
  1987                           	opt stack 0
  1988  0000BE                     HMI_SetSegments@in:
  1989                           	opt stack 0
  1990  0000BE                     ADC_Init@pInput:
  1991                           	opt stack 0
  1992  0000BE                     ___lldiv@divisor:
  1993                           	opt stack 0
  1994  0000BE                     ___fldiv@a:
  1995                           	opt stack 0
  1996  0000BE                     ___flmul@a:
  1997                           	opt stack 0
  1998                           
  1999                           ; 4 bytes @ 0x4
  2000  0000BE                     	ds	1
  2001  0000BF                     ??_Byte_GetZone:
  2002  0000BF                     Set_Addr_Window@ys:
  2003                           	opt stack 0
  2004  0000BF                     Set_Rotation@m:
  2005                           	opt stack 0
  2006  0000BF                     Port_GetPin@Output:
  2007                           	opt stack 0
  2008  0000BF                     Byte_SetZone@pValue:
  2009                           	opt stack 0
  2010  0000BF                     LCD_Word_Write@value:
  2011                           	opt stack 0
  2012  0000BF                     reverse@iterator:
  2013                           	opt stack 0
  2014  0000BF                     ___lwdiv@quotient:
  2015                           	opt stack 0
  2016                           
  2017                           ; 2 bytes @ 0x5
  2018  0000BF                     	ds	1
  2019  0000C0                     ??_Byte_SetZone:
  2020  0000C0                     Set_Addr_Window@xe:
  2021                           	opt stack 0
  2022  0000C0                     Set_Rotation@rotation:
  2023                           	opt stack 0
  2024  0000C0                     Byte_GetZone@MASK:
  2025                           	opt stack 0
  2026  0000C0                     OutSeg@pInput:
  2027                           	opt stack 0
  2028  0000C0                     ADC_Init@pChannel:
  2029                           	opt stack 0
  2030  0000C0                     MXK_BlockSwitchTo@CUR:
  2031                           	opt stack 0
  2032  0000C0                     MXK_SwitchTo@CUR:
  2033                           	opt stack 0
  2034                           
  2035                           ; 1 bytes @ 0x6
  2036  0000C0                     	ds	1
  2037  0000C1                     Set_Addr_Window@ye:
  2038                           	opt stack 0
  2039  0000C1                     Byte_GetZone@Offset:
  2040                           	opt stack 0
  2041  0000C1                     OutSeg@out:
  2042                           	opt stack 0
  2043  0000C1                     MXK_BlockSwitchTo@pModule:
  2044                           	opt stack 0
  2045  0000C1                     MXK_SwitchTo@pModule:
  2046                           	opt stack 0
  2047  0000C1                     itos@input:
  2048                           	opt stack 0
  2049                           
  2050                           ; 2 bytes @ 0x7
  2051  0000C1                     	ds	1
  2052  0000C2                     ??___fldiv:
  2053  0000C2                     ??___flmul:
  2054  0000C2                     Set_Addr_Window@xs:
  2055                           	opt stack 0
  2056  0000C2                     Byte_GetZone@Output:
  2057                           	opt stack 0
  2058  0000C2                     ___fltol@sign1:
  2059                           	opt stack 0
  2060  0000C2                     ___xxtofl@sign:
  2061                           	opt stack 0
  2062  0000C2                     HMI_Render@a:
  2063                           	opt stack 0
  2064  0000C2                     ___lldiv@quotient:
  2065                           	opt stack 0
  2066                           
  2067                           ; 4 bytes @ 0x8
  2068  0000C2                     	ds	1
  2069  0000C3                     Byte_SetZone@Offset:
  2070                           	opt stack 0
  2071  0000C3                     ___fltol@exp1:
  2072                           	opt stack 0
  2073  0000C3                     ___xxtofl@exp:
  2074                           	opt stack 0
  2075  0000C3                     LCD_Fill@pColour:
  2076                           	opt stack 0
  2077  0000C3                     Byte_GetPair@pInput:
  2078                           	opt stack 0
  2079  0000C3                     itos@destination:
  2080                           	opt stack 0
  2081                           
  2082                           ; 2 bytes @ 0x9
  2083  0000C3                     	ds	1
  2084  0000C4                     ?___awdiv:
  2085                           	opt stack 0
  2086  0000C4                     Byte_SetZone@MASK:
  2087                           	opt stack 0
  2088  0000C4                     ___awdiv@dividend:
  2089                           	opt stack 0
  2090  0000C4                     ___xxtofl@arg:
  2091                           	opt stack 0
  2092                           
  2093                           ; 4 bytes @ 0xA
  2094  0000C4                     	ds	1
  2095  0000C5                     LCD_Fill@i:
  2096                           	opt stack 0
  2097  0000C5                     Byte_GetPair@pPair:
  2098                           	opt stack 0
  2099  0000C5                     Byte_SetPair@pInput:
  2100                           	opt stack 0
  2101  0000C5                     Byte_SetQuad@pInput:
  2102                           	opt stack 0
  2103  0000C5                     itos@Data:
  2104                           	opt stack 0
  2105                           
  2106                           ; 2 bytes @ 0xB
  2107  0000C5                     	ds	1
  2108  0000C6                     LCD_Fill@j:
  2109                           	opt stack 0
  2110  0000C6                     ___lldiv@counter:
  2111                           	opt stack 0
  2112  0000C6                     ___fldiv@sign:
  2113                           	opt stack 0
  2114  0000C6                     ___flmul@sign:
  2115                           	opt stack 0
  2116  0000C6                     Word_GetPair@pInput:
  2117                           	opt stack 0
  2118  0000C6                     ___awdiv@divisor:
  2119                           	opt stack 0
  2120                           
  2121                           ; 2 bytes @ 0xC
  2122  0000C6                     	ds	1
  2123  0000C7                     Byte_SetPair@pPair:
  2124                           	opt stack 0
  2125  0000C7                     Byte_SetQuad@pQuad:
  2126                           	opt stack 0
  2127  0000C7                     ___flmul@aexp:
  2128                           	opt stack 0
  2129  0000C7                     itos@Length:
  2130                           	opt stack 0
  2131  0000C7                     Timer0_Init@pFrequency:
  2132                           	opt stack 0
  2133  0000C7                     Timer2_Init@pFrequency:
  2134                           	opt stack 0
  2135  0000C7                     ___fldiv@rem:
  2136                           	opt stack 0
  2137                           
  2138                           ; 4 bytes @ 0xD
  2139  0000C7                     	ds	1
  2140  0000C8                     Byte_SetPair@pValue:
  2141                           	opt stack 0
  2142  0000C8                     Byte_SetQuad@pValue:
  2143                           	opt stack 0
  2144  0000C8                     Word_GetPair@pPair:
  2145                           	opt stack 0
  2146  0000C8                     ___awdiv@counter:
  2147                           	opt stack 0
  2148  0000C8                     ___flmul@bexp:
  2149                           	opt stack 0
  2150                           
  2151                           ; 1 bytes @ 0xE
  2152  0000C8                     	ds	1
  2153  0000C9                     ___awdiv@sign:
  2154                           	opt stack 0
  2155  0000C9                     Port_SetPin@pInput:
  2156                           	opt stack 0
  2157  0000C9                     Port_Set@pInput:
  2158                           	opt stack 0
  2159  0000C9                     SPI_MinSpeed@pInput:
  2160                           	opt stack 0
  2161  0000C9                     SPI_MaxSpeed@pInput:
  2162                           	opt stack 0
  2163  0000C9                     Word_SetPair@pInput:
  2164                           	opt stack 0
  2165  0000C9                     PortProperty_Valid@pInput:
  2166                           	opt stack 0
  2167  0000C9                     itos@Out:
  2168                           	opt stack 0
  2169  0000C9                     ___flmul@grs:
  2170                           	opt stack 0
  2171                           
  2172                           ; 4 bytes @ 0xF
  2173  0000C9                     	ds	1
  2174  0000CA                     ___awdiv@quotient:
  2175                           	opt stack 0
  2176                           
  2177                           ; 2 bytes @ 0x10
  2178  0000CA                     	ds	1
  2179  0000CB                     ??_Timer2_Init:
  2180  0000CB                     ??_Timer0_Init:
  2181  0000CB                     Port_SetPin@pPin:
  2182                           	opt stack 0
  2183  0000CB                     Port_Set@pValue:
  2184                           	opt stack 0
  2185  0000CB                     Word_SetPair@pPair:
  2186                           	opt stack 0
  2187  0000CB                     PortProperty_Valid@pPinDrive:
  2188                           	opt stack 0
  2189  0000CB                     HMI_SetNumber@pInput:
  2190                           	opt stack 0
  2191  0000CB                     ___fldiv@new_exp:
  2192                           	opt stack 0
  2193                           
  2194                           ; 2 bytes @ 0x11
  2195  0000CB                     	ds	1
  2196  0000CC                     ??_Port_Set:
  2197  0000CC                     Port_SetPin@pValue:
  2198                           	opt stack 0
  2199  0000CC                     Word_SetPair@pValue:
  2200                           	opt stack 0
  2201  0000CC                     PortProperty_Valid@pPin:
  2202                           	opt stack 0
  2203  0000CC                     Timer2_Init@RDIV:
  2204                           	opt stack 0
  2205                           
  2206                           ; 4 bytes @ 0x12
  2207  0000CC                     	ds	1
  2208  0000CD                     ??_PortProperty_Valid:
  2209  0000CD                     Port_SetPin@Type:
  2210                           	opt stack 0
  2211  0000CD                     Timer0_Init@pCPUClock:
  2212                           	opt stack 0
  2213  0000CD                     ___fldiv@grs:
  2214                           	opt stack 0
  2215  0000CD                     ___flmul@prod:
  2216                           	opt stack 0
  2217                           
  2218                           ; 4 bytes @ 0x13
  2219  0000CD                     	ds	1
  2220  0000CE                     LED_Set@pValue:
  2221                           	opt stack 0
  2222  0000CE                     Port_TogglePin@pInput:
  2223                           	opt stack 0
  2224                           
  2225                           ; 2 bytes @ 0x14
  2226  0000CE                     	ds	1
  2227  0000CF                     LED_Set@pLED:
  2228                           	opt stack 0
  2229  0000CF                     PortProperty_Valid@Errors:
  2230                           	opt stack 0
  2231                           
  2232                           ; 16 bytes @ 0x15
  2233  0000CF                     	ds	1
  2234  0000D0                     Port_TogglePin@pPin:
  2235                           	opt stack 0
  2236  0000D0                     update_SSD@renderSSD:
  2237                           	opt stack 0
  2238  0000D0                     Timer2_Init@pCPUClock:
  2239                           	opt stack 0
  2240                           
  2241                           ; 4 bytes @ 0x16
  2242  0000D0                     	ds	1
  2243  0000D1                     Port_TogglePin@Value:
  2244                           	opt stack 0
  2245  0000D1                     ___fldiv@bexp:
  2246                           	opt stack 0
  2247  0000D1                     ___flmul@temp:
  2248                           	opt stack 0
  2249  0000D1                     Timer0_Init@DIVIDE:
  2250                           	opt stack 0
  2251                           
  2252                           ; 4 bytes @ 0x17
  2253  0000D1                     	ds	1
  2254  0000D2                     LED_Toggle@pLED:
  2255                           	opt stack 0
  2256  0000D2                     ___fldiv@aexp:
  2257                           	opt stack 0
  2258                           
  2259                           ; 1 bytes @ 0x18
  2260  0000D2                     	ds	1
  2261  0000D3                     ?_ADC_Voltage:
  2262                           	opt stack 0
  2263  0000D3                     ADC_Voltage@pInput:
  2264                           	opt stack 0
  2265                           
  2266                           ; 2 bytes @ 0x19
  2267  0000D3                     	ds	1
  2268  0000D4                     Timer2_Init@DIVIDE:
  2269                           	opt stack 0
  2270                           
  2271                           ; 4 bytes @ 0x1A
  2272  0000D4                     	ds	3
  2273  0000D7                     ??_ADC_Voltage:
  2274                           
  2275                           ; 1 bytes @ 0x1D
  2276  0000D7                     	ds	2
  2277  0000D9                     ADC_Voltage@max:
  2278                           	opt stack 0
  2279                           
  2280                           ; 4 bytes @ 0x1F
  2281  0000D9                     	ds	3
  2282  0000DC                     Port_Set@TypeRequired:
  2283                           	opt stack 0
  2284                           
  2285                           ; 2 bytes @ 0x22
  2286  0000DC                     	ds	1
  2287  0000DD                     ADC_Voltage@ref:
  2288                           	opt stack 0
  2289                           
  2290                           ; 4 bytes @ 0x23
  2291  0000DD                     	ds	1
  2292  0000DE                     Port_Set@TypeActual:
  2293                           	opt stack 0
  2294                           
  2295                           ; 2 bytes @ 0x24
  2296  0000DE                     	ds	1
  2297  0000DF                     PortProperty_Valid@Pair:
  2298                           	opt stack 0
  2299                           
  2300                           ; 1 bytes @ 0x25
  2301  0000DF                     	ds	1
  2302  0000E0                     Port_Set@Type:
  2303                           	opt stack 0
  2304  0000E0                     Port_CheckPairType@pInput:
  2305                           	opt stack 0
  2306  0000E0                     Port_SetPinType@pInput:
  2307                           	opt stack 0
  2308                           
  2309                           ; 2 bytes @ 0x26
  2310  0000E0                     	ds	1
  2311  0000E1                     ADC_Voltage@output:
  2312                           	opt stack 0
  2313                           
  2314                           ; 4 bytes @ 0x27
  2315  0000E1                     	ds	1
  2316  0000E2                     Port_CheckPairType@pPair:
  2317                           	opt stack 0
  2318  0000E2                     Port_SetPinType@pPin:
  2319                           	opt stack 0
  2320                           
  2321                           ; 1 bytes @ 0x28
  2322  0000E2                     	ds	1
  2323  0000E3                     Port_CheckPairType@pDrive:
  2324                           	opt stack 0
  2325  0000E3                     Port_SetPinType@pType:
  2326                           	opt stack 0
  2327                           
  2328                           ; 1 bytes @ 0x29
  2329  0000E3                     	ds	1
  2330  0000E4                     Port_CheckPairType@Pin1:
  2331                           	opt stack 0
  2332  0000E4                     Port_SetPinType@Output:
  2333                           	opt stack 0
  2334                           
  2335                           ; 1 bytes @ 0x2A
  2336  0000E4                     	ds	1
  2337  0000E5                     ?___fladd:
  2338                           	opt stack 0
  2339  0000E5                     Port_CheckPairType@Pin2:
  2340                           	opt stack 0
  2341  0000E5                     Port_SetPinType@Props:
  2342                           	opt stack 0
  2343  0000E5                     ___fladd@b:
  2344                           	opt stack 0
  2345                           
  2346                           ; 4 bytes @ 0x2B
  2347  0000E5                     	ds	1
  2348  0000E6                     Port_CheckPairType@Output:
  2349                           	opt stack 0
  2350                           
  2351                           ; 1 bytes @ 0x2C
  2352  0000E6                     	ds	1
  2353  0000E7                     LED_Init@pLED:
  2354                           	opt stack 0
  2355  0000E7                     Port_CheckPairType@Props:
  2356                           	opt stack 0
  2357  0000E7                     Motor_Init@pMotor:
  2358                           	opt stack 0
  2359  0000E7                     SPI_Init@pClock:
  2360                           	opt stack 0
  2361                           
  2362                           ; 4 bytes @ 0x2D
  2363  0000E7                     	ds	2
  2364  0000E9                     Port_CheckQuadType@pInput:
  2365                           	opt stack 0
  2366  0000E9                     Motor_Init@pAddress:
  2367                           	opt stack 0
  2368  0000E9                     ___fladd@a:
  2369                           	opt stack 0
  2370                           
  2371                           ; 4 bytes @ 0x2F
  2372  0000E9                     	ds	2
  2373  0000EB                     Port_CheckQuadType@pQuad:
  2374                           	opt stack 0
  2375  0000EB                     SPI_Init@pChannel:
  2376                           	opt stack 0
  2377                           
  2378                           ; 1 bytes @ 0x31
  2379  0000EB                     	ds	1
  2380  0000EC                     Port_CheckQuadType@pDrive:
  2381                           	opt stack 0
  2382  0000EC                     SPI_Init@pMode:
  2383                           	opt stack 0
  2384                           
  2385                           ; 1 bytes @ 0x32
  2386  0000EC                     	ds	1
  2387  0000ED                     ??___fladd:
  2388  0000ED                     Port_CheckQuadType@Pair1:
  2389                           	opt stack 0
  2390  0000ED                     SPI_Init@pInput:
  2391                           	opt stack 0
  2392                           
  2393                           ; 2 bytes @ 0x33
  2394  0000ED                     	ds	1
  2395  0000EE                     Port_CheckQuadType@Pair2:
  2396                           	opt stack 0
  2397                           
  2398                           ; 1 bytes @ 0x34
  2399  0000EE                     	ds	1
  2400  0000EF                     ??_LCD_Init:
  2401  0000EF                     Port_CheckQuadType@Output:
  2402                           	opt stack 0
  2403                           
  2404                           ; 1 bytes @ 0x35
  2405  0000EF                     	ds	1
  2406  0000F0                     Port_CheckPortType@pInput:
  2407                           	opt stack 0
  2408  0000F0                     Port_SetQuadType@pInput:
  2409                           	opt stack 0
  2410                           
  2411                           ; 2 bytes @ 0x36
  2412  0000F0                     	ds	1
  2413  0000F1                     LCD_Init@i:
  2414                           	opt stack 0
  2415                           
  2416                           ; 2 bytes @ 0x37
  2417  0000F1                     	ds	1
  2418  0000F2                     Port_CheckPortType@pDrive:
  2419                           	opt stack 0
  2420  0000F2                     Port_SetQuadType@pQuad:
  2421                           	opt stack 0
  2422                           
  2423                           ; 1 bytes @ 0x38
  2424  0000F2                     	ds	1
  2425  0000F3                     Port_CheckPortType@Output:
  2426                           	opt stack 0
  2427  0000F3                     Port_SetQuadType@pType:
  2428                           	opt stack 0
  2429                           
  2430                           ; 1 bytes @ 0x39
  2431  0000F3                     	ds	1
  2432  0000F4                     Port_SetQuadType@Output:
  2433                           	opt stack 0
  2434  0000F4                     Port_SetType@pInput:
  2435                           	opt stack 0
  2436                           
  2437                           ; 2 bytes @ 0x3A
  2438  0000F4                     	ds	1
  2439  0000F5                     ___fladd@signs:
  2440                           	opt stack 0
  2441  0000F5                     HMI_Init@in:
  2442                           	opt stack 0
  2443                           
  2444                           ; 2 bytes @ 0x3B
  2445  0000F5                     	ds	1
  2446  0000F6                     Port_SetType@pType:
  2447                           	opt stack 0
  2448  0000F6                     ___fladd@aexp:
  2449                           	opt stack 0
  2450                           
  2451                           ; 1 bytes @ 0x3C
  2452  0000F6                     	ds	1
  2453  0000F7                     ??_Port_SetType:
  2454  0000F7                     ___fladd@bexp:
  2455                           	opt stack 0
  2456                           
  2457                           ; 1 bytes @ 0x3D
  2458  0000F7                     	ds	1
  2459  0000F8                     ___fladd@grs:
  2460                           	opt stack 0
  2461                           
  2462                           ; 1 bytes @ 0x3E
  2463  0000F8                     	ds	1
  2464  0000F9                     Port_SetType@Output:
  2465                           	opt stack 0
  2466                           
  2467                           ; 1 bytes @ 0x3F
  2468  0000F9                     	ds	1
  2469  0000FA                     tblptru	equ	0xFF8
  2470                           tblptrh	equ	0xFF7
  2471                           tblptrl	equ	0xFF6
  2472                           tablat	equ	0xFF5
  2473                           postinc0	equ	0xFEE
  2474                           wreg	equ	0xFE8
  2475                           postdec1	equ	0xFE5
  2476                           fsr1h	equ	0xFE2
  2477                           fsr1l	equ	0xFE1
  2478                           
  2479                           ; 1 bytes @ 0x40
  2480                           
  2481                           	psect	cstackCOMRAM
  2482  000001                     __pcstackCOMRAM:
  2483                           	opt stack 0
  2484  000001                     i2Byte_SetBit@pInput:
  2485                           	opt stack 0
  2486  000001                     i2Byte_GetZone@pInput:
  2487                           	opt stack 0
  2488  000001                     i2delay_us@us:
  2489                           	opt stack 0
  2490  000001                     i2MXK_Queue@pCallback:
  2491                           	opt stack 0
  2492                           
  2493                           ; 3 bytes @ 0x0
  2494  000001                     	ds	2
  2495  000003                     i2Byte_SetBit@pBit:
  2496                           	opt stack 0
  2497  000003                     i2Byte_GetZone@pMax:
  2498                           	opt stack 0
  2499  000003                     i2delay_us@u:
  2500                           	opt stack 0
  2501                           
  2502                           ; 4 bytes @ 0x2
  2503  000003                     	ds	1
  2504  000004                     i2Byte_SetBit@pValue:
  2505                           	opt stack 0
  2506  000004                     i2Byte_GetZone@pChunk:
  2507                           	opt stack 0
  2508                           
  2509                           ; 1 bytes @ 0x3
  2510  000004                     	ds	1
  2511  000005                     ??i2_Byte_SetBit:
  2512  000005                     i2Byte_GetZone@pChunkSize:
  2513                           	opt stack 0
  2514                           
  2515                           ; 1 bytes @ 0x4
  2516  000005                     	ds	1
  2517  000006                     ??i2_Byte_GetZone:
  2518                           
  2519                           ; 1 bytes @ 0x5
  2520  000006                     	ds	1
  2521  000007                     i2Byte_GetZone@MASK:
  2522                           	opt stack 0
  2523  000007                     i2MXK_SwitchTo@CUR:
  2524                           	opt stack 0
  2525                           
  2526                           ; 1 bytes @ 0x6
  2527  000007                     	ds	1
  2528  000008                     i2Byte_GetZone@Offset:
  2529                           	opt stack 0
  2530  000008                     i2MXK_SwitchTo@pModule:
  2531                           	opt stack 0
  2532                           
  2533                           ; 1 bytes @ 0x7
  2534  000008                     	ds	1
  2535  000009                     i2Byte_GetZone@Output:
  2536                           	opt stack 0
  2537                           
  2538                           ; 1 bytes @ 0x8
  2539  000009                     	ds	1
  2540  00000A                     i2Byte_GetPair@pInput:
  2541                           	opt stack 0
  2542                           
  2543                           ; 2 bytes @ 0x9
  2544  00000A                     	ds	2
  2545  00000C                     i2Byte_GetPair@pPair:
  2546                           	opt stack 0
  2547                           
  2548                           ; 1 bytes @ 0xB
  2549  00000C                     	ds	1
  2550  00000D                     i2Word_GetPair@pInput:
  2551                           	opt stack 0
  2552                           
  2553                           ; 2 bytes @ 0xC
  2554  00000D                     	ds	2
  2555  00000F                     i2Word_GetPair@pPair:
  2556                           	opt stack 0
  2557                           
  2558                           ; 1 bytes @ 0xE
  2559  00000F                     	ds	1
  2560  000010                     i2Port_SetPin@pInput:
  2561                           	opt stack 0
  2562                           
  2563                           ; 2 bytes @ 0xF
  2564  000010                     	ds	2
  2565  000012                     i2Port_SetPin@pPin:
  2566                           	opt stack 0
  2567                           
  2568                           ; 1 bytes @ 0x11
  2569  000012                     	ds	1
  2570  000013                     i2Port_SetPin@pValue:
  2571                           	opt stack 0
  2572                           
  2573                           ; 1 bytes @ 0x12
  2574  000013                     	ds	1
  2575  000014                     i2Port_SetPin@Type:
  2576                           	opt stack 0
  2577                           
  2578                           ; 1 bytes @ 0x13
  2579  000014                     	ds	1
  2580  000015                     
  2581                           ; 1 bytes @ 0x14
  2582  000015                     	ds	2
  2583  000017                     ??_ISR_Function:
  2584                           
  2585                           ; 1 bytes @ 0x16
  2586  000017                     	ds	18
  2587                           tblptru	equ	0xFF8
  2588                           tblptrh	equ	0xFF7
  2589                           tblptrl	equ	0xFF6
  2590                           tablat	equ	0xFF5
  2591                           postinc0	equ	0xFEE
  2592                           wreg	equ	0xFE8
  2593                           postdec1	equ	0xFE5
  2594                           fsr1h	equ	0xFE2
  2595                           fsr1l	equ	0xFE1
  2596                           
  2597 ;;
  2598 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2599 ;;
  2600 ;; *************** function _main *****************
  2601 ;; Defined at:
  2602 ;;		line 536 in file "main.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;		None
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;Total ram usage:        0 bytes
  2621 ;; Hardware stack levels required when called:   18
  2622 ;; This function calls:
  2623 ;;		_init
  2624 ;;		_update_IR_distance
  2625 ;;		_update_SSD
  2626 ;; This function is called by:
  2627 ;;		Startup code after reset
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text0
  2632  014AE8                     __ptext0:
  2633                           	opt stack 0
  2634  014AE8                     _main:
  2635                           	opt stack 13
  2636                           
  2637                           ;main.c: 537: init();
  2638                           
  2639                           ;incstack = 0
  2640  014AE8  EC09  F09D         	call	_init	;wreg free
  2641  014AEC                     
  2642                           ;main.c: 539: update_IR_distance();
  2643  014AEC  EC76  F095         	call	_update_IR_distance	;wreg free
  2644                           
  2645                           ;main.c: 540: update_SSD(IRValue);
  2646  014AF0  C06D  F0D0         	movff	_IRValue,update_SSD@renderSSD
  2647  014AF4  C06E  F0D1         	movff	_IRValue+1,update_SSD@renderSSD+1
  2648  014AF8  EC60  F0A4         	call	_update_SSD	;wreg free
  2649                           
  2650                           ;main.c: 541: }
  2651  014AFC  D7F7               	goto	l2507
  2652  014AFE                     __end_of_main:
  2653                           	opt stack 0
  2654                           tblptru	equ	0xFF8
  2655                           tblptrh	equ	0xFF7
  2656                           tblptrl	equ	0xFF6
  2657                           tablat	equ	0xFF5
  2658                           postinc0	equ	0xFEE
  2659                           wreg	equ	0xFE8
  2660                           postdec1	equ	0xFE5
  2661                           fsr1h	equ	0xFE2
  2662                           fsr1l	equ	0xFE1
  2663                           
  2664 ;; *************** function _update_SSD *****************
  2665 ;; Defined at:
  2666 ;;		line 199 in file "main.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  renderSSD       2   22[BANK0 ] short 
  2669 ;; Auto vars:     Size  Location     Type
  2670 ;;		None
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      void 
  2673 ;; Registers used:
  2674 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2680 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;Total ram usage:        2 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:   13
  2687 ;; This function calls:
  2688 ;;		_HMI_Render
  2689 ;;		_HMI_SetNumber
  2690 ;;		_MXK_Dequeue
  2691 ;;		_MXK_Release
  2692 ;;		_MXK_SwitchTo
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text1
  2699  0148C0                     __ptext1:
  2700                           	opt stack 0
  2701  0148C0                     _update_SSD:
  2702                           	opt stack 17
  2703                           
  2704                           ;main.c: 200: if (MXK_SwitchTo(eMXK_HMI)) {
  2705                           
  2706                           ;incstack = 0
  2707  0148C0  0E01               	movlw	1
  2708  0148C2  EC10  F0A3         	call	_MXK_SwitchTo
  2709  0148C6  0900               	iorlw	0
  2710  0148C8  B4D8               	btfsc	status,2,c
  2711  0148CA  0012               	return	
  2712                           
  2713                           ;main.c: 201: HMI_SetNumber(renderSSD);
  2714  0148CC  C0D0  F0CB         	movff	update_SSD@renderSSD,HMI_SetNumber@pInput
  2715  0148D0  C0D1  F0CC         	movff	update_SSD@renderSSD+1,HMI_SetNumber@pInput+1
  2716  0148D4  EC76  F0A4         	call	_HMI_SetNumber	;wreg free
  2717                           
  2718                           ;main.c: 202: HMI_Render();
  2719  0148D8  EC51  F0A3         	call	_HMI_Render	;wreg free
  2720                           
  2721                           ;main.c: 203: if (MXK_Release())
  2722  0148DC  EC4B  F0A5         	call	_MXK_Release	;wreg free
  2723  0148E0  0900               	iorlw	0
  2724  0148E2  B4D8               	btfsc	status,2,c
  2725  0148E4  0012               	return	
  2726                           
  2727                           ;main.c: 204: MXK_Dequeue();}
  2728  0148E6  EC70  F0A3         	call	_MXK_Dequeue	;wreg free
  2729  0148EA  0012               	return	
  2730  0148EC                     __end_of_update_SSD:
  2731                           	opt stack 0
  2732                           tblptru	equ	0xFF8
  2733                           tblptrh	equ	0xFF7
  2734                           tblptrl	equ	0xFF6
  2735                           tablat	equ	0xFF5
  2736                           postinc0	equ	0xFEE
  2737                           wreg	equ	0xFE8
  2738                           postdec1	equ	0xFE5
  2739                           fsr1h	equ	0xFE2
  2740                           fsr1l	equ	0xFE1
  2741                           status	equ	0xFD8
  2742                           
  2743 ;; *************** function _HMI_SetNumber *****************
  2744 ;; Defined at:
  2745 ;;		line 221 in file "HMI.c"
  2746 ;; Parameters:    Size  Location     Type
  2747 ;;  pInput          2   17[BANK0 ] int 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;		None
  2750 ;; Return value:  Size  Location     Type
  2751 ;;                  1    wreg      void 
  2752 ;; Registers used:
  2753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2754 ;; Tracked objects:
  2755 ;;		On entry : 0/0
  2756 ;;		On exit  : 0/0
  2757 ;;		Unchanged: 0/0
  2758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2759 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;Total ram usage:        2 bytes
  2764 ;; Hardware stack levels used:    1
  2765 ;; Hardware stack levels required when called:    9
  2766 ;; This function calls:
  2767 ;;		_HMI_SetSegments
  2768 ;;		_itos
  2769 ;; This function is called by:
  2770 ;;		_update_SSD
  2771 ;;		_Event_TestButton
  2772 ;;		_Event_HMI_UpButton
  2773 ;;		_Event_HMI_DownButton
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           	psect	text2
  2778  0148EC                     __ptext2:
  2779                           	opt stack 0
  2780  0148EC                     _HMI_SetNumber:
  2781                           	opt stack 20
  2782                           
  2783                           ;HMI.c: 223: itos(pInput, HMIBoard.pSevenSegment);
  2784                           
  2785                           ;incstack = 0
  2786  0148EC  C0CB  F0C1         	movff	HMI_SetNumber@pInput,itos@input
  2787  0148F0  C0CC  F0C2         	movff	HMI_SetNumber@pInput+1,itos@input+1
  2788  0148F4  0E40               	movlw	low _HMIBoard
  2789  0148F6  0100               	movlb	0	; () banked
  2790  0148F8  6FC3               	movwf	itos@destination& (0+255),b
  2791  0148FA  0E01               	movlw	high _HMIBoard
  2792  0148FC  0100               	movlb	0	; () banked
  2793  0148FE  6FC4               	movwf	(itos@destination+1)& (0+255),b
  2794  014900  ECE5  F096         	call	_itos	;wreg free
  2795                           
  2796                           ;HMI.c: 224: HMI_SetSegments(HMIBoard.pSevenSegment);
  2797  014904  0E40               	movlw	low _HMIBoard
  2798  014906  0100               	movlb	0	; () banked
  2799  014908  6FBB               	movwf	HMI_SetSegments@pString& (0+255),b
  2800  01490A  0E01               	movlw	high _HMIBoard
  2801  01490C  0100               	movlb	0	; () banked
  2802  01490E  6FBC               	movwf	(HMI_SetSegments@pString+1)& (0+255),b
  2803  014910  EC14  F09A         	call	_HMI_SetSegments	;wreg free
  2804  014914  0012               	return		;funcret
  2805  014916                     __end_of_HMI_SetNumber:
  2806                           	opt stack 0
  2807                           tblptru	equ	0xFF8
  2808                           tblptrh	equ	0xFF7
  2809                           tblptrl	equ	0xFF6
  2810                           tablat	equ	0xFF5
  2811                           postinc0	equ	0xFEE
  2812                           wreg	equ	0xFE8
  2813                           postdec1	equ	0xFE5
  2814                           fsr1h	equ	0xFE2
  2815                           fsr1l	equ	0xFE1
  2816                           status	equ	0xFD8
  2817                           
  2818 ;; *************** function _itos *****************
  2819 ;; Defined at:
  2820 ;;		line 369 in file "Library/Types.c"
  2821 ;; Parameters:    Size  Location     Type
  2822 ;;  input           2    7[BANK0 ] unsigned short 
  2823 ;;  destination     2    9[BANK0 ] PTR unsigned char 
  2824 ;;		 -> HMIBoard..(8), HMIBoard(58), 
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;  Out             2   15[BANK0 ] unsigned short 
  2827 ;;  Length          2   13[BANK0 ] unsigned short 
  2828 ;;  Data            2   11[BANK0 ] PTR unsigned char 
  2829 ;;		 -> HMIBoard..(8), HMIBoard(58), 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2839 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2840 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2842 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2843 ;;Total ram usage:       10 bytes
  2844 ;; Hardware stack levels used:    1
  2845 ;; Hardware stack levels required when called:    8
  2846 ;; This function calls:
  2847 ;;		___lwdiv
  2848 ;;		___lwmod
  2849 ;;		_reverse
  2850 ;; This function is called by:
  2851 ;;		_HMI_SetNumber
  2852 ;; This function uses a non-reentrant model
  2853 ;;
  2854                           
  2855                           	psect	text3
  2856  012DCA                     __ptext3:
  2857                           	opt stack 0
  2858  012DCA                     _itos:
  2859                           	opt stack 20
  2860                           
  2861                           ;Types.c: 371: UINT16 Out = input;
  2862                           
  2863                           ;incstack = 0
  2864  012DCA  C0C1  F0C9         	movff	itos@input,itos@Out
  2865  012DCE  C0C2  F0CA         	movff	itos@input+1,itos@Out+1
  2866                           
  2867                           ;Types.c: 372: UINT16 Length = 0;
  2868  012DD2  0E00               	movlw	0
  2869  012DD4  0100               	movlb	0	; () banked
  2870  012DD6  6FC8               	movwf	(itos@Length+1)& (0+255),b
  2871  012DD8  0E00               	movlw	0
  2872  012DDA  6FC7               	movwf	itos@Length& (0+255),b
  2873                           
  2874                           ; BSR set to: 0
  2875                           ;Types.c: 373: char *Data = destination;
  2876  012DDC  C0C3  F0C5         	movff	itos@destination,itos@Data
  2877  012DE0  C0C4  F0C6         	movff	itos@destination+1,itos@Data+1
  2878                           
  2879                           ; BSR set to: 0
  2880                           ;Types.c: 374: if(Out == 0)
  2881  012DE4  0100               	movlb	0	; () banked
  2882  012DE6  51C9               	movf	itos@Out& (0+255),w,b
  2883  012DE8  0100               	movlb	0	; () banked
  2884  012DEA  11CA               	iorwf	(itos@Out+1)& (0+255),w,b
  2885  012DEC  A4D8               	btfss	status,2,c
  2886  012DEE  D034               	goto	l929
  2887                           
  2888                           ; BSR set to: 0
  2889                           ;Types.c: 375: {
  2890                           ;Types.c: 376: Data[0] = (UINT16)'0';
  2891  012DF0  C0C5  FFD9         	movff	itos@Data,fsr2l
  2892  012DF4  C0C6  FFDA         	movff	itos@Data+1,fsr2h
  2893  012DF8  0E30               	movlw	48
  2894  012DFA  6EDF               	movwf	indf2,c
  2895                           
  2896                           ; BSR set to: 0
  2897                           ;Types.c: 377: Length = 1;
  2898  012DFC  0E00               	movlw	0
  2899  012DFE  0100               	movlb	0	; () banked
  2900  012E00  6FC8               	movwf	(itos@Length+1)& (0+255),b
  2901  012E02  0E01               	movlw	1
  2902  012E04  6FC7               	movwf	itos@Length& (0+255),b
  2903                           
  2904                           ;Types.c: 378: }
  2905  012E06  D040               	goto	l928
  2906  012E08                     
  2907                           ; BSR set to: 0
  2908                           ;Types.c: 382: {
  2909                           ;Types.c: 383: Data[0] = (UINT16)'0' + Out%10;
  2910                           
  2911                           ; BSR set to: 0
  2912  012E08  C0C9  F0BA         	movff	itos@Out,___lwmod@dividend
  2913  012E0C  C0CA  F0BB         	movff	itos@Out+1,___lwmod@dividend+1
  2914  012E10  0E00               	movlw	0
  2915  012E12  0100               	movlb	0	; () banked
  2916  012E14  6FBD               	movwf	(___lwmod@divisor+1)& (0+255),b
  2917  012E16  0E0A               	movlw	10
  2918  012E18  6FBC               	movwf	___lwmod@divisor& (0+255),b
  2919  012E1A  EC04  F0A1         	call	___lwmod	;wreg free
  2920  012E1E  0100               	movlb	0	; () banked
  2921  012E20  51BA               	movf	?___lwmod& (0+255),w,b
  2922  012E22  0F30               	addlw	48
  2923  012E24  C0C5  FFD9         	movff	itos@Data,fsr2l
  2924  012E28  C0C6  FFDA         	movff	itos@Data+1,fsr2h
  2925  012E2C  6EDF               	movwf	indf2,c
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;Types.c: 384: Out /= 10;
  2929  012E2E  C0C9  F0BA         	movff	itos@Out,___lwdiv@dividend
  2930  012E32  C0CA  F0BB         	movff	itos@Out+1,___lwdiv@dividend+1
  2931  012E36  0E00               	movlw	0
  2932  012E38  0100               	movlb	0	; () banked
  2933  012E3A  6FBD               	movwf	(___lwdiv@divisor+1)& (0+255),b
  2934  012E3C  0E0A               	movlw	10
  2935  012E3E  6FBC               	movwf	___lwdiv@divisor& (0+255),b
  2936  012E40  ECD9  F09E         	call	___lwdiv	;wreg free
  2937  012E44  C0BA  F0C9         	movff	?___lwdiv,itos@Out
  2938  012E48  C0BB  F0CA         	movff	?___lwdiv+1,itos@Out+1
  2939                           
  2940                           ;Types.c: 385: Length ++;
  2941  012E4C  0100               	movlb	0	; () banked
  2942  012E4E  4BC7               	infsnz	itos@Length& (0+255),f,b
  2943  012E50  2BC8               	incf	(itos@Length+1)& (0+255),f,b
  2944                           
  2945                           ; BSR set to: 0
  2946                           ;Types.c: 386: Data++;
  2947  012E52  0100               	movlb	0	; () banked
  2948  012E54  4BC5               	infsnz	itos@Data& (0+255),f,b
  2949  012E56  2BC6               	incf	(itos@Data+1)& (0+255),f,b
  2950  012E58                     l929:
  2951                           
  2952                           ; BSR set to: 0
  2953                           
  2954                           ; BSR set to: 0
  2955  012E58  0100               	movlb	0	; () banked
  2956  012E5A  51C9               	movf	itos@Out& (0+255),w,b
  2957  012E5C  0100               	movlb	0	; () banked
  2958  012E5E  11CA               	iorwf	(itos@Out+1)& (0+255),w,b
  2959  012E60  B4D8               	btfsc	status,2,c
  2960  012E62  D008               	goto	u10260
  2961                           
  2962                           ; BSR set to: 0
  2963  012E64  0100               	movlb	0	; () banked
  2964  012E66  51C8               	movf	(itos@Length+1)& (0+255),w,b
  2965  012E68  E105               	bnz	l13736
  2966  012E6A  0E06               	movlw	6
  2967  012E6C  0100               	movlb	0	; () banked
  2968  012E6E  5DC7               	subwf	itos@Length& (0+255),w,b
  2969  012E70  A0D8               	btfss	status,0,c
  2970  012E72  D7CA               	goto	l930
  2971  012E74                     u10260:
  2972  012E74                     l13736:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;Types.c: 387: }
  2976                           ;Types.c: 388: reverse(destination, Length);
  2977  012E74  C0C3  F0BA         	movff	itos@destination,reverse@input
  2978  012E78  C0C4  F0BB         	movff	itos@destination+1,reverse@input+1
  2979  012E7C  C0C7  F0BC         	movff	itos@Length,reverse@length
  2980  012E80  C0C8  F0BD         	movff	itos@Length+1,reverse@length+1
  2981  012E84  ECFC  F09F         	call	_reverse	;wreg free
  2982  012E88                     l928:
  2983                           
  2984                           ;Types.c: 389: }
  2985                           ;Types.c: 390: destination[Length] = '\0';
  2986  012E88  0100               	movlb	0	; () banked
  2987  012E8A  51C7               	movf	itos@Length& (0+255),w,b
  2988  012E8C  0100               	movlb	0	; () banked
  2989  012E8E  25C3               	addwf	itos@destination& (0+255),w,b
  2990  012E90  6ED9               	movwf	fsr2l,c
  2991  012E92  0100               	movlb	0	; () banked
  2992  012E94  51C8               	movf	(itos@Length+1)& (0+255),w,b
  2993  012E96  0100               	movlb	0	; () banked
  2994  012E98  21C4               	addwfc	(itos@destination+1)& (0+255),w,b
  2995  012E9A  6EDA               	movwf	fsr2h,c
  2996  012E9C  0E00               	movlw	0
  2997  012E9E  6EDF               	movwf	indf2,c
  2998                           
  2999                           ; BSR set to: 0
  3000  012EA0  0012               	return		;funcret
  3001  012EA2                     __end_of_itos:
  3002                           	opt stack 0
  3003                           tblptru	equ	0xFF8
  3004                           tblptrh	equ	0xFF7
  3005                           tblptrl	equ	0xFF6
  3006                           tablat	equ	0xFF5
  3007                           postinc0	equ	0xFEE
  3008                           wreg	equ	0xFE8
  3009                           postdec1	equ	0xFE5
  3010                           fsr1h	equ	0xFE2
  3011                           fsr1l	equ	0xFE1
  3012                           indf2	equ	0xFDF
  3013                           fsr2h	equ	0xFDA
  3014                           fsr2l	equ	0xFD9
  3015                           status	equ	0xFD8
  3016                           
  3017 ;; *************** function _reverse *****************
  3018 ;; Defined at:
  3019 ;;		line 357 in file "Library/Types.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  input           2    0[BANK0 ] PTR unsigned char 
  3022 ;;		 -> HMIBoard..(8), HMIBoard(58), 
  3023 ;;  length          2    2[BANK0 ] unsigned short 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  iterator        2    5[BANK0 ] PTR unsigned char 
  3026 ;;		 -> HMIBoard..(8), HMIBoard(58), 
  3027 ;;  tempVar         1    4[BANK0 ] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3037 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3038 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3040 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3041 ;;Total ram usage:        7 bytes
  3042 ;; Hardware stack levels used:    1
  3043 ;; Hardware stack levels required when called:    7
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_itos
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text4
  3052  013FF8                     __ptext4:
  3053                           	opt stack 0
  3054  013FF8                     _reverse:
  3055                           	opt stack 20
  3056                           
  3057                           ;Types.c: 359: char tempVar,
  3058                           ;Types.c: 360: *iterator = input + length;
  3059                           
  3060                           ; BSR set to: 0
  3061                           ;incstack = 0
  3062  013FF8  0100               	movlb	0	; () banked
  3063  013FFA  51BC               	movf	reverse@length& (0+255),w,b
  3064  013FFC  0100               	movlb	0	; () banked
  3065  013FFE  25BA               	addwf	reverse@input& (0+255),w,b
  3066  014000  0100               	movlb	0	; () banked
  3067  014002  6FBF               	movwf	reverse@iterator& (0+255),b
  3068  014004  0100               	movlb	0	; () banked
  3069  014006  51BD               	movf	(reverse@length+1)& (0+255),w,b
  3070  014008  0100               	movlb	0	; () banked
  3071  01400A  21BB               	addwfc	(reverse@input+1)& (0+255),w,b
  3072  01400C  0100               	movlb	0	; () banked
  3073  01400E  6FC0               	movwf	(reverse@iterator+1)& (0+255),b
  3074                           
  3075                           ;Types.c: 362: while ( --iterator > input )
  3076  014010  D01A               	goto	l921
  3077  014012                     
  3078                           ; BSR set to: 0
  3079                           ;Types.c: 363: {
  3080                           ;Types.c: 364: tempVar = *input;
  3081                           
  3082                           ; BSR set to: 0
  3083  014012  C0BA  FFD9         	movff	reverse@input,fsr2l
  3084  014016  C0BB  FFDA         	movff	reverse@input+1,fsr2h
  3085  01401A  50DF               	movf	indf2,w,c
  3086  01401C  0100               	movlb	0	; () banked
  3087  01401E  6FBE               	movwf	reverse@tempVar& (0+255),b
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;Types.c: 365: *input++=*iterator;
  3091  014020  C0BF  FFD9         	movff	reverse@iterator,fsr2l
  3092  014024  C0C0  FFDA         	movff	reverse@iterator+1,fsr2h
  3093  014028  C0BA  FFE1         	movff	reverse@input,fsr1l
  3094  01402C  C0BB  FFE2         	movff	reverse@input+1,fsr1h
  3095  014030  CFDF FFE7          	movff	indf2,indf1
  3096                           
  3097                           ; BSR set to: 0
  3098  014034  0100               	movlb	0	; () banked
  3099  014036  4BBA               	infsnz	reverse@input& (0+255),f,b
  3100  014038  2BBB               	incf	(reverse@input+1)& (0+255),f,b
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;Types.c: 366: *iterator=tempVar;
  3104  01403A  C0BF  FFD9         	movff	reverse@iterator,fsr2l
  3105  01403E  C0C0  FFDA         	movff	reverse@iterator+1,fsr2h
  3106  014042  C0BE  FFDF         	movff	reverse@tempVar,indf2
  3107  014046                     l921:
  3108                           
  3109                           ; BSR set to: 0
  3110                           
  3111                           ; BSR set to: 0
  3112  014046  0100               	movlb	0	; () banked
  3113  014048  07BF               	decf	reverse@iterator& (0+255),f,b
  3114  01404A  A0D8               	btfss	status,0,c
  3115  01404C  07C0               	decf	(reverse@iterator+1)& (0+255),f,b
  3116  01404E  0100               	movlb	0	; () banked
  3117  014050  51BF               	movf	reverse@iterator& (0+255),w,b
  3118  014052  0100               	movlb	0	; () banked
  3119  014054  5DBA               	subwf	reverse@input& (0+255),w,b
  3120  014056  0100               	movlb	0	; () banked
  3121  014058  51C0               	movf	(reverse@iterator+1)& (0+255),w,b
  3122  01405A  0100               	movlb	0	; () banked
  3123  01405C  59BB               	subwfb	(reverse@input+1)& (0+255),w,b
  3124  01405E  B0D8               	btfsc	status,0,c
  3125  014060  0012               	return	
  3126  014062  D7D7               	goto	l922
  3127  014064                     __end_of_reverse:
  3128                           	opt stack 0
  3129                           tblptru	equ	0xFF8
  3130                           tblptrh	equ	0xFF7
  3131                           tblptrl	equ	0xFF6
  3132                           tablat	equ	0xFF5
  3133                           postinc0	equ	0xFEE
  3134                           wreg	equ	0xFE8
  3135                           indf1	equ	0xFE7
  3136                           postdec1	equ	0xFE5
  3137                           fsr1h	equ	0xFE2
  3138                           fsr1l	equ	0xFE1
  3139                           indf2	equ	0xFDF
  3140                           fsr2h	equ	0xFDA
  3141                           fsr2l	equ	0xFD9
  3142                           status	equ	0xFD8
  3143                           
  3144 ;; *************** function ___lwmod *****************
  3145 ;; Defined at:
  3146 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwmod.c"
  3147 ;; Parameters:    Size  Location     Type
  3148 ;;  dividend        2    0[BANK0 ] unsigned int 
  3149 ;;  divisor         2    2[BANK0 ] unsigned int 
  3150 ;; Auto vars:     Size  Location     Type
  3151 ;;  counter         1    4[BANK0 ] unsigned char 
  3152 ;; Return value:  Size  Location     Type
  3153 ;;                  2    0[BANK0 ] unsigned int 
  3154 ;; Registers used:
  3155 ;;		wreg, status,2, status,0
  3156 ;; Tracked objects:
  3157 ;;		On entry : 0/0
  3158 ;;		On exit  : 0/0
  3159 ;;		Unchanged: 0/0
  3160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3161 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3164 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3165 ;;Total ram usage:        5 bytes
  3166 ;; Hardware stack levels used:    1
  3167 ;; Hardware stack levels required when called:    7
  3168 ;; This function calls:
  3169 ;;		Nothing
  3170 ;; This function is called by:
  3171 ;;		_itos
  3172 ;;		_printf
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text5
  3177  014208                     __ptext5:
  3178                           	opt stack 0
  3179  014208                     ___lwmod:
  3180                           	opt stack 20
  3181                           
  3182                           ; BSR set to: 0
  3183                           ;incstack = 0
  3184  014208  0100               	movlb	0	; () banked
  3185  01420A  51BC               	movf	___lwmod@divisor& (0+255),w,b
  3186  01420C  0100               	movlb	0	; () banked
  3187  01420E  11BD               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  3188  014210  B4D8               	btfsc	status,2,c
  3189  014212  D026               	goto	l2965
  3190                           
  3191                           ; BSR set to: 0
  3192  014214  0E01               	movlw	1
  3193  014216  0100               	movlb	0	; () banked
  3194  014218  6FBE               	movwf	___lwmod@counter& (0+255),b
  3195  01421A  D006               	goto	l2960
  3196  01421C                     
  3197                           ; BSR set to: 0
  3198                           
  3199                           ; BSR set to: 0
  3200  01421C  0100               	movlb	0	; () banked
  3201  01421E  90D8               	bcf	status,0,c
  3202  014220  37BC               	rlcf	___lwmod@divisor& (0+255),f,b
  3203  014222  37BD               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3204  014224  0100               	movlb	0	; () banked
  3205  014226  2BBE               	incf	___lwmod@counter& (0+255),f,b
  3206  014228                     l2960:
  3207                           
  3208                           ; BSR set to: 0
  3209                           
  3210                           ; BSR set to: 0
  3211  014228  0100               	movlb	0	; () banked
  3212  01422A  AFBD               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3213  01422C  D7F7               	goto	l2961
  3214  01422E                     u10100:
  3215                           
  3216                           ; BSR set to: 0
  3217                           
  3218                           ; BSR set to: 0
  3219                           
  3220                           ; BSR set to: 0
  3221  01422E  0100               	movlb	0	; () banked
  3222  014230  51BC               	movf	___lwmod@divisor& (0+255),w,b
  3223  014232  0100               	movlb	0	; () banked
  3224  014234  5DBA               	subwf	___lwmod@dividend& (0+255),w,b
  3225  014236  0100               	movlb	0	; () banked
  3226  014238  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3227  01423A  0100               	movlb	0	; () banked
  3228  01423C  59BB               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3229  01423E  A0D8               	btfss	status,0,c
  3230  014240  D008               	goto	l2964
  3231                           
  3232                           ; BSR set to: 0
  3233  014242  0100               	movlb	0	; () banked
  3234  014244  51BC               	movf	___lwmod@divisor& (0+255),w,b
  3235  014246  0100               	movlb	0	; () banked
  3236  014248  5FBA               	subwf	___lwmod@dividend& (0+255),f,b
  3237  01424A  0100               	movlb	0	; () banked
  3238  01424C  51BD               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3239  01424E  0100               	movlb	0	; () banked
  3240  014250  5BBB               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3241  014252                     l2964:
  3242                           
  3243                           ; BSR set to: 0
  3244                           
  3245                           ; BSR set to: 0
  3246  014252  0100               	movlb	0	; () banked
  3247  014254  90D8               	bcf	status,0,c
  3248  014256  33BD               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3249  014258  33BC               	rrcf	___lwmod@divisor& (0+255),f,b
  3250                           
  3251                           ; BSR set to: 0
  3252  01425A  0100               	movlb	0	; () banked
  3253  01425C  2FBE               	decfsz	___lwmod@counter& (0+255),f,b
  3254  01425E  D7E7               	goto	u10100
  3255  014260                     l2965:
  3256                           
  3257                           ; BSR set to: 0
  3258                           
  3259                           ; BSR set to: 0
  3260  014260  C0BA  F0BA         	movff	___lwmod@dividend,?___lwmod
  3261  014264  C0BB  F0BB         	movff	___lwmod@dividend+1,?___lwmod+1
  3262                           
  3263                           ; BSR set to: 0
  3264  014268  0012               	return		;funcret
  3265  01426A                     __end_of___lwmod:
  3266                           	opt stack 0
  3267                           tblptru	equ	0xFF8
  3268                           tblptrh	equ	0xFF7
  3269                           tblptrl	equ	0xFF6
  3270                           tablat	equ	0xFF5
  3271                           postinc0	equ	0xFEE
  3272                           wreg	equ	0xFE8
  3273                           indf1	equ	0xFE7
  3274                           postdec1	equ	0xFE5
  3275                           fsr1h	equ	0xFE2
  3276                           fsr1l	equ	0xFE1
  3277                           indf2	equ	0xFDF
  3278                           fsr2h	equ	0xFDA
  3279                           fsr2l	equ	0xFD9
  3280                           status	equ	0xFD8
  3281                           
  3282 ;; *************** function ___lwdiv *****************
  3283 ;; Defined at:
  3284 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lwdiv.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;  dividend        2    0[BANK0 ] unsigned int 
  3287 ;;  divisor         2    2[BANK0 ] unsigned int 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  quotient        2    5[BANK0 ] unsigned int 
  3290 ;;  counter         1    4[BANK0 ] unsigned char 
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  2    0[BANK0 ] unsigned int 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3300 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;Total ram usage:        7 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:    7
  3307 ;; This function calls:
  3308 ;;		Nothing
  3309 ;; This function is called by:
  3310 ;;		_itos
  3311 ;;		_printf
  3312 ;; This function uses a non-reentrant model
  3313 ;;
  3314                           
  3315                           	psect	text6
  3316  013DB2                     __ptext6:
  3317                           	opt stack 0
  3318  013DB2                     ___lwdiv:
  3319                           	opt stack 20
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;incstack = 0
  3323  013DB2  0E00               	movlw	0
  3324  013DB4  0100               	movlb	0	; () banked
  3325  013DB6  6FC0               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3326  013DB8  0E00               	movlw	0
  3327  013DBA  6FBF               	movwf	___lwdiv@quotient& (0+255),b
  3328                           
  3329                           ; BSR set to: 0
  3330  013DBC  0100               	movlb	0	; () banked
  3331  013DBE  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  3332  013DC0  0100               	movlb	0	; () banked
  3333  013DC2  11BD               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  3334  013DC4  B4D8               	btfsc	status,2,c
  3335  013DC6  D02C               	goto	l2955
  3336                           
  3337                           ; BSR set to: 0
  3338  013DC8  0E01               	movlw	1
  3339  013DCA  0100               	movlb	0	; () banked
  3340  013DCC  6FBE               	movwf	___lwdiv@counter& (0+255),b
  3341  013DCE  D006               	goto	l2950
  3342  013DD0                     
  3343                           ; BSR set to: 0
  3344                           
  3345                           ; BSR set to: 0
  3346  013DD0  0100               	movlb	0	; () banked
  3347  013DD2  90D8               	bcf	status,0,c
  3348  013DD4  37BC               	rlcf	___lwdiv@divisor& (0+255),f,b
  3349  013DD6  37BD               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3350  013DD8  0100               	movlb	0	; () banked
  3351  013DDA  2BBE               	incf	___lwdiv@counter& (0+255),f,b
  3352  013DDC                     l2950:
  3353                           
  3354                           ; BSR set to: 0
  3355                           
  3356                           ; BSR set to: 0
  3357  013DDC  0100               	movlb	0	; () banked
  3358  013DDE  AFBD               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3359  013DE0  D7F7               	goto	l2951
  3360  013DE2                     u10070:
  3361                           
  3362                           ; BSR set to: 0
  3363                           
  3364                           ; BSR set to: 0
  3365                           
  3366                           ; BSR set to: 0
  3367  013DE2  0100               	movlb	0	; () banked
  3368  013DE4  90D8               	bcf	status,0,c
  3369  013DE6  37BF               	rlcf	___lwdiv@quotient& (0+255),f,b
  3370  013DE8  37C0               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3371                           
  3372                           ; BSR set to: 0
  3373  013DEA  0100               	movlb	0	; () banked
  3374  013DEC  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  3375  013DEE  0100               	movlb	0	; () banked
  3376  013DF0  5DBA               	subwf	___lwdiv@dividend& (0+255),w,b
  3377  013DF2  0100               	movlb	0	; () banked
  3378  013DF4  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3379  013DF6  0100               	movlb	0	; () banked
  3380  013DF8  59BB               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3381  013DFA  A0D8               	btfss	status,0,c
  3382  013DFC  D00A               	goto	l2954
  3383                           
  3384                           ; BSR set to: 0
  3385  013DFE  0100               	movlb	0	; () banked
  3386  013E00  51BC               	movf	___lwdiv@divisor& (0+255),w,b
  3387  013E02  0100               	movlb	0	; () banked
  3388  013E04  5FBA               	subwf	___lwdiv@dividend& (0+255),f,b
  3389  013E06  0100               	movlb	0	; () banked
  3390  013E08  51BD               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3391  013E0A  0100               	movlb	0	; () banked
  3392  013E0C  5BBB               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3393                           
  3394                           ; BSR set to: 0
  3395  013E0E  0100               	movlb	0	; () banked
  3396  013E10  81BF               	bsf	___lwdiv@quotient& (0+255),0,b
  3397  013E12                     l2954:
  3398                           
  3399                           ; BSR set to: 0
  3400                           
  3401                           ; BSR set to: 0
  3402  013E12  0100               	movlb	0	; () banked
  3403  013E14  90D8               	bcf	status,0,c
  3404  013E16  33BD               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3405  013E18  33BC               	rrcf	___lwdiv@divisor& (0+255),f,b
  3406                           
  3407                           ; BSR set to: 0
  3408  013E1A  0100               	movlb	0	; () banked
  3409  013E1C  2FBE               	decfsz	___lwdiv@counter& (0+255),f,b
  3410  013E1E  D7E1               	goto	u10070
  3411  013E20                     l2955:
  3412                           
  3413                           ; BSR set to: 0
  3414                           
  3415                           ; BSR set to: 0
  3416  013E20  C0BF  F0BA         	movff	___lwdiv@quotient,?___lwdiv
  3417  013E24  C0C0  F0BB         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3418                           
  3419                           ; BSR set to: 0
  3420  013E28  0012               	return		;funcret
  3421  013E2A                     __end_of___lwdiv:
  3422                           	opt stack 0
  3423                           tblptru	equ	0xFF8
  3424                           tblptrh	equ	0xFF7
  3425                           tblptrl	equ	0xFF6
  3426                           tablat	equ	0xFF5
  3427                           postinc0	equ	0xFEE
  3428                           wreg	equ	0xFE8
  3429                           indf1	equ	0xFE7
  3430                           postdec1	equ	0xFE5
  3431                           fsr1h	equ	0xFE2
  3432                           fsr1l	equ	0xFE1
  3433                           indf2	equ	0xFDF
  3434                           fsr2h	equ	0xFDA
  3435                           fsr2l	equ	0xFD9
  3436                           status	equ	0xFD8
  3437                           
  3438 ;; *************** function _HMI_SetSegments *****************
  3439 ;; Defined at:
  3440 ;;		line 226 in file "HMI.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  pString         2    1[BANK0 ] PTR unsigned char 
  3443 ;;		 -> HMIBoard..(8), HMIBoard(58), 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  in              2    4[BANK0 ] unsigned short 
  3446 ;; Return value:  Size  Location     Type
  3447 ;;                  1    wreg      void 
  3448 ;; Registers used:
  3449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3450 ;; Tracked objects:
  3451 ;;		On entry : 0/0
  3452 ;;		On exit  : 0/0
  3453 ;;		Unchanged: 0/0
  3454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3455 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3458 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3459 ;;Total ram usage:        5 bytes
  3460 ;; Hardware stack levels used:    1
  3461 ;; Hardware stack levels required when called:    8
  3462 ;; This function calls:
  3463 ;;		_ToSegment
  3464 ;; This function is called by:
  3465 ;;		_HMI_SetNumber
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           	psect	text7
  3470  013428                     __ptext7:
  3471                           	opt stack 0
  3472  013428                     _HMI_SetSegments:
  3473                           	opt stack 20
  3474                           
  3475                           ;HMI.c: 228: UINT16 in=0;
  3476                           
  3477                           ; BSR set to: 0
  3478                           ;incstack = 0
  3479  013428  0E00               	movlw	0
  3480  01342A  0100               	movlb	0	; () banked
  3481  01342C  6FBF               	movwf	(HMI_SetSegments@in+1)& (0+255),b
  3482  01342E  0E00               	movlw	0
  3483  013430  6FBE               	movwf	HMI_SetSegments@in& (0+255),b
  3484                           
  3485                           ;HMI.c: 229: while(*pString)
  3486  013432  D038               	goto	l1202
  3487  013434                     
  3488                           ; BSR set to: 0
  3489                           ;HMI.c: 230: {
  3490                           ;HMI.c: 231: HMIBoard.pSevenSegment[in] = ToSegment(*pString);
  3491                           
  3492                           ; BSR set to: 0
  3493  013434  0E40               	movlw	low _HMIBoard
  3494  013436  0100               	movlb	0	; () banked
  3495  013438  25BE               	addwf	HMI_SetSegments@in& (0+255),w,b
  3496  01343A  6ED9               	movwf	fsr2l,c
  3497  01343C  0E01               	movlw	high _HMIBoard
  3498  01343E  0100               	movlb	0	; () banked
  3499  013440  21BF               	addwfc	(HMI_SetSegments@in+1)& (0+255),w,b
  3500  013442  6EDA               	movwf	fsr2h,c
  3501  013444  C0BB  FFE1         	movff	HMI_SetSegments@pString,fsr1l
  3502  013448  C0BC  FFE2         	movff	HMI_SetSegments@pString+1,fsr1h
  3503  01344C  50E7               	movf	indf1,w,c
  3504  01344E  EC73  F08A         	call	_ToSegment
  3505  013452  6EDF               	movwf	indf2,c
  3506                           
  3507                           ;HMI.c: 233: if (HMIBoard.pSevenSegment[in] == eDot)
  3508  013454  0E40               	movlw	low _HMIBoard
  3509  013456  0100               	movlb	0	; () banked
  3510  013458  25BE               	addwf	HMI_SetSegments@in& (0+255),w,b
  3511  01345A  6ED9               	movwf	fsr2l,c
  3512  01345C  0E01               	movlw	high _HMIBoard
  3513  01345E  0100               	movlb	0	; () banked
  3514  013460  21BF               	addwfc	(HMI_SetSegments@in+1)& (0+255),w,b
  3515  013462  6EDA               	movwf	fsr2h,c
  3516  013464  0E80               	movlw	128
  3517  013466  18DE               	xorwf	postinc2,w,c
  3518  013468  A4D8               	btfss	status,2,c
  3519  01346A  D00E               	goto	l1201
  3520                           
  3521                           ; BSR set to: 0
  3522                           ;HMI.c: 234: {
  3523                           ;HMI.c: 235: in--;
  3524  01346C  0100               	movlb	0	; () banked
  3525  01346E  07BE               	decf	HMI_SetSegments@in& (0+255),f,b
  3526  013470  A0D8               	btfss	status,0,c
  3527  013472  07BF               	decf	(HMI_SetSegments@in+1)& (0+255),f,b
  3528                           
  3529                           ; BSR set to: 0
  3530                           ;HMI.c: 236: HMIBoard.pSevenSegment[in] |= eDot;
  3531  013474  0E40               	movlw	low _HMIBoard
  3532  013476  0100               	movlb	0	; () banked
  3533  013478  25BE               	addwf	HMI_SetSegments@in& (0+255),w,b
  3534  01347A  6ED9               	movwf	fsr2l,c
  3535  01347C  0E01               	movlw	high _HMIBoard
  3536  01347E  0100               	movlb	0	; () banked
  3537  013480  21BF               	addwfc	(HMI_SetSegments@in+1)& (0+255),w,b
  3538  013482  6EDA               	movwf	fsr2h,c
  3539  013484  0E00               	movlw	0
  3540  013486  8EDB               	bsf	plusw2,7,c
  3541  013488                     l1201:
  3542                           
  3543                           ; BSR set to: 0
  3544                           ;HMI.c: 237: }
  3545                           ;HMI.c: 239: pString++;
  3546                           
  3547                           ; BSR set to: 0
  3548  013488  0100               	movlb	0	; () banked
  3549  01348A  4BBB               	infsnz	HMI_SetSegments@pString& (0+255),f,b
  3550  01348C  2BBC               	incf	(HMI_SetSegments@pString+1)& (0+255),f,b
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;HMI.c: 240: in++;
  3554  01348E  0100               	movlb	0	; () banked
  3555  013490  4BBE               	infsnz	HMI_SetSegments@in& (0+255),f,b
  3556  013492  2BBF               	incf	(HMI_SetSegments@in+1)& (0+255),f,b
  3557                           
  3558                           ; BSR set to: 0
  3559                           ;HMI.c: 241: if (in>=6)
  3560  013494  0100               	movlb	0	; () banked
  3561  013496  51BF               	movf	(HMI_SetSegments@in+1)& (0+255),w,b
  3562  013498  E11A               	bnz	l13812
  3563  01349A  0E06               	movlw	6
  3564  01349C  0100               	movlb	0	; () banked
  3565  01349E  5DBE               	subwf	HMI_SetSegments@in& (0+255),w,b
  3566  0134A0  B0D8               	btfsc	status,0,c
  3567  0134A2  D015               	goto	l1204
  3568  0134A4                     l1202:
  3569                           
  3570                           ; BSR set to: 0
  3571                           
  3572                           ; BSR set to: 0
  3573                           
  3574                           ; BSR set to: 0
  3575  0134A4  C0BB  FFD9         	movff	HMI_SetSegments@pString,fsr2l
  3576  0134A8  C0BC  FFDA         	movff	HMI_SetSegments@pString+1,fsr2h
  3577  0134AC  50DF               	movf	indf2,w,c
  3578  0134AE  B4D8               	btfsc	status,2,c
  3579  0134B0  D00E               	goto	l1204
  3580  0134B2  D7C0               	goto	l1200
  3581  0134B4                     
  3582                           ; BSR set to: 0
  3583                           ;HMI.c: 245: {
  3584                           ;HMI.c: 246: HMIBoard.pSevenSegment[in] = 0;
  3585                           
  3586                           ; BSR set to: 0
  3587  0134B4  0E40               	movlw	low _HMIBoard
  3588  0134B6  0100               	movlb	0	; () banked
  3589  0134B8  25BE               	addwf	HMI_SetSegments@in& (0+255),w,b
  3590  0134BA  6ED9               	movwf	fsr2l,c
  3591  0134BC  0E01               	movlw	high _HMIBoard
  3592  0134BE  0100               	movlb	0	; () banked
  3593  0134C0  21BF               	addwfc	(HMI_SetSegments@in+1)& (0+255),w,b
  3594  0134C2  6EDA               	movwf	fsr2h,c
  3595  0134C4  0E00               	movlw	0
  3596  0134C6  6EDF               	movwf	indf2,c
  3597                           
  3598                           ; BSR set to: 0
  3599                           ;HMI.c: 247: in++;
  3600  0134C8  0100               	movlb	0	; () banked
  3601  0134CA  4BBE               	infsnz	HMI_SetSegments@in& (0+255),f,b
  3602  0134CC  2BBF               	incf	(HMI_SetSegments@in+1)& (0+255),f,b
  3603  0134CE                     l1204:
  3604  0134CE                     l13812:
  3605                           
  3606                           ; BSR set to: 0
  3607  0134CE  0100               	movlb	0	; () banked
  3608  0134D0  51BF               	movf	(HMI_SetSegments@in+1)& (0+255),w,b
  3609  0134D2  E106               	bnz	l1207
  3610  0134D4  0E06               	movlw	6
  3611  0134D6  0100               	movlb	0	; () banked
  3612  0134D8  5DBE               	subwf	HMI_SetSegments@in& (0+255),w,b
  3613  0134DA  B0D8               	btfsc	status,0,c
  3614  0134DC  0012               	return	
  3615  0134DE  D7EA               	goto	l1205
  3616  0134E0                     l1207:
  3617                           
  3618                           ; BSR set to: 0
  3619  0134E0  0012               	return		;funcret
  3620  0134E2                     __end_of_HMI_SetSegments:
  3621                           	opt stack 0
  3622                           tblptru	equ	0xFF8
  3623                           tblptrh	equ	0xFF7
  3624                           tblptrl	equ	0xFF6
  3625                           tablat	equ	0xFF5
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           indf1	equ	0xFE7
  3629                           postdec1	equ	0xFE5
  3630                           fsr1h	equ	0xFE2
  3631                           fsr1l	equ	0xFE1
  3632                           indf2	equ	0xFDF
  3633                           postinc2	equ	0xFDE
  3634                           plusw2	equ	0xFDB
  3635                           fsr2h	equ	0xFDA
  3636                           fsr2l	equ	0xFD9
  3637                           status	equ	0xFD8
  3638                           
  3639 ;; *************** function _ToSegment *****************
  3640 ;; Defined at:
  3641 ;;		line 284 in file "Library/Types.c"
  3642 ;; Parameters:    Size  Location     Type
  3643 ;;  pCHR            1    wreg     unsigned char 
  3644 ;; Auto vars:     Size  Location     Type
  3645 ;;  pCHR            1    0[BANK0 ] unsigned char 
  3646 ;; Return value:  Size  Location     Type
  3647 ;;                  1    wreg      unsigned char 
  3648 ;; Registers used:
  3649 ;;		wreg, status,2, status,0
  3650 ;; Tracked objects:
  3651 ;;		On entry : 0/0
  3652 ;;		On exit  : 0/0
  3653 ;;		Unchanged: 0/0
  3654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3658 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3659 ;;Total ram usage:        1 bytes
  3660 ;; Hardware stack levels used:    1
  3661 ;; Hardware stack levels required when called:    7
  3662 ;; This function calls:
  3663 ;;		Nothing
  3664 ;; This function is called by:
  3665 ;;		_HMI_SetSegments
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text8
  3670  0114E6                     __ptext8:
  3671                           	opt stack 0
  3672  0114E6                     _ToSegment:
  3673                           	opt stack 20
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;incstack = 0
  3677                           ;ToSegment@pCHR stored from wreg
  3678  0114E6  0100               	movlb	0	; () banked
  3679  0114E8  6FBA               	movwf	ToSegment@pCHR& (0+255),b
  3680                           
  3681                           ;Types.c: 286: switch(pCHR)
  3682  0114EA  D07E               	goto	l853
  3683  0114EC  0E3F               	movlw	63
  3684  0114EE  0012               	return	
  3685  0114F0  0E06               	movlw	6
  3686  0114F2  0012               	return	
  3687  0114F4  0E5B               	movlw	91
  3688  0114F6  0012               	return	
  3689  0114F8  0E4F               	movlw	79
  3690  0114FA  0012               	return	
  3691  0114FC  0E66               	movlw	102
  3692  0114FE  0012               	return	
  3693  011500  0E6D               	movlw	109
  3694  011502  0012               	return	
  3695  011504  0E7D               	movlw	125
  3696  011506  0012               	return	
  3697  011508  0E07               	movlw	7
  3698  01150A  0012               	return	
  3699  01150C  0E7F               	movlw	127
  3700  01150E  0012               	return	
  3701  011510  0E6F               	movlw	111
  3702  011512  0012               	return	
  3703  011514  0E5F               	movlw	95
  3704  011516  0012               	return	
  3705  011518  0E7C               	movlw	124
  3706  01151A  0012               	return	
  3707  01151C  0E58               	movlw	88
  3708  01151E  0012               	return	
  3709  011520  0E5E               	movlw	94
  3710  011522  0012               	return	
  3711  011524  0E7B               	movlw	123
  3712  011526  0012               	return	
  3713  011528  0E71               	movlw	113
  3714  01152A  0012               	return	
  3715  01152C  0E6F               	movlw	111
  3716  01152E  0012               	return	
  3717  011530  0E74               	movlw	116
  3718  011532  0012               	return	
  3719  011534  0E04               	movlw	4
  3720  011536  0012               	return	
  3721  011538  0E0E               	movlw	14
  3722  01153A  0012               	return	
  3723  01153C  0E7A               	movlw	122
  3724  01153E  0012               	return	
  3725  011540  0E06               	movlw	6
  3726  011542  0012               	return	
  3727  011544  0E14               	movlw	20
  3728  011546  0012               	return	
  3729  011548  0E54               	movlw	84
  3730  01154A  0012               	return	
  3731  01154C  0E5C               	movlw	92
  3732  01154E  0012               	return	
  3733  011550  0E73               	movlw	115
  3734  011552  0012               	return	
  3735  011554  0E67               	movlw	103
  3736  011556  0012               	return	
  3737  011558  0E50               	movlw	80
  3738  01155A  0012               	return	
  3739  01155C  0E6D               	movlw	109
  3740  01155E  0012               	return	
  3741  011560  0E78               	movlw	120
  3742  011562  0012               	return	
  3743  011564  0E1C               	movlw	28
  3744  011566  0012               	return	
  3745  011568  0E62               	movlw	98
  3746  01156A  0012               	return	
  3747  01156C  0E2A               	movlw	42
  3748  01156E  0012               	return	
  3749  011570  0E64               	movlw	100
  3750  011572  0012               	return	
  3751  011574  0E6E               	movlw	110
  3752  011576  0012               	return	
  3753  011578  0E5B               	movlw	91
  3754  01157A  0012               	return	
  3755  01157C  0E77               	movlw	119
  3756  01157E  0012               	return	
  3757  011580  0E7F               	movlw	127
  3758  011582  0012               	return	
  3759  011584  0E39               	movlw	57
  3760  011586  0012               	return	
  3761  011588  0E3F               	movlw	63
  3762  01158A  0012               	return	
  3763  01158C  0E79               	movlw	121
  3764  01158E  0012               	return	
  3765  011590  0E71               	movlw	113
  3766  011592  0012               	return	
  3767  011594  0E3D               	movlw	61
  3768  011596  0012               	return	
  3769  011598  0E76               	movlw	118
  3770  01159A  0012               	return	
  3771  01159C  0E06               	movlw	6
  3772  01159E  0012               	return	
  3773  0115A0  0E1E               	movlw	30
  3774  0115A2  0012               	return	
  3775  0115A4  0E57               	movlw	87
  3776  0115A6  0012               	return	
  3777  0115A8  0E38               	movlw	56
  3778  0115AA  0012               	return	
  3779  0115AC  0E76               	movlw	118
  3780  0115AE  0012               	return	
  3781  0115B0  0E76               	movlw	118
  3782  0115B2  0012               	return	
  3783  0115B4  0E3F               	movlw	63
  3784  0115B6  0012               	return	
  3785  0115B8  0E73               	movlw	115
  3786  0115BA  0012               	return	
  3787  0115BC  0E3F               	movlw	63
  3788  0115BE  0012               	return	
  3789  0115C0  0E77               	movlw	119
  3790  0115C2  0012               	return	
  3791  0115C4  0E6D               	movlw	109
  3792  0115C6  0012               	return	
  3793  0115C8  0E31               	movlw	49
  3794  0115CA  0012               	return	
  3795  0115CC  0E3E               	movlw	62
  3796  0115CE  0012               	return	
  3797  0115D0  0E3E               	movlw	62
  3798  0115D2  0012               	return	
  3799  0115D4  0E7E               	movlw	126
  3800  0115D6  0012               	return	
  3801  0115D8  0E76               	movlw	118
  3802  0115DA  0012               	return	
  3803  0115DC  0E66               	movlw	102
  3804  0115DE  0012               	return	
  3805  0115E0  0E5B               	movlw	91
  3806  0115E2  0012               	return	
  3807  0115E4  0E80               	movlw	128
  3808  0115E6  0012               	return	
  3809  0115E8                     l853:
  3810  0115E8  0100               	movlb	0	; () banked
  3811  0115EA  51BA               	movf	ToSegment@pCHR& (0+255),w,b
  3812                           
  3813                           ; Switch size 1, requested type "space"
  3814                           ; Number of cases is 63, Range of values is 46 to 122
  3815                           ; switch strategies available:
  3816                           ; Name         Instructions Cycles
  3817                           ; simple_byte          190    96 (average)
  3818                           ;	Chosen strategy is simple_byte
  3819  0115EC  0A2E               	xorlw	46	; case 46
  3820  0115EE  B4D8               	btfsc	status,2,c
  3821  0115F0  D7F9               	goto	l917
  3822  0115F2  0A1E               	xorlw	30	; case 48
  3823  0115F4  B4D8               	btfsc	status,2,c
  3824  0115F6  D77A               	goto	l854
  3825  0115F8  0A01               	xorlw	1	; case 49
  3826  0115FA  B4D8               	btfsc	status,2,c
  3827  0115FC  D779               	goto	l856
  3828  0115FE  0A03               	xorlw	3	; case 50
  3829  011600  B4D8               	btfsc	status,2,c
  3830  011602  D778               	goto	l857
  3831  011604  0A01               	xorlw	1	; case 51
  3832  011606  B4D8               	btfsc	status,2,c
  3833  011608  D777               	goto	l858
  3834  01160A  0A07               	xorlw	7	; case 52
  3835  01160C  B4D8               	btfsc	status,2,c
  3836  01160E  D776               	goto	l859
  3837  011610  0A01               	xorlw	1	; case 53
  3838  011612  B4D8               	btfsc	status,2,c
  3839  011614  D775               	goto	l860
  3840  011616  0A03               	xorlw	3	; case 54
  3841  011618  B4D8               	btfsc	status,2,c
  3842  01161A  D774               	goto	l861
  3843  01161C  0A01               	xorlw	1	; case 55
  3844  01161E  B4D8               	btfsc	status,2,c
  3845  011620  D773               	goto	l862
  3846  011622  0A0F               	xorlw	15	; case 56
  3847  011624  B4D8               	btfsc	status,2,c
  3848  011626  D772               	goto	l863
  3849  011628  0A01               	xorlw	1	; case 57
  3850  01162A  B4D8               	btfsc	status,2,c
  3851  01162C  D771               	goto	l864
  3852  01162E  0A78               	xorlw	120	; case 65
  3853  011630  B4D8               	btfsc	status,2,c
  3854  011632  D7A4               	goto	l891
  3855  011634  0A03               	xorlw	3	; case 66
  3856  011636  B4D8               	btfsc	status,2,c
  3857  011638  D7A3               	goto	l892
  3858  01163A  0A01               	xorlw	1	; case 67
  3859  01163C  B4D8               	btfsc	status,2,c
  3860  01163E  D7A2               	goto	l893
  3861  011640  0A07               	xorlw	7	; case 68
  3862  011642  B4D8               	btfsc	status,2,c
  3863  011644  D7A1               	goto	l894
  3864  011646  0A01               	xorlw	1	; case 69
  3865  011648  B4D8               	btfsc	status,2,c
  3866  01164A  D7A0               	goto	l895
  3867  01164C  0A03               	xorlw	3	; case 70
  3868  01164E  B4D8               	btfsc	status,2,c
  3869  011650  D79F               	goto	l896
  3870  011652  0A01               	xorlw	1	; case 71
  3871  011654  B4D8               	btfsc	status,2,c
  3872  011656  D79E               	goto	l897
  3873  011658  0A0F               	xorlw	15	; case 72
  3874  01165A  B4D8               	btfsc	status,2,c
  3875  01165C  D79D               	goto	l898
  3876  01165E  0A01               	xorlw	1	; case 73
  3877  011660  B4D8               	btfsc	status,2,c
  3878  011662  D79C               	goto	l899
  3879  011664  0A03               	xorlw	3	; case 74
  3880  011666  B4D8               	btfsc	status,2,c
  3881  011668  D79B               	goto	l900
  3882  01166A  0A01               	xorlw	1	; case 75
  3883  01166C  B4D8               	btfsc	status,2,c
  3884  01166E  D79A               	goto	l901
  3885  011670  0A07               	xorlw	7	; case 76
  3886  011672  B4D8               	btfsc	status,2,c
  3887  011674  D799               	goto	l902
  3888  011676  0A01               	xorlw	1	; case 77
  3889  011678  B4D8               	btfsc	status,2,c
  3890  01167A  D798               	goto	l903
  3891  01167C  0A03               	xorlw	3	; case 78
  3892  01167E  B4D8               	btfsc	status,2,c
  3893  011680  D797               	goto	l904
  3894  011682  0A01               	xorlw	1	; case 79
  3895  011684  B4D8               	btfsc	status,2,c
  3896  011686  D796               	goto	l905
  3897  011688  0A1F               	xorlw	31	; case 80
  3898  01168A  B4D8               	btfsc	status,2,c
  3899  01168C  D795               	goto	l906
  3900  01168E  0A01               	xorlw	1	; case 81
  3901  011690  B4D8               	btfsc	status,2,c
  3902  011692  D794               	goto	l907
  3903  011694  0A03               	xorlw	3	; case 82
  3904  011696  B4D8               	btfsc	status,2,c
  3905  011698  D793               	goto	l908
  3906  01169A  0A01               	xorlw	1	; case 83
  3907  01169C  B4D8               	btfsc	status,2,c
  3908  01169E  D792               	goto	l909
  3909  0116A0  0A07               	xorlw	7	; case 84
  3910  0116A2  B4D8               	btfsc	status,2,c
  3911  0116A4  D791               	goto	l910
  3912  0116A6  0A01               	xorlw	1	; case 85
  3913  0116A8  B4D8               	btfsc	status,2,c
  3914  0116AA  D790               	goto	l911
  3915  0116AC  0A03               	xorlw	3	; case 86
  3916  0116AE  B4D8               	btfsc	status,2,c
  3917  0116B0  D78F               	goto	l912
  3918  0116B2  0A01               	xorlw	1	; case 87
  3919  0116B4  B4D8               	btfsc	status,2,c
  3920  0116B6  D78E               	goto	l913
  3921  0116B8  0A0F               	xorlw	15	; case 88
  3922  0116BA  B4D8               	btfsc	status,2,c
  3923  0116BC  D78D               	goto	l914
  3924  0116BE  0A01               	xorlw	1	; case 89
  3925  0116C0  B4D8               	btfsc	status,2,c
  3926  0116C2  D78C               	goto	l915
  3927  0116C4  0A03               	xorlw	3	; case 90
  3928  0116C6  B4D8               	btfsc	status,2,c
  3929  0116C8  D78B               	goto	l916
  3930  0116CA  0A3B               	xorlw	59	; case 97
  3931  0116CC  B4D8               	btfsc	status,2,c
  3932  0116CE  D722               	goto	l865
  3933  0116D0  0A03               	xorlw	3	; case 98
  3934  0116D2  B4D8               	btfsc	status,2,c
  3935  0116D4  D721               	goto	l866
  3936  0116D6  0A01               	xorlw	1	; case 99
  3937  0116D8  B4D8               	btfsc	status,2,c
  3938  0116DA  D720               	goto	l867
  3939  0116DC  0A07               	xorlw	7	; case 100
  3940  0116DE  B4D8               	btfsc	status,2,c
  3941  0116E0  D71F               	goto	l868
  3942  0116E2  0A01               	xorlw	1	; case 101
  3943  0116E4  B4D8               	btfsc	status,2,c
  3944  0116E6  D71E               	goto	l869
  3945  0116E8  0A03               	xorlw	3	; case 102
  3946  0116EA  B4D8               	btfsc	status,2,c
  3947  0116EC  D71D               	goto	l870
  3948  0116EE  0A01               	xorlw	1	; case 103
  3949  0116F0  B4D8               	btfsc	status,2,c
  3950  0116F2  D71C               	goto	l871
  3951  0116F4  0A0F               	xorlw	15	; case 104
  3952  0116F6  B4D8               	btfsc	status,2,c
  3953  0116F8  D71B               	goto	l872
  3954  0116FA  0A01               	xorlw	1	; case 105
  3955  0116FC  B4D8               	btfsc	status,2,c
  3956  0116FE  D71A               	goto	l873
  3957  011700  0A03               	xorlw	3	; case 106
  3958  011702  B4D8               	btfsc	status,2,c
  3959  011704  D719               	goto	l874
  3960  011706  0A01               	xorlw	1	; case 107
  3961  011708  B4D8               	btfsc	status,2,c
  3962  01170A  D718               	goto	l875
  3963  01170C  0A07               	xorlw	7	; case 108
  3964  01170E  B4D8               	btfsc	status,2,c
  3965  011710  D717               	goto	l876
  3966  011712  0A01               	xorlw	1	; case 109
  3967  011714  B4D8               	btfsc	status,2,c
  3968  011716  D716               	goto	l877
  3969  011718  0A03               	xorlw	3	; case 110
  3970  01171A  B4D8               	btfsc	status,2,c
  3971  01171C  D715               	goto	l878
  3972  01171E  0A01               	xorlw	1	; case 111
  3973  011720  B4D8               	btfsc	status,2,c
  3974  011722  D714               	goto	l879
  3975  011724  0A1F               	xorlw	31	; case 112
  3976  011726  B4D8               	btfsc	status,2,c
  3977  011728  D713               	goto	l880
  3978  01172A  0A01               	xorlw	1	; case 113
  3979  01172C  B4D8               	btfsc	status,2,c
  3980  01172E  D712               	goto	l881
  3981  011730  0A03               	xorlw	3	; case 114
  3982  011732  B4D8               	btfsc	status,2,c
  3983  011734  D711               	goto	l882
  3984  011736  0A01               	xorlw	1	; case 115
  3985  011738  B4D8               	btfsc	status,2,c
  3986  01173A  D710               	goto	l883
  3987  01173C  0A07               	xorlw	7	; case 116
  3988  01173E  B4D8               	btfsc	status,2,c
  3989  011740  D70F               	goto	l884
  3990  011742  0A01               	xorlw	1	; case 117
  3991  011744  B4D8               	btfsc	status,2,c
  3992  011746  D70E               	goto	l885
  3993  011748  0A03               	xorlw	3	; case 118
  3994  01174A  B4D8               	btfsc	status,2,c
  3995  01174C  D70D               	goto	l886
  3996  01174E  0A01               	xorlw	1	; case 119
  3997  011750  B4D8               	btfsc	status,2,c
  3998  011752  D70C               	goto	l887
  3999  011754  0A0F               	xorlw	15	; case 120
  4000  011756  B4D8               	btfsc	status,2,c
  4001  011758  D70B               	goto	l888
  4002  01175A  0A01               	xorlw	1	; case 121
  4003  01175C  B4D8               	btfsc	status,2,c
  4004  01175E  D70A               	goto	l889
  4005  011760  0A03               	xorlw	3	; case 122
  4006  011762  B4D8               	btfsc	status,2,c
  4007  011764  D709               	goto	l890
  4008                           
  4009                           ;Types.c: 354: return 0;
  4010                           
  4011                           ; BSR set to: 0
  4012  011766  0E00               	movlw	0
  4013  011768  0012               	return	
  4014  01176A                     __end_of_ToSegment:
  4015                           	opt stack 0
  4016                           tblptru	equ	0xFF8
  4017                           tblptrh	equ	0xFF7
  4018                           tblptrl	equ	0xFF6
  4019                           tablat	equ	0xFF5
  4020                           postinc0	equ	0xFEE
  4021                           wreg	equ	0xFE8
  4022                           indf1	equ	0xFE7
  4023                           postdec1	equ	0xFE5
  4024                           fsr1h	equ	0xFE2
  4025                           fsr1l	equ	0xFE1
  4026                           indf2	equ	0xFDF
  4027                           postinc2	equ	0xFDE
  4028                           plusw2	equ	0xFDB
  4029                           fsr2h	equ	0xFDA
  4030                           fsr2l	equ	0xFD9
  4031                           status	equ	0xFD8
  4032                           
  4033 ;; *************** function _HMI_Render *****************
  4034 ;; Defined at:
  4035 ;;		line 138 in file "HMI.c"
  4036 ;; Parameters:    Size  Location     Type
  4037 ;;		None
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  a               2    8[BANK0 ] unsigned short 
  4040 ;; Return value:  Size  Location     Type
  4041 ;;                  1    wreg      void 
  4042 ;; Registers used:
  4043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4044 ;; Tracked objects:
  4045 ;;		On entry : 0/0
  4046 ;;		On exit  : 0/0
  4047 ;;		Unchanged: 0/0
  4048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4050 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4052 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4053 ;;Total ram usage:        2 bytes
  4054 ;; Hardware stack levels used:    1
  4055 ;; Hardware stack levels required when called:    9
  4056 ;; This function calls:
  4057 ;;		_OutSeg
  4058 ;; This function is called by:
  4059 ;;		_update_SSD
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text9
  4064  0146A2                     __ptext9:
  4065                           	opt stack 0
  4066  0146A2                     _HMI_Render:
  4067                           	opt stack 20
  4068                           
  4069                           ;HMI.c: 141: for (UINT16 a = 0; a < sizeof(HMIBoard.Bytes); a++)
  4070                           
  4071                           ;incstack = 0
  4072  0146A2  0E00               	movlw	0
  4073  0146A4  0100               	movlb	0	; () banked
  4074  0146A6  6FC3               	movwf	(HMI_Render@a+1)& (0+255),b
  4075  0146A8  0E00               	movlw	0
  4076  0146AA  6FC2               	movwf	HMI_Render@a& (0+255),b
  4077  0146AC                     l14482:
  4078                           
  4079                           ; BSR set to: 0
  4080  0146AC  0100               	movlb	0	; () banked
  4081  0146AE  51C3               	movf	(HMI_Render@a+1)& (0+255),w,b
  4082  0146B0  E116               	bnz	l1158
  4083  0146B2  0E08               	movlw	8
  4084  0146B4  0100               	movlb	0	; () banked
  4085  0146B6  5DC2               	subwf	HMI_Render@a& (0+255),w,b
  4086  0146B8  B0D8               	btfsc	status,0,c
  4087  0146BA  0012               	return	
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;HMI.c: 142: OutSeg(HMIBoard.Bytes[a], a);
  4091                           
  4092                           ; BSR set to: 0
  4093                           
  4094                           ; BSR set to: 0
  4095  0146BC  C0C2  F0BD         	movff	HMI_Render@a,OutSeg@pSegment
  4096  0146C0  0E40               	movlw	low _HMIBoard
  4097  0146C2  0100               	movlb	0	; () banked
  4098  0146C4  25C2               	addwf	HMI_Render@a& (0+255),w,b
  4099  0146C6  6ED9               	movwf	fsr2l,c
  4100  0146C8  0E01               	movlw	high _HMIBoard
  4101  0146CA  0100               	movlb	0	; () banked
  4102  0146CC  21C3               	addwfc	(HMI_Render@a+1)& (0+255),w,b
  4103  0146CE  6EDA               	movwf	fsr2h,c
  4104  0146D0  50DF               	movf	indf2,w,c
  4105  0146D2  EC1C  F09E         	call	_OutSeg
  4106  0146D6  0100               	movlb	0	; () banked
  4107  0146D8  4BC2               	infsnz	HMI_Render@a& (0+255),f,b
  4108  0146DA  2BC3               	incf	(HMI_Render@a+1)& (0+255),f,b
  4109  0146DC  D7E7               	goto	l14482
  4110  0146DE                     l1158:
  4111                           
  4112                           ; BSR set to: 0
  4113  0146DE  0012               	return		;funcret
  4114  0146E0                     __end_of_HMI_Render:
  4115                           	opt stack 0
  4116                           tblptru	equ	0xFF8
  4117                           tblptrh	equ	0xFF7
  4118                           tblptrl	equ	0xFF6
  4119                           tablat	equ	0xFF5
  4120                           postinc0	equ	0xFEE
  4121                           wreg	equ	0xFE8
  4122                           indf1	equ	0xFE7
  4123                           postdec1	equ	0xFE5
  4124                           fsr1h	equ	0xFE2
  4125                           fsr1l	equ	0xFE1
  4126                           indf2	equ	0xFDF
  4127                           postinc2	equ	0xFDE
  4128                           plusw2	equ	0xFDB
  4129                           fsr2h	equ	0xFDA
  4130                           fsr2l	equ	0xFD9
  4131                           status	equ	0xFD8
  4132                           
  4133 ;; *************** function _OutSeg *****************
  4134 ;; Defined at:
  4135 ;;		line 54 in file "HMI.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  pInput          1    wreg     unsigned char 
  4138 ;;  pSegment        1    3[BANK0 ] unsigned char 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  pInput          1    6[BANK0 ] unsigned char 
  4141 ;;  out             1    7[BANK0 ] volatile unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4146 ;; Tracked objects:
  4147 ;;		On entry : 0/0
  4148 ;;		On exit  : 0/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4151 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;Total ram usage:        5 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    8
  4158 ;; This function calls:
  4159 ;;		_SPI_Send
  4160 ;; This function is called by:
  4161 ;;		_HMI_Render
  4162 ;;		_HMI_GRender
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text10
  4167  013C38                     __ptext10:
  4168                           	opt stack 0
  4169  013C38                     _OutSeg:
  4170                           	opt stack 20
  4171                           
  4172                           ; BSR set to: 0
  4173                           ;incstack = 0
  4174                           ;OutSeg@pInput stored from wreg
  4175  013C38  0100               	movlb	0	; () banked
  4176  013C3A  6FC0               	movwf	OutSeg@pInput& (0+255),b
  4177                           
  4178                           ;HMI.c: 58: static UINT8 cur;
  4179                           ;HMI.c: 59: volatile UINT8 out;
  4180                           ;HMI.c: 60: static UINT8 segset;
  4181                           ;HMI.c: 61: static UINT8 a;
  4182                           ;HMI.c: 83: if (pSegment <= 8)
  4183  013C3C  0E09               	movlw	9
  4184  013C3E  0100               	movlb	0	; () banked
  4185  013C40  61BD               	cpfslt	OutSeg@pSegment& (0+255),b
  4186  013C42  0012               	return	
  4187                           
  4188                           ; BSR set to: 0
  4189                           ;HMI.c: 84: {
  4190                           ;HMI.c: 85: cur = pInput;
  4191  013C44  C0C0  F03E         	movff	OutSeg@pInput,OutSeg@cur
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;HMI.c: 86: for (a = 0u; a<8u; a++)
  4195  013C48  0E00               	movlw	0
  4196  013C4A  6E3C               	movwf	OutSeg@a,c
  4197  013C4C                     l13774:
  4198                           
  4199                           ; BSR set to: 0
  4200  013C4C  0E07               	movlw	7
  4201  013C4E  643C               	cpfsgt	OutSeg@a,c
  4202  013C50  D001               	goto	l1146
  4203  013C52  D027               	goto	u10310
  4204  013C54                     l1146:
  4205                           
  4206                           ;HMI.c: 87: {
  4207                           ;HMI.c: 88: segset = (cur & 1u)<<6u;
  4208                           
  4209                           ; BSR set to: 0
  4210  013C54  C03E  F0BE         	movff	OutSeg@cur,??_OutSeg
  4211  013C58  0E01               	movlw	1
  4212  013C5A  0100               	movlb	0	; () banked
  4213  013C5C  17BE               	andwf	??_OutSeg& (0+255),f,b
  4214  013C5E  0E06               	movlw	6
  4215  013C60  0100               	movlb	0	; () banked
  4216  013C62  6FBF               	movwf	(??_OutSeg+1)& (0+255),b
  4217  013C64                     u10305:
  4218  013C64  0100               	movlb	0	; () banked
  4219  013C66  90D8               	bcf	status,0,c
  4220  013C68  37BE               	rlcf	??_OutSeg& (0+255),f,b
  4221  013C6A  0100               	movlb	0	; () banked
  4222  013C6C  2FBF               	decfsz	(??_OutSeg+1)& (0+255),f,b
  4223  013C6E  D7FA               	goto	u10305
  4224  013C70  0100               	movlb	0	; () banked
  4225  013C72  51BE               	movf	??_OutSeg& (0+255),w,b
  4226  013C74  6E3D               	movwf	OutSeg@segset,c
  4227                           
  4228                           ;HMI.c: 89: out = (pSegment<<3u) | a | segset;
  4229  013C76  0100               	movlb	0	; () banked
  4230  013C78  39BD               	swapf	OutSeg@pSegment& (0+255),w,b
  4231  013C7A  42E8               	rrncf	wreg,f,c
  4232  013C7C  0BF8               	andlw	248
  4233  013C7E  103C               	iorwf	OutSeg@a,w,c
  4234  013C80  103D               	iorwf	OutSeg@segset,w,c
  4235  013C82  0100               	movlb	0	; () banked
  4236  013C84  6FC1               	movwf	OutSeg@out& (0+255),b	;volatile
  4237                           
  4238                           ;HMI.c: 90: cur >>= 1;
  4239  013C86  90D8               	bcf	status,0,c
  4240  013C88  323E               	rrcf	OutSeg@cur,f,c
  4241                           
  4242                           ; BSR set to: 0
  4243                           ;HMI.c: 91: SPI_Send(&SPI1, out);
  4244  013C8A  0E7A               	movlw	low _SPI1
  4245  013C8C  0100               	movlb	0	; () banked
  4246  013C8E  6FBA               	movwf	SPI_Send@pInput& (0+255),b
  4247  013C90  0E01               	movlw	high _SPI1
  4248  013C92  0100               	movlb	0	; () banked
  4249  013C94  6FBB               	movwf	(SPI_Send@pInput+1)& (0+255),b
  4250  013C96  C0C1  F0BC         	movff	OutSeg@out,SPI_Send@pData	;volatile
  4251  013C9A  EC32  F0A0         	call	_SPI_Send	;wreg free
  4252  013C9E  2A3C               	incf	OutSeg@a,f,c
  4253  013CA0  D7D5               	goto	l13774
  4254  013CA2                     u10310:
  4255                           
  4256                           ;HMI.c: 96: }
  4257                           ;HMI.c: 97: SPI_Send(&SPI1, 0);
  4258  013CA2  0E7A               	movlw	low _SPI1
  4259  013CA4  0100               	movlb	0	; () banked
  4260  013CA6  6FBA               	movwf	SPI_Send@pInput& (0+255),b
  4261  013CA8  0E01               	movlw	high _SPI1
  4262  013CAA  0100               	movlb	0	; () banked
  4263  013CAC  6FBB               	movwf	(SPI_Send@pInput+1)& (0+255),b
  4264  013CAE  0E00               	movlw	0
  4265  013CB0  0100               	movlb	0	; () banked
  4266  013CB2  6FBC               	movwf	SPI_Send@pData& (0+255),b
  4267  013CB4  EC32  F0A0         	call	_SPI_Send	;wreg free
  4268  013CB8  0012               	return	
  4269  013CBA                     __end_of_OutSeg:
  4270                           	opt stack 0
  4271                           tblptru	equ	0xFF8
  4272                           tblptrh	equ	0xFF7
  4273                           tblptrl	equ	0xFF6
  4274                           tablat	equ	0xFF5
  4275                           postinc0	equ	0xFEE
  4276                           wreg	equ	0xFE8
  4277                           indf1	equ	0xFE7
  4278                           postdec1	equ	0xFE5
  4279                           fsr1h	equ	0xFE2
  4280                           fsr1l	equ	0xFE1
  4281                           indf2	equ	0xFDF
  4282                           postinc2	equ	0xFDE
  4283                           plusw2	equ	0xFDB
  4284                           fsr2h	equ	0xFDA
  4285                           fsr2l	equ	0xFD9
  4286                           status	equ	0xFD8
  4287                           
  4288 ;; *************** function _update_IR_distance *****************
  4289 ;; Defined at:
  4290 ;;		line 130 in file "main.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;		None
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  i               2    4[BANK2 ] unsigned short 
  4295 ;;  IRCumulative    4    7[BANK2 ] float 
  4296 ;;  IRSamples       1    6[BANK2 ] unsigned char 
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Totals:         0       0       2      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;Total ram usage:       13 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    9
  4313 ;; This function calls:
  4314 ;;		_ADC_Start
  4315 ;;		_ADC_Voltage
  4316 ;;		___awdiv
  4317 ;;		___fladd
  4318 ;;		___fldiv
  4319 ;;		___fltol
  4320 ;; This function is called by:
  4321 ;;		_main
  4322 ;;		_follow_wall
  4323 ;;		_irobot_centralise
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text11
  4328  012AEC                     __ptext11:
  4329                           	opt stack 0
  4330  012AEC                     _update_IR_distance:
  4331                           	opt stack 21
  4332                           
  4333                           ;main.c: 131: extern ADC ADC_AN0;
  4334                           ;main.c: 132: float IRCumulative = 0;
  4335                           
  4336                           ;incstack = 0
  4337  012AEC  0E00               	movlw	0
  4338  012AEE  0102               	movlb	2	; () banked
  4339  012AF0  6FB1               	movwf	update_IR_distance@IRCumulative& (0+255),b
  4340  012AF2  0E00               	movlw	0
  4341  012AF4  6FB2               	movwf	(update_IR_distance@IRCumulative+1)& (0+255),b
  4342  012AF6  0E00               	movlw	0
  4343  012AF8  6FB3               	movwf	(update_IR_distance@IRCumulative+2)& (0+255),b
  4344  012AFA  0E00               	movlw	0
  4345  012AFC  6FB4               	movwf	(update_IR_distance@IRCumulative+3)& (0+255),b
  4346                           
  4347                           ;main.c: 133: UINT8 IRSamples = 20;
  4348  012AFE  0E14               	movlw	20
  4349  012B00  0102               	movlb	2	; () banked
  4350  012B02  6FB0               	movwf	update_IR_distance@IRSamples& (0+255),b
  4351                           
  4352                           ;main.c: 134: for (UINT16 i = 0; i <= IRSamples; i++){
  4353  012B04  0E00               	movlw	0
  4354  012B06  0102               	movlb	2	; () banked
  4355  012B08  6FAF               	movwf	(update_IR_distance@i+1)& (0+255),b
  4356  012B0A  0E00               	movlw	0
  4357  012B0C  6FAE               	movwf	update_IR_distance@i& (0+255),b
  4358  012B0E  D048               	goto	l2309
  4359  012B10                     
  4360                           ;main.c: 135: ADC_Start(&ADC_AN0);
  4361                           
  4362                           ; BSR set to: 2
  4363  012B10  0EB5               	movlw	low _ADC_AN0
  4364  012B12  0100               	movlb	0	; () banked
  4365  012B14  6FBC               	movwf	ADC_Start@pInput& (0+255),b
  4366  012B16  0E00               	movlw	high _ADC_AN0
  4367  012B18  0100               	movlb	0	; () banked
  4368  012B1A  6FBD               	movwf	(ADC_Start@pInput+1)& (0+255),b
  4369  012B1C  ECDA  F09D         	call	_ADC_Start	;wreg free
  4370                           
  4371                           ;main.c: 136: IRCumulative += (590 / ADC_Voltage(&ADC_AN0));
  4372  012B20  0EB5               	movlw	low _ADC_AN0
  4373  012B22  0100               	movlb	0	; () banked
  4374  012B24  6FD3               	movwf	ADC_Voltage@pInput& (0+255),b
  4375  012B26  0E00               	movlw	high _ADC_AN0
  4376  012B28  0100               	movlb	0	; () banked
  4377  012B2A  6FD4               	movwf	(ADC_Voltage@pInput+1)& (0+255),b
  4378  012B2C  EC51  F097         	call	_ADC_Voltage	;wreg free
  4379  012B30  C0D3  F2AA         	movff	?_ADC_Voltage,_update_IR_distance$15702
  4380  012B34  C0D4  F2AB         	movff	?_ADC_Voltage+1,_update_IR_distance$15702+1
  4381  012B38  C0D5  F2AC         	movff	?_ADC_Voltage+2,_update_IR_distance$15702+2
  4382  012B3C  C0D6  F2AD         	movff	?_ADC_Voltage+3,_update_IR_distance$15702+3
  4383                           
  4384                           ;main.c: 136: IRCumulative += (590 / ADC_Voltage(&ADC_AN0));
  4385  012B40  C2B1  F0E5         	movff	update_IR_distance@IRCumulative,___fladd@b
  4386  012B44  C2B2  F0E6         	movff	update_IR_distance@IRCumulative+1,___fladd@b+1
  4387  012B48  C2B3  F0E7         	movff	update_IR_distance@IRCumulative+2,___fladd@b+2
  4388  012B4C  C2B4  F0E8         	movff	update_IR_distance@IRCumulative+3,___fladd@b+3
  4389  012B50  C2AA  F0BE         	movff	_update_IR_distance$15702,___fldiv@a
  4390  012B54  C2AB  F0BF         	movff	_update_IR_distance$15702+1,___fldiv@a+1
  4391  012B58  C2AC  F0C0         	movff	_update_IR_distance$15702+2,___fldiv@a+2
  4392  012B5C  C2AD  F0C1         	movff	_update_IR_distance$15702+3,___fldiv@a+3
  4393  012B60  0E00               	movlw	0
  4394  012B62  0100               	movlb	0	; () banked
  4395  012B64  6FBA               	movwf	___fldiv@b& (0+255),b
  4396  012B66  0E80               	movlw	128
  4397  012B68  6FBB               	movwf	(___fldiv@b+1)& (0+255),b
  4398  012B6A  0E13               	movlw	19
  4399  012B6C  6FBC               	movwf	(___fldiv@b+2)& (0+255),b
  4400  012B6E  0E44               	movlw	68
  4401  012B70  6FBD               	movwf	(___fldiv@b+3)& (0+255),b
  4402  012B72  ECB6  F086         	call	___fldiv	;wreg free
  4403  012B76  C0BA  F0E9         	movff	?___fldiv,___fladd@a
  4404  012B7A  C0BB  F0EA         	movff	?___fldiv+1,___fladd@a+1
  4405  012B7E  C0BC  F0EB         	movff	?___fldiv+2,___fladd@a+2
  4406  012B82  C0BD  F0EC         	movff	?___fldiv+3,___fladd@a+3
  4407  012B86  EC00  F080         	call	___fladd	;wreg free
  4408  012B8A  C0E5  F2B1         	movff	?___fladd,update_IR_distance@IRCumulative
  4409  012B8E  C0E6  F2B2         	movff	?___fladd+1,update_IR_distance@IRCumulative+1
  4410  012B92  C0E7  F2B3         	movff	?___fladd+2,update_IR_distance@IRCumulative+2
  4411  012B96  C0E8  F2B4         	movff	?___fladd+3,update_IR_distance@IRCumulative+3
  4412  012B9A  0102               	movlb	2	; () banked
  4413  012B9C  4BAE               	infsnz	update_IR_distance@i& (0+255),f,b
  4414  012B9E  2BAF               	incf	(update_IR_distance@i+1)& (0+255),f,b
  4415  012BA0                     l2309:
  4416                           
  4417                           ; BSR set to: 2
  4418                           
  4419                           ; BSR set to: 2
  4420  012BA0  0102               	movlb	2	; () banked
  4421  012BA2  51B0               	movf	update_IR_distance@IRSamples& (0+255),w,b
  4422  012BA4  0101               	movlb	1	; () banked
  4423  012BA6  6FFC               	movwf	??_update_IR_distance& (0+255),b
  4424  012BA8  6BFD               	clrf	(??_update_IR_distance+1)& (0+255),b
  4425  012BAA  0102               	movlb	2	; () banked
  4426  012BAC  51AE               	movf	update_IR_distance@i& (0+255),w,b
  4427  012BAE  0101               	movlb	1	; () banked
  4428  012BB0  5DFC               	subwf	??_update_IR_distance& (0+255),w,b
  4429  012BB2  0102               	movlb	2	; () banked
  4430  012BB4  51AF               	movf	(update_IR_distance@i+1)& (0+255),w,b
  4431  012BB6  0101               	movlb	1	; () banked
  4432  012BB8  59FD               	subwfb	(??_update_IR_distance+1)& (0+255),w,b
  4433  012BBA  B0D8               	btfsc	status,0,c
  4434  012BBC  D7A9               	goto	l2310
  4435                           
  4436                           ; BSR set to: 1
  4437                           ;main.c: 137: }
  4438                           ;main.c: 139: IRValue = ((int)IRCumulative)/IRSamples;
  4439                           
  4440                           ; BSR set to: 1
  4441  012BBE  C2B1  F0BA         	movff	update_IR_distance@IRCumulative,___fltol@f1
  4442  012BC2  C2B2  F0BB         	movff	update_IR_distance@IRCumulative+1,___fltol@f1+1
  4443  012BC6  C2B3  F0BC         	movff	update_IR_distance@IRCumulative+2,___fltol@f1+2
  4444  012BCA  C2B4  F0BD         	movff	update_IR_distance@IRCumulative+3,___fltol@f1+3
  4445  012BCE  ECF0  F094         	call	___fltol	;wreg free
  4446  012BD2  C0BA  F0C4         	movff	?___fltol,___awdiv@dividend
  4447  012BD6  C0BB  F0C5         	movff	?___fltol+1,___awdiv@dividend+1
  4448  012BDA  C2B0  F0C6         	movff	update_IR_distance@IRSamples,___awdiv@divisor
  4449  012BDE  0100               	movlb	0	; () banked
  4450  012BE0  6BC7               	clrf	(___awdiv@divisor+1)& (0+255),b
  4451  012BE2  EC57  F099         	call	___awdiv	;wreg free
  4452  012BE6  C0C4  F06D         	movff	?___awdiv,_IRValue
  4453  012BEA  C0C5  F06E         	movff	?___awdiv+1,_IRValue+1
  4454  012BEE  0012               	return		;funcret
  4455  012BF0                     __end_of_update_IR_distance:
  4456                           	opt stack 0
  4457                           tblptru	equ	0xFF8
  4458                           tblptrh	equ	0xFF7
  4459                           tblptrl	equ	0xFF6
  4460                           tablat	equ	0xFF5
  4461                           postinc0	equ	0xFEE
  4462                           wreg	equ	0xFE8
  4463                           indf1	equ	0xFE7
  4464                           postdec1	equ	0xFE5
  4465                           fsr1h	equ	0xFE2
  4466                           fsr1l	equ	0xFE1
  4467                           indf2	equ	0xFDF
  4468                           postinc2	equ	0xFDE
  4469                           plusw2	equ	0xFDB
  4470                           fsr2h	equ	0xFDA
  4471                           fsr2l	equ	0xFD9
  4472                           status	equ	0xFD8
  4473                           
  4474 ;; *************** function ___fltol *****************
  4475 ;; Defined at:
  4476 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\fltol.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  f1              4    0[BANK0 ] void 
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;  exp1            1    9[BANK0 ] unsigned char 
  4481 ;;  sign1           1    8[BANK0 ] unsigned char 
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  4    0[BANK0 ] long 
  4484 ;; Registers used:
  4485 ;;		wreg, status,2, status,0
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4491 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4495 ;;Total ram usage:       10 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    7
  4498 ;; This function calls:
  4499 ;;		Nothing
  4500 ;; This function is called by:
  4501 ;;		_update_IR_distance
  4502 ;;		_get_apparentDistance
  4503 ;;		_degrees_to_steps
  4504 ;;		_floor
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text12
  4509  0129E0                     __ptext12:
  4510                           	opt stack 0
  4511  0129E0                     ___fltol:
  4512                           	opt stack 22
  4513                           
  4514                           ;incstack = 0
  4515  0129E0  0100               	movlb	0	; () banked
  4516  0129E2  35BC               	rlcf	(___fltol@f1+2)& (0+255),w,b
  4517  0129E4  35BD               	rlcf	(___fltol@f1+3)& (0+255),w,b
  4518  0129E6  0100               	movlb	0	; () banked
  4519  0129E8  6FC3               	movwf	___fltol@exp1& (0+255),b
  4520  0129EA  0100               	movlb	0	; () banked
  4521  0129EC  51C3               	movf	___fltol@exp1& (0+255),w,b
  4522  0129EE  A4D8               	btfss	status,2,c
  4523  0129F0  D00A               	goto	l2776
  4524                           
  4525                           ; BSR set to: 0
  4526  0129F2  0E00               	movlw	0
  4527  0129F4  0100               	movlb	0	; () banked
  4528  0129F6  6FBA               	movwf	?___fltol& (0+255),b
  4529  0129F8  0E00               	movlw	0
  4530  0129FA  6FBB               	movwf	(?___fltol+1)& (0+255),b
  4531  0129FC  0E00               	movlw	0
  4532  0129FE  6FBC               	movwf	(?___fltol+2)& (0+255),b
  4533  012A00  0E00               	movlw	0
  4534  012A02  6FBD               	movwf	(?___fltol+3)& (0+255),b
  4535                           
  4536                           ; BSR set to: 0
  4537  012A04  0012               	return	
  4538  012A06                     l2776:
  4539                           
  4540                           ; BSR set to: 0
  4541                           
  4542                           ; BSR set to: 0
  4543  012A06  C0BA  F0BE         	movff	___fltol@f1,??___fltol
  4544  012A0A  C0BB  F0BF         	movff	___fltol@f1+1,??___fltol+1
  4545  012A0E  C0BC  F0C0         	movff	___fltol@f1+2,??___fltol+2
  4546  012A12  C0BD  F0C1         	movff	___fltol@f1+3,??___fltol+3
  4547  012A16  0E20               	movlw	32
  4548  012A18  D006               	goto	u16620
  4549  012A1A                     u16625:
  4550  012A1A  0100               	movlb	0	; () banked
  4551  012A1C  90D8               	bcf	status,0,c
  4552  012A1E  33C1               	rrcf	(??___fltol+3)& (0+255),f,b
  4553  012A20  33C0               	rrcf	(??___fltol+2)& (0+255),f,b
  4554  012A22  33BF               	rrcf	(??___fltol+1)& (0+255),f,b
  4555  012A24  33BE               	rrcf	??___fltol& (0+255),f,b
  4556  012A26                     u16620:
  4557  012A26  2EE8               	decfsz	wreg,f,c
  4558  012A28  D7F8               	goto	u16625
  4559  012A2A  0100               	movlb	0	; () banked
  4560  012A2C  51BE               	movf	??___fltol& (0+255),w,b
  4561  012A2E  0100               	movlb	0	; () banked
  4562  012A30  6FC2               	movwf	___fltol@sign1& (0+255),b
  4563                           
  4564                           ; BSR set to: 0
  4565  012A32  0100               	movlb	0	; () banked
  4566  012A34  8FBC               	bsf	(___fltol@f1+2)& (0+255),7,b
  4567                           
  4568                           ; BSR set to: 0
  4569  012A36  0EFF               	movlw	255
  4570  012A38  0100               	movlb	0	; () banked
  4571  012A3A  17BA               	andwf	___fltol@f1& (0+255),f,b
  4572  012A3C  0EFF               	movlw	255
  4573  012A3E  17BB               	andwf	(___fltol@f1+1)& (0+255),f,b
  4574  012A40  0EFF               	movlw	255
  4575  012A42  17BC               	andwf	(___fltol@f1+2)& (0+255),f,b
  4576  012A44  0E00               	movlw	0
  4577  012A46  17BD               	andwf	(___fltol@f1+3)& (0+255),f,b
  4578                           
  4579                           ; BSR set to: 0
  4580  012A48  0E96               	movlw	150
  4581  012A4A  0100               	movlb	0	; () banked
  4582  012A4C  5FC3               	subwf	___fltol@exp1& (0+255),f,b
  4583                           
  4584                           ; BSR set to: 0
  4585  012A4E  0100               	movlb	0	; () banked
  4586  012A50  AFC3               	btfss	___fltol@exp1& (0+255),7,b
  4587  012A52  D01A               	goto	l2778
  4588                           
  4589                           ; BSR set to: 0
  4590  012A54  0100               	movlb	0	; () banked
  4591  012A56  51C3               	movf	___fltol@exp1& (0+255),w,b
  4592  012A58  0A80               	xorlw	128
  4593  012A5A  0F97               	addlw	151
  4594  012A5C  B0D8               	btfsc	status,0,c
  4595  012A5E  D00A               	goto	l2779
  4596                           
  4597                           ; BSR set to: 0
  4598  012A60  0E00               	movlw	0
  4599  012A62  0100               	movlb	0	; () banked
  4600  012A64  6FBA               	movwf	?___fltol& (0+255),b
  4601  012A66  0E00               	movlw	0
  4602  012A68  6FBB               	movwf	(?___fltol+1)& (0+255),b
  4603  012A6A  0E00               	movlw	0
  4604  012A6C  6FBC               	movwf	(?___fltol+2)& (0+255),b
  4605  012A6E  0E00               	movlw	0
  4606  012A70  6FBD               	movwf	(?___fltol+3)& (0+255),b
  4607                           
  4608                           ; BSR set to: 0
  4609  012A72  0012               	return	
  4610  012A74                     l2779:
  4611                           
  4612                           ; BSR set to: 0
  4613                           
  4614                           ; BSR set to: 0
  4615                           
  4616                           ; BSR set to: 0
  4617  012A74  0100               	movlb	0	; () banked
  4618  012A76  90D8               	bcf	status,0,c
  4619  012A78  33BD               	rrcf	(___fltol@f1+3)& (0+255),f,b
  4620  012A7A  33BC               	rrcf	(___fltol@f1+2)& (0+255),f,b
  4621  012A7C  33BB               	rrcf	(___fltol@f1+1)& (0+255),f,b
  4622  012A7E  33BA               	rrcf	___fltol@f1& (0+255),f,b
  4623                           
  4624                           ; BSR set to: 0
  4625  012A80  0100               	movlb	0	; () banked
  4626  012A82  3FC3               	incfsz	___fltol@exp1& (0+255),f,b
  4627  012A84  D7F7               	goto	l2779
  4628                           
  4629                           ; BSR set to: 0
  4630  012A86  D01B               	goto	u16660
  4631  012A88                     l2778:
  4632                           
  4633                           ; BSR set to: 0
  4634                           
  4635                           ; BSR set to: 0
  4636  012A88  0E1F               	movlw	31
  4637  012A8A  0100               	movlb	0	; () banked
  4638  012A8C  65C3               	cpfsgt	___fltol@exp1& (0+255),b
  4639  012A8E  D012               	goto	l2784
  4640                           
  4641                           ; BSR set to: 0
  4642  012A90  0E00               	movlw	0
  4643  012A92  0100               	movlb	0	; () banked
  4644  012A94  6FBA               	movwf	?___fltol& (0+255),b
  4645  012A96  0E00               	movlw	0
  4646  012A98  6FBB               	movwf	(?___fltol+1)& (0+255),b
  4647  012A9A  0E00               	movlw	0
  4648  012A9C  6FBC               	movwf	(?___fltol+2)& (0+255),b
  4649  012A9E  0E00               	movlw	0
  4650  012AA0  6FBD               	movwf	(?___fltol+3)& (0+255),b
  4651                           
  4652                           ; BSR set to: 0
  4653  012AA2  0012               	return	
  4654  012AA4                     
  4655                           ; BSR set to: 0
  4656                           
  4657                           ; BSR set to: 0
  4658  012AA4  0100               	movlb	0	; () banked
  4659  012AA6  90D8               	bcf	status,0,c
  4660  012AA8  37BA               	rlcf	___fltol@f1& (0+255),f,b
  4661  012AAA  37BB               	rlcf	(___fltol@f1+1)& (0+255),f,b
  4662  012AAC  37BC               	rlcf	(___fltol@f1+2)& (0+255),f,b
  4663  012AAE  37BD               	rlcf	(___fltol@f1+3)& (0+255),f,b
  4664  012AB0  0100               	movlb	0	; () banked
  4665  012AB2  07C3               	decf	___fltol@exp1& (0+255),f,b
  4666  012AB4                     l2784:
  4667                           
  4668                           ; BSR set to: 0
  4669                           
  4670                           ; BSR set to: 0
  4671  012AB4  0100               	movlb	0	; () banked
  4672  012AB6  51C3               	movf	___fltol@exp1& (0+255),w,b
  4673  012AB8  0100               	movlb	0	; () banked
  4674  012ABA  A4D8               	btfss	status,2,c
  4675  012ABC  D7F3               	goto	l2785
  4676  012ABE                     u16660:
  4677                           
  4678                           ; BSR set to: 0
  4679                           
  4680                           ; BSR set to: 0
  4681                           
  4682                           ; BSR set to: 0
  4683  012ABE  0100               	movlb	0	; () banked
  4684  012AC0  51C2               	movf	___fltol@sign1& (0+255),w,b
  4685  012AC2  0100               	movlb	0	; () banked
  4686  012AC4  B4D8               	btfsc	status,2,c
  4687  012AC6  D009               	goto	l2787
  4688                           
  4689                           ; BSR set to: 0
  4690  012AC8  0100               	movlb	0	; () banked
  4691  012ACA  1FBD               	comf	(___fltol@f1+3)& (0+255),f,b
  4692  012ACC  1FBC               	comf	(___fltol@f1+2)& (0+255),f,b
  4693  012ACE  1FBB               	comf	(___fltol@f1+1)& (0+255),f,b
  4694  012AD0  6DBA               	negf	___fltol@f1& (0+255),b
  4695  012AD2  0E00               	movlw	0
  4696  012AD4  23BB               	addwfc	(___fltol@f1+1)& (0+255),f,b
  4697  012AD6  23BC               	addwfc	(___fltol@f1+2)& (0+255),f,b
  4698  012AD8  23BD               	addwfc	(___fltol@f1+3)& (0+255),f,b
  4699  012ADA                     l2787:
  4700                           
  4701                           ; BSR set to: 0
  4702                           
  4703                           ; BSR set to: 0
  4704  012ADA  C0BA  F0BA         	movff	___fltol@f1,?___fltol
  4705  012ADE  C0BB  F0BB         	movff	___fltol@f1+1,?___fltol+1
  4706  012AE2  C0BC  F0BC         	movff	___fltol@f1+2,?___fltol+2
  4707  012AE6  C0BD  F0BD         	movff	___fltol@f1+3,?___fltol+3
  4708  012AEA  0012               	return	
  4709  012AEC                     __end_of___fltol:
  4710                           	opt stack 0
  4711                           tblptru	equ	0xFF8
  4712                           tblptrh	equ	0xFF7
  4713                           tblptrl	equ	0xFF6
  4714                           tablat	equ	0xFF5
  4715                           postinc0	equ	0xFEE
  4716                           wreg	equ	0xFE8
  4717                           indf1	equ	0xFE7
  4718                           postdec1	equ	0xFE5
  4719                           fsr1h	equ	0xFE2
  4720                           fsr1l	equ	0xFE1
  4721                           indf2	equ	0xFDF
  4722                           postinc2	equ	0xFDE
  4723                           plusw2	equ	0xFDB
  4724                           fsr2h	equ	0xFDA
  4725                           fsr2l	equ	0xFD9
  4726                           status	equ	0xFD8
  4727                           
  4728 ;; *************** function ___fladd *****************
  4729 ;; Defined at:
  4730 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sprcadd.c"
  4731 ;; Parameters:    Size  Location     Type
  4732 ;;  b               4   43[BANK0 ] long 
  4733 ;;  a               4   47[BANK0 ] long 
  4734 ;; Auto vars:     Size  Location     Type
  4735 ;;  grs             1   62[BANK0 ] unsigned char 
  4736 ;;  bexp            1   61[BANK0 ] unsigned char 
  4737 ;;  aexp            1   60[BANK0 ] unsigned char 
  4738 ;;  signs           1   59[BANK0 ] unsigned char 
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  4   43[BANK0 ] unsigned char 
  4741 ;; Registers used:
  4742 ;;		wreg, status,2, status,0
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4748 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4749 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4750 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4751 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4752 ;;Total ram usage:       20 bytes
  4753 ;; Hardware stack levels used:    1
  4754 ;; Hardware stack levels required when called:    7
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_update_IR_distance
  4759 ;;		_cos
  4760 ;;		_sin
  4761 ;;		_floor
  4762 ;;		_eval_poly
  4763 ;;		___flsub
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           	psect	text13
  4768  010000                     __ptext13:
  4769                           	opt stack 0
  4770  010000                     ___fladd:
  4771                           	opt stack 22
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;incstack = 0
  4775  010000  0100               	movlb	0	; () banked
  4776  010002  51E8               	movf	(___fladd@b+3)& (0+255),w,b
  4777  010004  0B80               	andlw	128
  4778  010006  0100               	movlb	0	; () banked
  4779  010008  6FF5               	movwf	___fladd@signs& (0+255),b
  4780  01000A  0100               	movlb	0	; () banked
  4781  01000C  51E8               	movf	(___fladd@b+3)& (0+255),w,b
  4782  01000E  25E8               	addwf	(___fladd@b+3)& (0+255),w,b
  4783  010010  0100               	movlb	0	; () banked
  4784  010012  6FF7               	movwf	___fladd@bexp& (0+255),b
  4785                           
  4786                           ; BSR set to: 0
  4787  010014  0100               	movlb	0	; () banked
  4788  010016  AFE7               	btfss	(___fladd@b+2)& (0+255),7,b
  4789  010018  D002               	goto	l2995
  4790                           
  4791                           ; BSR set to: 0
  4792  01001A  0100               	movlb	0	; () banked
  4793  01001C  81F7               	bsf	___fladd@bexp& (0+255),0,b
  4794  01001E                     l2995:
  4795                           
  4796                           ; BSR set to: 0
  4797                           
  4798                           ; BSR set to: 0
  4799  01001E  0100               	movlb	0	; () banked
  4800  010020  51F7               	movf	___fladd@bexp& (0+255),w,b
  4801  010022  0100               	movlb	0	; () banked
  4802  010024  B4D8               	btfsc	status,2,c
  4803  010026  D012               	goto	l2996
  4804                           
  4805                           ; BSR set to: 0
  4806  010028  0100               	movlb	0	; () banked
  4807  01002A  29F7               	incf	___fladd@bexp& (0+255),w,b
  4808  01002C  A4D8               	btfss	status,2,c
  4809  01002E  D009               	goto	l2997
  4810                           
  4811                           ; BSR set to: 0
  4812  010030  0E00               	movlw	0
  4813  010032  0100               	movlb	0	; () banked
  4814  010034  6FE5               	movwf	___fladd@b& (0+255),b
  4815  010036  0E00               	movlw	0
  4816  010038  6FE6               	movwf	(___fladd@b+1)& (0+255),b
  4817  01003A  0E00               	movlw	0
  4818  01003C  6FE7               	movwf	(___fladd@b+2)& (0+255),b
  4819  01003E  0E00               	movlw	0
  4820  010040  6FE8               	movwf	(___fladd@b+3)& (0+255),b
  4821  010042                     l2997:
  4822                           
  4823                           ; BSR set to: 0
  4824                           
  4825                           ; BSR set to: 0
  4826  010042  0100               	movlb	0	; () banked
  4827  010044  8FE7               	bsf	(___fladd@b+2)& (0+255),7,b
  4828                           
  4829                           ; BSR set to: 0
  4830  010046  0E00               	movlw	0
  4831  010048  0100               	movlb	0	; () banked
  4832  01004A  D008               	goto	L1
  4833  01004C                     l2996:
  4834                           
  4835                           ; BSR set to: 0
  4836                           
  4837                           ; BSR set to: 0
  4838  01004C  0E00               	movlw	0
  4839  01004E  0100               	movlb	0	; () banked
  4840  010050  6FE5               	movwf	___fladd@b& (0+255),b
  4841  010052  0E00               	movlw	0
  4842  010054  6FE6               	movwf	(___fladd@b+1)& (0+255),b
  4843  010056  0E00               	movlw	0
  4844  010058  6FE7               	movwf	(___fladd@b+2)& (0+255),b
  4845  01005A  0E00               	movlw	0
  4846  01005C                     L1:
  4847  01005C  6FE8               	movwf	(___fladd@b+3)& (0+255),b
  4848                           
  4849                           ; BSR set to: 0
  4850                           
  4851                           ; BSR set to: 0
  4852  01005E  0100               	movlb	0	; () banked
  4853  010060  51EC               	movf	(___fladd@a+3)& (0+255),w,b
  4854  010062  0B80               	andlw	128
  4855  010064  0100               	movlb	0	; () banked
  4856  010066  6FF6               	movwf	___fladd@aexp& (0+255),b
  4857                           
  4858                           ; BSR set to: 0
  4859  010068  0100               	movlb	0	; () banked
  4860  01006A  51F5               	movf	___fladd@signs& (0+255),w,b
  4861  01006C  0100               	movlb	0	; () banked
  4862  01006E  19F6               	xorwf	___fladd@aexp& (0+255),w,b
  4863  010070  B4D8               	btfsc	status,2,c
  4864  010072  D002               	goto	l2999
  4865                           
  4866                           ; BSR set to: 0
  4867  010074  0100               	movlb	0	; () banked
  4868  010076  8DF5               	bsf	___fladd@signs& (0+255),6,b
  4869  010078                     l2999:
  4870                           
  4871                           ; BSR set to: 0
  4872                           
  4873                           ; BSR set to: 0
  4874  010078  0100               	movlb	0	; () banked
  4875  01007A  51EC               	movf	(___fladd@a+3)& (0+255),w,b
  4876  01007C  25EC               	addwf	(___fladd@a+3)& (0+255),w,b
  4877  01007E  0100               	movlb	0	; () banked
  4878  010080  6FF6               	movwf	___fladd@aexp& (0+255),b
  4879                           
  4880                           ; BSR set to: 0
  4881  010082  0100               	movlb	0	; () banked
  4882  010084  AFEB               	btfss	(___fladd@a+2)& (0+255),7,b
  4883  010086  D002               	goto	l3000
  4884                           
  4885                           ; BSR set to: 0
  4886  010088  0100               	movlb	0	; () banked
  4887  01008A  81F6               	bsf	___fladd@aexp& (0+255),0,b
  4888  01008C                     l3000:
  4889                           
  4890                           ; BSR set to: 0
  4891                           
  4892                           ; BSR set to: 0
  4893  01008C  0100               	movlb	0	; () banked
  4894  01008E  51F6               	movf	___fladd@aexp& (0+255),w,b
  4895  010090  0100               	movlb	0	; () banked
  4896  010092  B4D8               	btfsc	status,2,c
  4897  010094  D012               	goto	l3001
  4898                           
  4899                           ; BSR set to: 0
  4900  010096  0100               	movlb	0	; () banked
  4901  010098  29F6               	incf	___fladd@aexp& (0+255),w,b
  4902  01009A  A4D8               	btfss	status,2,c
  4903  01009C  D009               	goto	l3002
  4904                           
  4905                           ; BSR set to: 0
  4906  01009E  0E00               	movlw	0
  4907  0100A0  0100               	movlb	0	; () banked
  4908  0100A2  6FE9               	movwf	___fladd@a& (0+255),b
  4909  0100A4  0E00               	movlw	0
  4910  0100A6  6FEA               	movwf	(___fladd@a+1)& (0+255),b
  4911  0100A8  0E00               	movlw	0
  4912  0100AA  6FEB               	movwf	(___fladd@a+2)& (0+255),b
  4913  0100AC  0E00               	movlw	0
  4914  0100AE  6FEC               	movwf	(___fladd@a+3)& (0+255),b
  4915  0100B0                     l3002:
  4916                           
  4917                           ; BSR set to: 0
  4918                           
  4919                           ; BSR set to: 0
  4920  0100B0  0100               	movlb	0	; () banked
  4921  0100B2  8FEB               	bsf	(___fladd@a+2)& (0+255),7,b
  4922                           
  4923                           ; BSR set to: 0
  4924  0100B4  0E00               	movlw	0
  4925  0100B6  0100               	movlb	0	; () banked
  4926  0100B8  D008               	goto	L2
  4927  0100BA                     l3001:
  4928                           
  4929                           ; BSR set to: 0
  4930                           
  4931                           ; BSR set to: 0
  4932  0100BA  0E00               	movlw	0
  4933  0100BC  0100               	movlb	0	; () banked
  4934  0100BE  6FE9               	movwf	___fladd@a& (0+255),b
  4935  0100C0  0E00               	movlw	0
  4936  0100C2  6FEA               	movwf	(___fladd@a+1)& (0+255),b
  4937  0100C4  0E00               	movlw	0
  4938  0100C6  6FEB               	movwf	(___fladd@a+2)& (0+255),b
  4939  0100C8  0E00               	movlw	0
  4940  0100CA                     L2:
  4941  0100CA  6FEC               	movwf	(___fladd@a+3)& (0+255),b
  4942                           
  4943                           ; BSR set to: 0
  4944                           
  4945                           ; BSR set to: 0
  4946  0100CC  0100               	movlb	0	; () banked
  4947  0100CE  51F7               	movf	___fladd@bexp& (0+255),w,b
  4948  0100D0  0100               	movlb	0	; () banked
  4949  0100D2  5DF6               	subwf	___fladd@aexp& (0+255),w,b
  4950  0100D4  B0D8               	btfsc	status,0,c
  4951  0100D6  D024               	goto	l3004
  4952                           
  4953                           ; BSR set to: 0
  4954  0100D8  0100               	movlb	0	; () banked
  4955  0100DA  ADF5               	btfss	___fladd@signs& (0+255),6,b
  4956  0100DC  D003               	goto	l3005
  4957                           
  4958                           ; BSR set to: 0
  4959  0100DE  0E80               	movlw	128
  4960  0100E0  0100               	movlb	0	; () banked
  4961  0100E2  1BF5               	xorwf	___fladd@signs& (0+255),f,b
  4962  0100E4                     l3005:
  4963                           
  4964                           ; BSR set to: 0
  4965                           
  4966                           ; BSR set to: 0
  4967  0100E4  C0F7  F0F8         	movff	___fladd@bexp,___fladd@grs
  4968                           
  4969                           ; BSR set to: 0
  4970  0100E8  C0F6  F0F7         	movff	___fladd@aexp,___fladd@bexp
  4971                           
  4972                           ; BSR set to: 0
  4973  0100EC  C0F8  F0F6         	movff	___fladd@grs,___fladd@aexp
  4974                           
  4975                           ; BSR set to: 0
  4976  0100F0  C0E5  F0F8         	movff	___fladd@b,___fladd@grs
  4977                           
  4978                           ; BSR set to: 0
  4979  0100F4  C0E9  F0E5         	movff	___fladd@a,___fladd@b
  4980                           
  4981                           ; BSR set to: 0
  4982  0100F8  C0F8  F0E9         	movff	___fladd@grs,___fladd@a
  4983                           
  4984                           ; BSR set to: 0
  4985  0100FC  C0E6  F0F8         	movff	___fladd@b+1,___fladd@grs
  4986                           
  4987                           ; BSR set to: 0
  4988  010100  C0EA  F0E6         	movff	___fladd@a+1,___fladd@b+1
  4989                           
  4990                           ; BSR set to: 0
  4991  010104  C0F8  F0EA         	movff	___fladd@grs,___fladd@a+1
  4992                           
  4993                           ; BSR set to: 0
  4994  010108  C0E7  F0F8         	movff	___fladd@b+2,___fladd@grs
  4995                           
  4996                           ; BSR set to: 0
  4997  01010C  C0EB  F0E7         	movff	___fladd@a+2,___fladd@b+2
  4998                           
  4999                           ; BSR set to: 0
  5000  010110  C0F8  F0EB         	movff	___fladd@grs,___fladd@a+2
  5001                           
  5002                           ; BSR set to: 0
  5003  010114  C0E8  F0F8         	movff	___fladd@b+3,___fladd@grs
  5004                           
  5005                           ; BSR set to: 0
  5006  010118  C0EC  F0E8         	movff	___fladd@a+3,___fladd@b+3
  5007                           
  5008                           ; BSR set to: 0
  5009  01011C  C0F8  F0EC         	movff	___fladd@grs,___fladd@a+3
  5010  010120                     l3004:
  5011                           
  5012                           ; BSR set to: 0
  5013                           
  5014                           ; BSR set to: 0
  5015  010120  0E00               	movlw	0
  5016  010122  0100               	movlb	0	; () banked
  5017  010124  6FF8               	movwf	___fladd@grs& (0+255),b
  5018                           
  5019                           ; BSR set to: 0
  5020  010126  0100               	movlb	0	; () banked
  5021  010128  51F7               	movf	___fladd@bexp& (0+255),w,b
  5022  01012A  0100               	movlb	0	; () banked
  5023  01012C  6FED               	movwf	??___fladd& (0+255),b
  5024  01012E  6BEE               	clrf	(??___fladd+1)& (0+255),b
  5025  010130  0100               	movlb	0	; () banked
  5026  010132  1FED               	comf	??___fladd& (0+255),f,b
  5027  010134  1FEE               	comf	(??___fladd+1)& (0+255),f,b
  5028  010136  4BED               	infsnz	??___fladd& (0+255),f,b
  5029  010138  2BEE               	incf	(??___fladd+1)& (0+255),f,b
  5030  01013A  0100               	movlb	0	; () banked
  5031  01013C  51F6               	movf	___fladd@aexp& (0+255),w,b
  5032  01013E  0100               	movlb	0	; () banked
  5033  010140  6FEF               	movwf	(??___fladd+2)& (0+255),b
  5034  010142  6BF0               	clrf	(??___fladd+3)& (0+255),b
  5035  010144  0100               	movlb	0	; () banked
  5036  010146  51ED               	movf	??___fladd& (0+255),w,b
  5037  010148  0100               	movlb	0	; () banked
  5038  01014A  27EF               	addwf	(??___fladd+2)& (0+255),f,b
  5039  01014C  0100               	movlb	0	; () banked
  5040  01014E  51EE               	movf	(??___fladd+1)& (0+255),w,b
  5041  010150  0100               	movlb	0	; () banked
  5042  010152  23F0               	addwfc	(??___fladd+3)& (0+255),f,b
  5043  010154  0100               	movlb	0	; () banked
  5044  010156  BFF0               	btfsc	(??___fladd+3)& (0+255),7,b
  5045  010158  D03D               	goto	l3008
  5046  01015A  0100               	movlb	0	; () banked
  5047  01015C  51F0               	movf	(??___fladd+3)& (0+255),w,b
  5048  01015E  E105               	bnz	u16250
  5049  010160  0E1A               	movlw	26
  5050  010162  0100               	movlb	0	; () banked
  5051  010164  5DEF               	subwf	(??___fladd+2)& (0+255),w,b
  5052  010166  A0D8               	btfss	status,0,c
  5053  010168  D035               	goto	l3008
  5054  01016A                     u16250:
  5055                           
  5056                           ; BSR set to: 0
  5057  01016A  0100               	movlb	0	; () banked
  5058  01016C  51E5               	movf	___fladd@b& (0+255),w,b
  5059  01016E  0100               	movlb	0	; () banked
  5060  010170  11E6               	iorwf	(___fladd@b+1)& (0+255),w,b
  5061  010172  0100               	movlb	0	; () banked
  5062  010174  11E7               	iorwf	(___fladd@b+2)& (0+255),w,b
  5063  010176  0100               	movlb	0	; () banked
  5064  010178  11E8               	iorwf	(___fladd@b+3)& (0+255),w,b
  5065  01017A  B4D8               	btfsc	status,2,c
  5066  01017C  D002               	goto	u16260
  5067  01017E  0E01               	movlw	1
  5068  010180  D001               	goto	u16270
  5069  010182                     u16260:
  5070  010182  0E00               	movlw	0
  5071  010184                     u16270:
  5072  010184  0100               	movlb	0	; () banked
  5073  010186  6FF8               	movwf	___fladd@grs& (0+255),b
  5074                           
  5075                           ; BSR set to: 0
  5076  010188  0E00               	movlw	0
  5077  01018A  0100               	movlb	0	; () banked
  5078  01018C  6FE5               	movwf	___fladd@b& (0+255),b
  5079  01018E  0E00               	movlw	0
  5080  010190  6FE6               	movwf	(___fladd@b+1)& (0+255),b
  5081  010192  0E00               	movlw	0
  5082  010194  6FE7               	movwf	(___fladd@b+2)& (0+255),b
  5083  010196  0E00               	movlw	0
  5084  010198  6FE8               	movwf	(___fladd@b+3)& (0+255),b
  5085                           
  5086                           ; BSR set to: 0
  5087  01019A  C0F6  F0F7         	movff	___fladd@aexp,___fladd@bexp
  5088  01019E  D020               	goto	u16300
  5089  0101A0                     l3009:
  5090                           
  5091                           ; BSR set to: 0
  5092  0101A0  0100               	movlb	0	; () banked
  5093  0101A2  A1F8               	btfss	___fladd@grs& (0+255),0,b
  5094  0101A4  D007               	goto	l3010
  5095                           
  5096                           ; BSR set to: 0
  5097  0101A6  0100               	movlb	0	; () banked
  5098  0101A8  90D8               	bcf	status,0,c
  5099  0101AA  31F8               	rrcf	___fladd@grs& (0+255),w,b
  5100  0101AC  0901               	iorlw	1
  5101  0101AE  0100               	movlb	0	; () banked
  5102  0101B0  6FF8               	movwf	___fladd@grs& (0+255),b
  5103  0101B2  D003               	goto	l3011
  5104  0101B4                     l3010:
  5105                           
  5106                           ; BSR set to: 0
  5107                           
  5108                           ; BSR set to: 0
  5109  0101B4  0100               	movlb	0	; () banked
  5110  0101B6  90D8               	bcf	status,0,c
  5111  0101B8  33F8               	rrcf	___fladd@grs& (0+255),f,b
  5112  0101BA                     l3011:
  5113                           
  5114                           ; BSR set to: 0
  5115                           
  5116                           ; BSR set to: 0
  5117  0101BA  0100               	movlb	0	; () banked
  5118  0101BC  A1E5               	btfss	___fladd@b& (0+255),0,b
  5119  0101BE  D002               	goto	l3012
  5120                           
  5121                           ; BSR set to: 0
  5122  0101C0  0100               	movlb	0	; () banked
  5123  0101C2  8FF8               	bsf	___fladd@grs& (0+255),7,b
  5124  0101C4                     l3012:
  5125                           
  5126                           ; BSR set to: 0
  5127                           
  5128                           ; BSR set to: 0
  5129  0101C4  0100               	movlb	0	; () banked
  5130  0101C6  35E8               	rlcf	(___fladd@b+3)& (0+255),w,b
  5131  0101C8  33E8               	rrcf	(___fladd@b+3)& (0+255),f,b
  5132  0101CA  33E7               	rrcf	(___fladd@b+2)& (0+255),f,b
  5133  0101CC  33E6               	rrcf	(___fladd@b+1)& (0+255),f,b
  5134  0101CE  33E5               	rrcf	___fladd@b& (0+255),f,b
  5135                           
  5136                           ; BSR set to: 0
  5137  0101D0  0100               	movlb	0	; () banked
  5138  0101D2  2BF7               	incf	___fladd@bexp& (0+255),f,b
  5139  0101D4                     l3008:
  5140                           
  5141                           ; BSR set to: 0
  5142  0101D4  0100               	movlb	0	; () banked
  5143  0101D6  51F6               	movf	___fladd@aexp& (0+255),w,b
  5144  0101D8  0100               	movlb	0	; () banked
  5145  0101DA  5DF7               	subwf	___fladd@bexp& (0+255),w,b
  5146  0101DC  A0D8               	btfss	status,0,c
  5147  0101DE  D7E0               	goto	l3009
  5148  0101E0                     u16300:
  5149                           
  5150                           ; BSR set to: 0
  5151                           
  5152                           ; BSR set to: 0
  5153  0101E0  0100               	movlb	0	; () banked
  5154  0101E2  BDF5               	btfsc	___fladd@signs& (0+255),6,b
  5155  0101E4  D03F               	goto	l3014
  5156                           
  5157                           ; BSR set to: 0
  5158  0101E6  0100               	movlb	0	; () banked
  5159  0101E8  51F7               	movf	___fladd@bexp& (0+255),w,b
  5160  0101EA  0100               	movlb	0	; () banked
  5161  0101EC  A4D8               	btfss	status,2,c
  5162  0101EE  D00A               	goto	l3015
  5163                           
  5164                           ; BSR set to: 0
  5165  0101F0  0E00               	movlw	0
  5166  0101F2  0100               	movlb	0	; () banked
  5167  0101F4  6FE5               	movwf	?___fladd& (0+255),b
  5168  0101F6  0E00               	movlw	0
  5169  0101F8  6FE6               	movwf	(?___fladd+1)& (0+255),b
  5170  0101FA  0E00               	movlw	0
  5171  0101FC  6FE7               	movwf	(?___fladd+2)& (0+255),b
  5172  0101FE  0E00               	movlw	0
  5173  010200  6FE8               	movwf	(?___fladd+3)& (0+255),b
  5174                           
  5175                           ; BSR set to: 0
  5176  010202  0012               	return	
  5177  010204                     l3015:
  5178                           
  5179                           ; BSR set to: 0
  5180                           
  5181                           ; BSR set to: 0
  5182  010204  0100               	movlb	0	; () banked
  5183  010206  51E9               	movf	___fladd@a& (0+255),w,b
  5184  010208  0100               	movlb	0	; () banked
  5185  01020A  27E5               	addwf	___fladd@b& (0+255),f,b
  5186  01020C  0100               	movlb	0	; () banked
  5187  01020E  51EA               	movf	(___fladd@a+1)& (0+255),w,b
  5188  010210  0100               	movlb	0	; () banked
  5189  010212  23E6               	addwfc	(___fladd@b+1)& (0+255),f,b
  5190  010214  0100               	movlb	0	; () banked
  5191  010216  51EB               	movf	(___fladd@a+2)& (0+255),w,b
  5192  010218  0100               	movlb	0	; () banked
  5193  01021A  23E7               	addwfc	(___fladd@b+2)& (0+255),f,b
  5194  01021C  0100               	movlb	0	; () banked
  5195  01021E  51EC               	movf	(___fladd@a+3)& (0+255),w,b
  5196  010220  0100               	movlb	0	; () banked
  5197  010222  23E8               	addwfc	(___fladd@b+3)& (0+255),f,b
  5198                           
  5199                           ; BSR set to: 0
  5200  010224  0100               	movlb	0	; () banked
  5201  010226  A1E8               	btfss	(___fladd@b+3)& (0+255),0,b
  5202  010228  D0CC               	goto	u16430
  5203                           
  5204                           ; BSR set to: 0
  5205  01022A  0100               	movlb	0	; () banked
  5206  01022C  A1F8               	btfss	___fladd@grs& (0+255),0,b
  5207  01022E  D009               	goto	l3018
  5208                           
  5209                           ; BSR set to: 0
  5210  010230  0100               	movlb	0	; () banked
  5211  010232  90D8               	bcf	status,0,c
  5212  010234  33F8               	rrcf	___fladd@grs& (0+255),f,b
  5213  010236  0100               	movlb	0	; () banked
  5214  010238  51F8               	movf	___fladd@grs& (0+255),w,b
  5215  01023A  0901               	iorlw	1
  5216  01023C  0100               	movlb	0	; () banked
  5217  01023E  6FF8               	movwf	___fladd@grs& (0+255),b
  5218  010240  D003               	goto	l3019
  5219  010242                     l3018:
  5220                           
  5221                           ; BSR set to: 0
  5222                           
  5223                           ; BSR set to: 0
  5224  010242  0100               	movlb	0	; () banked
  5225  010244  90D8               	bcf	status,0,c
  5226  010246  33F8               	rrcf	___fladd@grs& (0+255),f,b
  5227  010248                     l3019:
  5228                           
  5229                           ; BSR set to: 0
  5230                           
  5231                           ; BSR set to: 0
  5232  010248  0100               	movlb	0	; () banked
  5233  01024A  A1E5               	btfss	___fladd@b& (0+255),0,b
  5234  01024C  D002               	goto	l3020
  5235                           
  5236                           ; BSR set to: 0
  5237  01024E  0100               	movlb	0	; () banked
  5238  010250  8FF8               	bsf	___fladd@grs& (0+255),7,b
  5239  010252                     l3020:
  5240                           
  5241                           ; BSR set to: 0
  5242                           
  5243                           ; BSR set to: 0
  5244  010252  0100               	movlb	0	; () banked
  5245  010254  35E8               	rlcf	(___fladd@b+3)& (0+255),w,b
  5246  010256  33E8               	rrcf	(___fladd@b+3)& (0+255),f,b
  5247  010258  33E7               	rrcf	(___fladd@b+2)& (0+255),f,b
  5248  01025A  33E6               	rrcf	(___fladd@b+1)& (0+255),f,b
  5249  01025C  33E5               	rrcf	___fladd@b& (0+255),f,b
  5250                           
  5251                           ; BSR set to: 0
  5252  01025E  0100               	movlb	0	; () banked
  5253  010260  2BF7               	incf	___fladd@bexp& (0+255),f,b
  5254                           
  5255                           ; BSR set to: 0
  5256  010262  D0AF               	goto	u16430
  5257  010264                     l3014:
  5258                           
  5259                           ; BSR set to: 0
  5260                           
  5261                           ; BSR set to: 0
  5262  010264  0100               	movlb	0	; () banked
  5263  010266  51E9               	movf	___fladd@a& (0+255),w,b
  5264  010268  0100               	movlb	0	; () banked
  5265  01026A  5DE5               	subwf	___fladd@b& (0+255),w,b
  5266  01026C  0100               	movlb	0	; () banked
  5267  01026E  51EA               	movf	(___fladd@a+1)& (0+255),w,b
  5268  010270  0100               	movlb	0	; () banked
  5269  010272  59E6               	subwfb	(___fladd@b+1)& (0+255),w,b
  5270  010274  0100               	movlb	0	; () banked
  5271  010276  51EB               	movf	(___fladd@a+2)& (0+255),w,b
  5272  010278  0100               	movlb	0	; () banked
  5273  01027A  59E7               	subwfb	(___fladd@b+2)& (0+255),w,b
  5274  01027C  0100               	movlb	0	; () banked
  5275  01027E  51E8               	movf	(___fladd@b+3)& (0+255),w,b
  5276  010280  0A80               	xorlw	128
  5277  010282  0100               	movlb	0	; () banked
  5278  010284  6FED               	movwf	??___fladd& (0+255),b
  5279  010286  0100               	movlb	0	; () banked
  5280  010288  51EC               	movf	(___fladd@a+3)& (0+255),w,b
  5281  01028A  0A80               	xorlw	128
  5282  01028C  0100               	movlb	0	; () banked
  5283  01028E  59ED               	subwfb	??___fladd& (0+255),w,b
  5284  010290  B0D8               	btfsc	status,0,c
  5285  010292  D050               	goto	l3022
  5286                           
  5287                           ; BSR set to: 0
  5288  010294  C0E5  F0ED         	movff	___fladd@b,??___fladd
  5289  010298  C0E6  F0EE         	movff	___fladd@b+1,??___fladd+1
  5290  01029C  C0E7  F0EF         	movff	___fladd@b+2,??___fladd+2
  5291  0102A0  C0E8  F0F0         	movff	___fladd@b+3,??___fladd+3
  5292  0102A4  0100               	movlb	0	; () banked
  5293  0102A6  1FED               	comf	??___fladd& (0+255),f,b
  5294  0102A8  1FEE               	comf	(??___fladd+1)& (0+255),f,b
  5295  0102AA  1FEF               	comf	(??___fladd+2)& (0+255),f,b
  5296  0102AC  1FF0               	comf	(??___fladd+3)& (0+255),f,b
  5297  0102AE  2BED               	incf	??___fladd& (0+255),f,b
  5298  0102B0  0E00               	movlw	0
  5299  0102B2  23EE               	addwfc	(??___fladd+1)& (0+255),f,b
  5300  0102B4  23EF               	addwfc	(??___fladd+2)& (0+255),f,b
  5301  0102B6  23F0               	addwfc	(??___fladd+3)& (0+255),f,b
  5302  0102B8  0100               	movlb	0	; () banked
  5303  0102BA  51E9               	movf	___fladd@a& (0+255),w,b
  5304  0102BC  0100               	movlb	0	; () banked
  5305  0102BE  25ED               	addwf	??___fladd& (0+255),w,b
  5306  0102C0  0100               	movlb	0	; () banked
  5307  0102C2  6FF1               	movwf	(??___fladd+4)& (0+255),b
  5308  0102C4  0100               	movlb	0	; () banked
  5309  0102C6  51EA               	movf	(___fladd@a+1)& (0+255),w,b
  5310  0102C8  0100               	movlb	0	; () banked
  5311  0102CA  21EE               	addwfc	(??___fladd+1)& (0+255),w,b
  5312  0102CC  0100               	movlb	0	; () banked
  5313  0102CE  6FF2               	movwf	(??___fladd+5)& (0+255),b
  5314  0102D0  0100               	movlb	0	; () banked
  5315  0102D2  51EB               	movf	(___fladd@a+2)& (0+255),w,b
  5316  0102D4  0100               	movlb	0	; () banked
  5317  0102D6  21EF               	addwfc	(??___fladd+2)& (0+255),w,b
  5318  0102D8  0100               	movlb	0	; () banked
  5319  0102DA  6FF3               	movwf	(??___fladd+6)& (0+255),b
  5320  0102DC  0100               	movlb	0	; () banked
  5321  0102DE  51EC               	movf	(___fladd@a+3)& (0+255),w,b
  5322  0102E0  0100               	movlb	0	; () banked
  5323  0102E2  21F0               	addwfc	(??___fladd+3)& (0+255),w,b
  5324  0102E4  0100               	movlb	0	; () banked
  5325  0102E6  6FF4               	movwf	(??___fladd+7)& (0+255),b
  5326  0102E8  0EFF               	movlw	255
  5327  0102EA  0100               	movlb	0	; () banked
  5328  0102EC  25F1               	addwf	(??___fladd+4)& (0+255),w,b
  5329  0102EE  0100               	movlb	0	; () banked
  5330  0102F0  6FE5               	movwf	___fladd@b& (0+255),b
  5331  0102F2  0EFF               	movlw	255
  5332  0102F4  0100               	movlb	0	; () banked
  5333  0102F6  21F2               	addwfc	(??___fladd+5)& (0+255),w,b
  5334  0102F8  0100               	movlb	0	; () banked
  5335  0102FA  6FE6               	movwf	(___fladd@b+1)& (0+255),b
  5336  0102FC  0EFF               	movlw	255
  5337  0102FE  0100               	movlb	0	; () banked
  5338  010300  21F3               	addwfc	(??___fladd+6)& (0+255),w,b
  5339  010302  0100               	movlb	0	; () banked
  5340  010304  6FE7               	movwf	(___fladd@b+2)& (0+255),b
  5341  010306  0EFF               	movlw	255
  5342  010308  0100               	movlb	0	; () banked
  5343  01030A  21F4               	addwfc	(??___fladd+7)& (0+255),w,b
  5344  01030C  0100               	movlb	0	; () banked
  5345  01030E  6FE8               	movwf	(___fladd@b+3)& (0+255),b
  5346  010310  0E80               	movlw	128
  5347  010312  0100               	movlb	0	; () banked
  5348  010314  1BF5               	xorwf	___fladd@signs& (0+255),f,b
  5349                           
  5350                           ; BSR set to: 0
  5351  010316  0100               	movlb	0	; () banked
  5352  010318  6DF8               	negf	___fladd@grs& (0+255),b
  5353                           
  5354                           ; BSR set to: 0
  5355  01031A  0100               	movlb	0	; () banked
  5356  01031C  51F8               	movf	___fladd@grs& (0+255),w,b
  5357  01031E  0100               	movlb	0	; () banked
  5358  010320  A4D8               	btfss	status,2,c
  5359  010322  D018               	goto	l3024
  5360                           
  5361                           ; BSR set to: 0
  5362  010324  0E01               	movlw	1
  5363  010326  0100               	movlb	0	; () banked
  5364  010328  27E5               	addwf	___fladd@b& (0+255),f,b
  5365  01032A  0E00               	movlw	0
  5366  01032C  23E6               	addwfc	(___fladd@b+1)& (0+255),f,b
  5367  01032E  23E7               	addwfc	(___fladd@b+2)& (0+255),f,b
  5368  010330  23E8               	addwfc	(___fladd@b+3)& (0+255),f,b
  5369                           
  5370                           ; BSR set to: 0
  5371  010332  D010               	goto	l3024
  5372  010334                     l3022:
  5373                           
  5374                           ; BSR set to: 0
  5375                           
  5376                           ; BSR set to: 0
  5377  010334  0100               	movlb	0	; () banked
  5378  010336  51E9               	movf	___fladd@a& (0+255),w,b
  5379  010338  0100               	movlb	0	; () banked
  5380  01033A  5FE5               	subwf	___fladd@b& (0+255),f,b
  5381  01033C  0100               	movlb	0	; () banked
  5382  01033E  51EA               	movf	(___fladd@a+1)& (0+255),w,b
  5383  010340  0100               	movlb	0	; () banked
  5384  010342  5BE6               	subwfb	(___fladd@b+1)& (0+255),f,b
  5385  010344  0100               	movlb	0	; () banked
  5386  010346  51EB               	movf	(___fladd@a+2)& (0+255),w,b
  5387  010348  0100               	movlb	0	; () banked
  5388  01034A  5BE7               	subwfb	(___fladd@b+2)& (0+255),f,b
  5389  01034C  0100               	movlb	0	; () banked
  5390  01034E  51EC               	movf	(___fladd@a+3)& (0+255),w,b
  5391  010350  0100               	movlb	0	; () banked
  5392  010352  5BE8               	subwfb	(___fladd@b+3)& (0+255),f,b
  5393  010354                     l3024:
  5394                           
  5395                           ; BSR set to: 0
  5396  010354  0100               	movlb	0	; () banked
  5397  010356  51E5               	movf	___fladd@b& (0+255),w,b
  5398  010358  0100               	movlb	0	; () banked
  5399  01035A  11E6               	iorwf	(___fladd@b+1)& (0+255),w,b
  5400  01035C  0100               	movlb	0	; () banked
  5401  01035E  11E7               	iorwf	(___fladd@b+2)& (0+255),w,b
  5402  010360  0100               	movlb	0	; () banked
  5403  010362  11E8               	iorwf	(___fladd@b+3)& (0+255),w,b
  5404  010364  A4D8               	btfss	status,2,c
  5405  010366  D02A               	goto	l3031
  5406                           
  5407                           ; BSR set to: 0
  5408  010368  0100               	movlb	0	; () banked
  5409  01036A  51F8               	movf	___fladd@grs& (0+255),w,b
  5410  01036C  0100               	movlb	0	; () banked
  5411  01036E  A4D8               	btfss	status,2,c
  5412  010370  D025               	goto	l3031
  5413                           
  5414                           ; BSR set to: 0
  5415  010372  0E00               	movlw	0
  5416  010374  0100               	movlb	0	; () banked
  5417  010376  6FE5               	movwf	?___fladd& (0+255),b
  5418  010378  0E00               	movlw	0
  5419  01037A  6FE6               	movwf	(?___fladd+1)& (0+255),b
  5420  01037C  0E00               	movlw	0
  5421  01037E  6FE7               	movwf	(?___fladd+2)& (0+255),b
  5422  010380  0E00               	movlw	0
  5423  010382  6FE8               	movwf	(?___fladd+3)& (0+255),b
  5424                           
  5425                           ; BSR set to: 0
  5426  010384  0012               	return	
  5427  010386                     
  5428                           ; BSR set to: 0
  5429                           
  5430                           ; BSR set to: 0
  5431  010386  0100               	movlb	0	; () banked
  5432  010388  90D8               	bcf	status,0,c
  5433  01038A  37E5               	rlcf	___fladd@b& (0+255),f,b
  5434  01038C  37E6               	rlcf	(___fladd@b+1)& (0+255),f,b
  5435  01038E  37E7               	rlcf	(___fladd@b+2)& (0+255),f,b
  5436  010390  37E8               	rlcf	(___fladd@b+3)& (0+255),f,b
  5437                           
  5438                           ; BSR set to: 0
  5439  010392  0100               	movlb	0	; () banked
  5440  010394  AFF8               	btfss	___fladd@grs& (0+255),7,b
  5441  010396  D002               	goto	l3028
  5442                           
  5443                           ; BSR set to: 0
  5444  010398  0100               	movlb	0	; () banked
  5445  01039A  81E5               	bsf	___fladd@b& (0+255),0,b
  5446  01039C                     l3028:
  5447                           
  5448                           ; BSR set to: 0
  5449                           
  5450                           ; BSR set to: 0
  5451  01039C  0100               	movlb	0	; () banked
  5452  01039E  A1F8               	btfss	___fladd@grs& (0+255),0,b
  5453  0103A0  D003               	goto	l3029
  5454                           
  5455                           ; BSR set to: 0
  5456  0103A2  80D8               	bsf	status,0,c
  5457  0103A4  0100               	movlb	0	; () banked
  5458  0103A6  D002               	goto	L3
  5459  0103A8                     l3029:
  5460                           
  5461                           ; BSR set to: 0
  5462                           
  5463                           ; BSR set to: 0
  5464  0103A8  0100               	movlb	0	; () banked
  5465  0103AA  90D8               	bcf	status,0,c
  5466  0103AC                     L3:
  5467  0103AC  37F8               	rlcf	___fladd@grs& (0+255),f,b
  5468                           
  5469                           ; BSR set to: 0
  5470                           
  5471                           ; BSR set to: 0
  5472  0103AE  0100               	movlb	0	; () banked
  5473  0103B0  51F7               	movf	___fladd@bexp& (0+255),w,b
  5474  0103B2  0100               	movlb	0	; () banked
  5475  0103B4  B4D8               	btfsc	status,2,c
  5476  0103B6  D002               	goto	l3031
  5477                           
  5478                           ; BSR set to: 0
  5479  0103B8  0100               	movlb	0	; () banked
  5480  0103BA  07F7               	decf	___fladd@bexp& (0+255),f,b
  5481  0103BC                     l3031:
  5482                           
  5483                           ; BSR set to: 0
  5484                           
  5485                           ; BSR set to: 0
  5486                           
  5487                           ; BSR set to: 0
  5488  0103BC  0100               	movlb	0	; () banked
  5489  0103BE  AFE7               	btfss	(___fladd@b+2)& (0+255),7,b
  5490  0103C0  D7E2               	goto	l3027
  5491  0103C2                     u16430:
  5492                           
  5493                           ; BSR set to: 0
  5494                           
  5495                           ; BSR set to: 0
  5496                           
  5497                           ; BSR set to: 0
  5498  0103C2  0E00               	movlw	0
  5499  0103C4  0100               	movlb	0	; () banked
  5500  0103C6  6FF6               	movwf	___fladd@aexp& (0+255),b
  5501                           
  5502                           ; BSR set to: 0
  5503  0103C8  0100               	movlb	0	; () banked
  5504  0103CA  AFF8               	btfss	___fladd@grs& (0+255),7,b
  5505  0103CC  D00D               	goto	l3036
  5506                           
  5507                           ; BSR set to: 0
  5508  0103CE  C0F8  F0ED         	movff	___fladd@grs,??___fladd
  5509  0103D2  0E7F               	movlw	127
  5510  0103D4  0100               	movlb	0	; () banked
  5511  0103D6  17ED               	andwf	??___fladd& (0+255),f,b
  5512  0103D8  A4D8               	btfss	status,2,c
  5513  0103DA  D003               	goto	u16460
  5514                           
  5515                           ; BSR set to: 0
  5516                           
  5517                           ; BSR set to: 0
  5518  0103DC  0100               	movlb	0	; () banked
  5519  0103DE  A1E5               	btfss	___fladd@b& (0+255),0,b
  5520  0103E0  D003               	goto	l3036
  5521  0103E2                     u16460:
  5522                           
  5523                           ; BSR set to: 0
  5524  0103E2  0E01               	movlw	1
  5525  0103E4  0100               	movlb	0	; () banked
  5526  0103E6  6FF6               	movwf	___fladd@aexp& (0+255),b
  5527  0103E8                     l3036:
  5528                           
  5529                           ; BSR set to: 0
  5530                           
  5531                           ; BSR set to: 0
  5532                           
  5533                           ; BSR set to: 0
  5534  0103E8  0100               	movlb	0	; () banked
  5535  0103EA  51F6               	movf	___fladd@aexp& (0+255),w,b
  5536  0103EC  0100               	movlb	0	; () banked
  5537  0103EE  B4D8               	btfsc	status,2,c
  5538  0103F0  D026               	goto	l3039
  5539                           
  5540                           ; BSR set to: 0
  5541  0103F2  0E01               	movlw	1
  5542  0103F4  0100               	movlb	0	; () banked
  5543  0103F6  27E5               	addwf	___fladd@b& (0+255),f,b
  5544  0103F8  0E00               	movlw	0
  5545  0103FA  23E6               	addwfc	(___fladd@b+1)& (0+255),f,b
  5546  0103FC  23E7               	addwfc	(___fladd@b+2)& (0+255),f,b
  5547  0103FE  23E8               	addwfc	(___fladd@b+3)& (0+255),f,b
  5548                           
  5549                           ; BSR set to: 0
  5550  010400  0100               	movlb	0	; () banked
  5551  010402  A1E8               	btfss	(___fladd@b+3)& (0+255),0,b
  5552  010404  D01C               	goto	l3039
  5553                           
  5554                           ; BSR set to: 0
  5555  010406  C0E5  F0ED         	movff	___fladd@b,??___fladd
  5556  01040A  C0E6  F0EE         	movff	___fladd@b+1,??___fladd+1
  5557  01040E  C0E7  F0EF         	movff	___fladd@b+2,??___fladd+2
  5558  010412  C0E8  F0F0         	movff	___fladd@b+3,??___fladd+3
  5559  010416  0100               	movlb	0	; () banked
  5560  010418  35F0               	rlcf	(??___fladd+3)& (0+255),w,b
  5561  01041A  33F0               	rrcf	(??___fladd+3)& (0+255),f,b
  5562  01041C  33EF               	rrcf	(??___fladd+2)& (0+255),f,b
  5563  01041E  33EE               	rrcf	(??___fladd+1)& (0+255),f,b
  5564  010420  33ED               	rrcf	??___fladd& (0+255),f,b
  5565  010422  C0ED  F0E5         	movff	??___fladd,___fladd@b
  5566  010426  C0EE  F0E6         	movff	??___fladd+1,___fladd@b+1
  5567  01042A  C0EF  F0E7         	movff	??___fladd+2,___fladd@b+2
  5568  01042E  C0F0  F0E8         	movff	??___fladd+3,___fladd@b+3
  5569  010432  0100               	movlb	0	; () banked
  5570  010434  29F7               	incf	___fladd@bexp& (0+255),w,b
  5571  010436  B4D8               	btfsc	status,2,c
  5572  010438  D002               	goto	l3039
  5573                           
  5574                           ; BSR set to: 0
  5575  01043A  0100               	movlb	0	; () banked
  5576  01043C  2BF7               	incf	___fladd@bexp& (0+255),f,b
  5577  01043E                     l3039:
  5578                           
  5579                           ; BSR set to: 0
  5580                           
  5581                           ; BSR set to: 0
  5582                           
  5583                           ; BSR set to: 0
  5584                           
  5585                           ; BSR set to: 0
  5586  01043E  0100               	movlb	0	; () banked
  5587  010440  29F7               	incf	___fladd@bexp& (0+255),w,b
  5588  010442  B4D8               	btfsc	status,2,c
  5589  010444  D005               	goto	u16510
  5590                           
  5591                           ; BSR set to: 0
  5592  010446  0100               	movlb	0	; () banked
  5593  010448  51F7               	movf	___fladd@bexp& (0+255),w,b
  5594  01044A  0100               	movlb	0	; () banked
  5595  01044C  A4D8               	btfss	status,2,c
  5596  01044E  D011               	goto	l3043
  5597  010450                     u16510:
  5598                           
  5599                           ; BSR set to: 0
  5600                           
  5601                           ; BSR set to: 0
  5602  010450  0E00               	movlw	0
  5603  010452  0100               	movlb	0	; () banked
  5604  010454  6FE5               	movwf	___fladd@b& (0+255),b
  5605  010456  0E00               	movlw	0
  5606  010458  6FE6               	movwf	(___fladd@b+1)& (0+255),b
  5607  01045A  0E00               	movlw	0
  5608  01045C  6FE7               	movwf	(___fladd@b+2)& (0+255),b
  5609  01045E  0E00               	movlw	0
  5610  010460  6FE8               	movwf	(___fladd@b+3)& (0+255),b
  5611  010462  0100               	movlb	0	; () banked
  5612  010464  51F7               	movf	___fladd@bexp& (0+255),w,b
  5613  010466  0100               	movlb	0	; () banked
  5614  010468  A4D8               	btfss	status,2,c
  5615  01046A  D003               	goto	l3043
  5616                           
  5617                           ; BSR set to: 0
  5618  01046C  0E00               	movlw	0
  5619  01046E  0100               	movlb	0	; () banked
  5620  010470  6FF5               	movwf	___fladd@signs& (0+255),b
  5621  010472                     l3043:
  5622                           
  5623                           ; BSR set to: 0
  5624                           
  5625                           ; BSR set to: 0
  5626                           
  5627                           ; BSR set to: 0
  5628  010472  0100               	movlb	0	; () banked
  5629  010474  A1F7               	btfss	___fladd@bexp& (0+255),0,b
  5630  010476  D003               	goto	l3044
  5631                           
  5632                           ; BSR set to: 0
  5633  010478  0100               	movlb	0	; () banked
  5634  01047A  8FE7               	bsf	(___fladd@b+2)& (0+255),7,b
  5635  01047C  D002               	goto	l3045
  5636  01047E                     l3044:
  5637                           
  5638                           ; BSR set to: 0
  5639                           
  5640                           ; BSR set to: 0
  5641  01047E  0100               	movlb	0	; () banked
  5642  010480  9FE7               	bcf	(___fladd@b+2)& (0+255),7,b
  5643  010482                     l3045:
  5644                           
  5645                           ; BSR set to: 0
  5646                           
  5647                           ; BSR set to: 0
  5648  010482  0100               	movlb	0	; () banked
  5649  010484  90D8               	bcf	status,0,c
  5650  010486  31F7               	rrcf	___fladd@bexp& (0+255),w,b
  5651  010488  0100               	movlb	0	; () banked
  5652  01048A  6FE8               	movwf	(___fladd@b+3)& (0+255),b
  5653                           
  5654                           ; BSR set to: 0
  5655  01048C  0100               	movlb	0	; () banked
  5656  01048E  AFF5               	btfss	___fladd@signs& (0+255),7,b
  5657  010490  D002               	goto	l3046
  5658                           
  5659                           ; BSR set to: 0
  5660  010492  0100               	movlb	0	; () banked
  5661  010494  8FE8               	bsf	(___fladd@b+3)& (0+255),7,b
  5662  010496                     l3046:
  5663                           
  5664                           ; BSR set to: 0
  5665                           
  5666                           ; BSR set to: 0
  5667  010496  C0E5  F0E5         	movff	___fladd@b,?___fladd
  5668  01049A  C0E6  F0E6         	movff	___fladd@b+1,?___fladd+1
  5669  01049E  C0E7  F0E7         	movff	___fladd@b+2,?___fladd+2
  5670  0104A2  C0E8  F0E8         	movff	___fladd@b+3,?___fladd+3
  5671  0104A6  0012               	return	
  5672  0104A8                     __end_of___fladd:
  5673                           	opt stack 0
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           postinc0	equ	0xFEE
  5679                           wreg	equ	0xFE8
  5680                           indf1	equ	0xFE7
  5681                           postdec1	equ	0xFE5
  5682                           fsr1h	equ	0xFE2
  5683                           fsr1l	equ	0xFE1
  5684                           indf2	equ	0xFDF
  5685                           postinc2	equ	0xFDE
  5686                           plusw2	equ	0xFDB
  5687                           fsr2h	equ	0xFDA
  5688                           fsr2l	equ	0xFD9
  5689                           status	equ	0xFD8
  5690                           
  5691 ;; *************** function ___awdiv *****************
  5692 ;; Defined at:
  5693 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\awdiv.c"
  5694 ;; Parameters:    Size  Location     Type
  5695 ;;  dividend        2   10[BANK0 ] int 
  5696 ;;  divisor         2   12[BANK0 ] int 
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;  quotient        2   16[BANK0 ] int 
  5699 ;;  sign            1   15[BANK0 ] unsigned char 
  5700 ;;  counter         1   14[BANK0 ] unsigned char 
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  2   10[BANK0 ] int 
  5703 ;; Registers used:
  5704 ;;		wreg, status,2, status,0
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;Total ram usage:        8 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:    7
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_update_IR_distance
  5721 ;;		_Console_Tab
  5722 ;; This function uses a non-reentrant model
  5723 ;;
  5724                           
  5725                           	psect	text14
  5726  0132AE                     __ptext14:
  5727                           	opt stack 0
  5728  0132AE                     ___awdiv:
  5729                           	opt stack 22
  5730                           
  5731                           ; BSR set to: 0
  5732                           ;incstack = 0
  5733  0132AE  0E00               	movlw	0
  5734  0132B0  0100               	movlb	0	; () banked
  5735  0132B2  6FC9               	movwf	___awdiv@sign& (0+255),b
  5736                           
  5737                           ; BSR set to: 0
  5738  0132B4  0100               	movlb	0	; () banked
  5739  0132B6  AFC7               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5740  0132B8  D008               	goto	l2708
  5741                           
  5742                           ; BSR set to: 0
  5743  0132BA  0100               	movlb	0	; () banked
  5744  0132BC  6DC6               	negf	___awdiv@divisor& (0+255),b
  5745  0132BE  1FC7               	comf	(___awdiv@divisor+1)& (0+255),f,b
  5746  0132C0  B0D8               	btfsc	status,0,c
  5747  0132C2  2BC7               	incf	(___awdiv@divisor+1)& (0+255),f,b
  5748                           
  5749                           ; BSR set to: 0
  5750  0132C4  0E01               	movlw	1
  5751  0132C6  0100               	movlb	0	; () banked
  5752  0132C8  6FC9               	movwf	___awdiv@sign& (0+255),b
  5753  0132CA                     l2708:
  5754                           
  5755                           ; BSR set to: 0
  5756                           
  5757                           ; BSR set to: 0
  5758  0132CA  0100               	movlb	0	; () banked
  5759  0132CC  AFC5               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  5760  0132CE  D008               	goto	l2709
  5761                           
  5762                           ; BSR set to: 0
  5763  0132D0  0100               	movlb	0	; () banked
  5764  0132D2  6DC4               	negf	___awdiv@dividend& (0+255),b
  5765  0132D4  1FC5               	comf	(___awdiv@dividend+1)& (0+255),f,b
  5766  0132D6  B0D8               	btfsc	status,0,c
  5767  0132D8  2BC5               	incf	(___awdiv@dividend+1)& (0+255),f,b
  5768                           
  5769                           ; BSR set to: 0
  5770  0132DA  0E01               	movlw	1
  5771  0132DC  0100               	movlb	0	; () banked
  5772  0132DE  1BC9               	xorwf	___awdiv@sign& (0+255),f,b
  5773  0132E0                     l2709:
  5774                           
  5775                           ; BSR set to: 0
  5776                           
  5777                           ; BSR set to: 0
  5778  0132E0  0E00               	movlw	0
  5779  0132E2  0100               	movlb	0	; () banked
  5780  0132E4  6FCB               	movwf	(___awdiv@quotient+1)& (0+255),b
  5781  0132E6  0E00               	movlw	0
  5782  0132E8  6FCA               	movwf	___awdiv@quotient& (0+255),b
  5783                           
  5784                           ; BSR set to: 0
  5785  0132EA  0100               	movlb	0	; () banked
  5786  0132EC  51C6               	movf	___awdiv@divisor& (0+255),w,b
  5787  0132EE  0100               	movlb	0	; () banked
  5788  0132F0  11C7               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  5789  0132F2  B4D8               	btfsc	status,2,c
  5790  0132F4  D02C               	goto	l2716
  5791                           
  5792                           ; BSR set to: 0
  5793  0132F6  0E01               	movlw	1
  5794  0132F8  0100               	movlb	0	; () banked
  5795  0132FA  6FC8               	movwf	___awdiv@counter& (0+255),b
  5796  0132FC  D006               	goto	l2711
  5797  0132FE                     
  5798                           ; BSR set to: 0
  5799                           
  5800                           ; BSR set to: 0
  5801  0132FE  0100               	movlb	0	; () banked
  5802  013300  90D8               	bcf	status,0,c
  5803  013302  37C6               	rlcf	___awdiv@divisor& (0+255),f,b
  5804  013304  37C7               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  5805  013306  0100               	movlb	0	; () banked
  5806  013308  2BC8               	incf	___awdiv@counter& (0+255),f,b
  5807  01330A                     l2711:
  5808                           
  5809                           ; BSR set to: 0
  5810                           
  5811                           ; BSR set to: 0
  5812  01330A  0100               	movlb	0	; () banked
  5813  01330C  AFC7               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  5814  01330E  D7F7               	goto	l2712
  5815  013310                     u16580:
  5816                           
  5817                           ; BSR set to: 0
  5818                           
  5819                           ; BSR set to: 0
  5820                           
  5821                           ; BSR set to: 0
  5822  013310  0100               	movlb	0	; () banked
  5823  013312  90D8               	bcf	status,0,c
  5824  013314  37CA               	rlcf	___awdiv@quotient& (0+255),f,b
  5825  013316  37CB               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  5826                           
  5827                           ; BSR set to: 0
  5828  013318  0100               	movlb	0	; () banked
  5829  01331A  51C6               	movf	___awdiv@divisor& (0+255),w,b
  5830  01331C  0100               	movlb	0	; () banked
  5831  01331E  5DC4               	subwf	___awdiv@dividend& (0+255),w,b
  5832  013320  0100               	movlb	0	; () banked
  5833  013322  51C7               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5834  013324  0100               	movlb	0	; () banked
  5835  013326  59C5               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  5836  013328  A0D8               	btfss	status,0,c
  5837  01332A  D00A               	goto	l2715
  5838                           
  5839                           ; BSR set to: 0
  5840  01332C  0100               	movlb	0	; () banked
  5841  01332E  51C6               	movf	___awdiv@divisor& (0+255),w,b
  5842  013330  0100               	movlb	0	; () banked
  5843  013332  5FC4               	subwf	___awdiv@dividend& (0+255),f,b
  5844  013334  0100               	movlb	0	; () banked
  5845  013336  51C7               	movf	(___awdiv@divisor+1)& (0+255),w,b
  5846  013338  0100               	movlb	0	; () banked
  5847  01333A  5BC5               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  5848                           
  5849                           ; BSR set to: 0
  5850  01333C  0100               	movlb	0	; () banked
  5851  01333E  81CA               	bsf	___awdiv@quotient& (0+255),0,b
  5852  013340                     l2715:
  5853                           
  5854                           ; BSR set to: 0
  5855                           
  5856                           ; BSR set to: 0
  5857  013340  0100               	movlb	0	; () banked
  5858  013342  90D8               	bcf	status,0,c
  5859  013344  33C7               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  5860  013346  33C6               	rrcf	___awdiv@divisor& (0+255),f,b
  5861                           
  5862                           ; BSR set to: 0
  5863  013348  0100               	movlb	0	; () banked
  5864  01334A  2FC8               	decfsz	___awdiv@counter& (0+255),f,b
  5865  01334C  D7E1               	goto	u16580
  5866  01334E                     l2716:
  5867                           
  5868                           ; BSR set to: 0
  5869                           
  5870                           ; BSR set to: 0
  5871                           
  5872                           ; BSR set to: 0
  5873  01334E  0100               	movlb	0	; () banked
  5874  013350  51C9               	movf	___awdiv@sign& (0+255),w,b
  5875  013352  0100               	movlb	0	; () banked
  5876  013354  B4D8               	btfsc	status,2,c
  5877  013356  D005               	goto	l2717
  5878                           
  5879                           ; BSR set to: 0
  5880  013358  0100               	movlb	0	; () banked
  5881  01335A  6DCA               	negf	___awdiv@quotient& (0+255),b
  5882  01335C  1FCB               	comf	(___awdiv@quotient+1)& (0+255),f,b
  5883  01335E  B0D8               	btfsc	status,0,c
  5884  013360  2BCB               	incf	(___awdiv@quotient+1)& (0+255),f,b
  5885  013362                     l2717:
  5886                           
  5887                           ; BSR set to: 0
  5888                           
  5889                           ; BSR set to: 0
  5890  013362  C0CA  F0C4         	movff	___awdiv@quotient,?___awdiv
  5891  013366  C0CB  F0C5         	movff	___awdiv@quotient+1,?___awdiv+1
  5892  01336A  0012               	return	
  5893  01336C                     __end_of___awdiv:
  5894                           	opt stack 0
  5895                           tblptru	equ	0xFF8
  5896                           tblptrh	equ	0xFF7
  5897                           tblptrl	equ	0xFF6
  5898                           tablat	equ	0xFF5
  5899                           postinc0	equ	0xFEE
  5900                           wreg	equ	0xFE8
  5901                           indf1	equ	0xFE7
  5902                           postdec1	equ	0xFE5
  5903                           fsr1h	equ	0xFE2
  5904                           fsr1l	equ	0xFE1
  5905                           indf2	equ	0xFDF
  5906                           postinc2	equ	0xFDE
  5907                           plusw2	equ	0xFDB
  5908                           fsr2h	equ	0xFDA
  5909                           fsr2l	equ	0xFD9
  5910                           status	equ	0xFD8
  5911                           
  5912 ;; *************** function _ADC_Voltage *****************
  5913 ;; Defined at:
  5914 ;;		line 259 in file "Library/ADC.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  pInput          2   25[BANK0 ] PTR struct ADC
  5917 ;;		 -> ADC_AN0(5), 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  output          4   39[BANK0 ] float 
  5920 ;;  ref             4   35[BANK0 ] const float 
  5921 ;;  max             4   31[BANK0 ] const float 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  4   25[BANK0 ] float 
  5924 ;; Registers used:
  5925 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : 0/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5931 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;Total ram usage:       18 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:    8
  5938 ;; This function calls:
  5939 ;;		___fldiv
  5940 ;;		___flmul
  5941 ;;		___xxtofl
  5942 ;; This function is called by:
  5943 ;;		_update_IR_distance
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text15
  5948  012EA2                     __ptext15:
  5949                           	opt stack 0
  5950  012EA2                     _ADC_Voltage:
  5951                           	opt stack 21
  5952                           
  5953                           ;ADC.c: 261: const float max = 1024;
  5954                           
  5955                           ; BSR set to: 0
  5956                           ;incstack = 0
  5957  012EA2  0E00               	movlw	0
  5958  012EA4  0100               	movlb	0	; () banked
  5959  012EA6  6FD9               	movwf	ADC_Voltage@max& (0+255),b
  5960  012EA8  0E00               	movlw	0
  5961  012EAA  6FDA               	movwf	(ADC_Voltage@max+1)& (0+255),b
  5962  012EAC  0E80               	movlw	128
  5963  012EAE  6FDB               	movwf	(ADC_Voltage@max+2)& (0+255),b
  5964  012EB0  0E44               	movlw	68
  5965  012EB2  6FDC               	movwf	(ADC_Voltage@max+3)& (0+255),b
  5966                           
  5967                           ;ADC.c: 262: const float ref = ((float)3.3-(float)0.000);
  5968  012EB4  0E33               	movlw	51
  5969  012EB6  0100               	movlb	0	; () banked
  5970  012EB8  6FDD               	movwf	ADC_Voltage@ref& (0+255),b
  5971  012EBA  0E33               	movlw	51
  5972  012EBC  6FDE               	movwf	(ADC_Voltage@ref+1)& (0+255),b
  5973  012EBE  0E53               	movlw	83
  5974  012EC0  6FDF               	movwf	(ADC_Voltage@ref+2)& (0+255),b
  5975  012EC2  0E40               	movlw	64
  5976  012EC4  6FE0               	movwf	(ADC_Voltage@ref+3)& (0+255),b
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;ADC.c: 263: float output = pInput->mValue;
  5980  012EC6  0100               	movlb	0	; () banked
  5981  012EC8  EE20 F001          	lfsr	2,1
  5982  012ECC  51D3               	movf	ADC_Voltage@pInput& (0+255),w,b
  5983  012ECE  26D9               	addwf	fsr2l,f,c
  5984  012ED0  51D4               	movf	(ADC_Voltage@pInput+1)& (0+255),w,b
  5985  012ED2  22DA               	addwfc	fsr2h,f,c
  5986  012ED4  CFDE F0D7          	movff	postinc2,??_ADC_Voltage
  5987  012ED8  CFDD F0D8          	movff	postdec2,??_ADC_Voltage+1
  5988  012EDC  C0D7  F0BA         	movff	??_ADC_Voltage,___xxtofl@val
  5989  012EE0  C0D8  F0BB         	movff	??_ADC_Voltage+1,___xxtofl@val+1
  5990  012EE4  0100               	movlb	0	; () banked
  5991  012EE6  6BBC               	clrf	(___xxtofl@val+2)& (0+255),b
  5992  012EE8  6BBD               	clrf	(___xxtofl@val+3)& (0+255),b
  5993  012EEA  0E00               	movlw	0
  5994  012EEC  ECF2  F08E         	call	___xxtofl
  5995  012EF0  C0BA  F0E1         	movff	?___xxtofl,ADC_Voltage@output
  5996  012EF4  C0BB  F0E2         	movff	?___xxtofl+1,ADC_Voltage@output+1
  5997  012EF8  C0BC  F0E3         	movff	?___xxtofl+2,ADC_Voltage@output+2
  5998  012EFC  C0BD  F0E4         	movff	?___xxtofl+3,ADC_Voltage@output+3
  5999                           
  6000                           ;ADC.c: 265: output /= max;
  6001  012F00  C0E1  F0BA         	movff	ADC_Voltage@output,___fldiv@b
  6002  012F04  C0E2  F0BB         	movff	ADC_Voltage@output+1,___fldiv@b+1
  6003  012F08  C0E3  F0BC         	movff	ADC_Voltage@output+2,___fldiv@b+2
  6004  012F0C  C0E4  F0BD         	movff	ADC_Voltage@output+3,___fldiv@b+3
  6005  012F10  C0D9  F0BE         	movff	ADC_Voltage@max,___fldiv@a
  6006  012F14  C0DA  F0BF         	movff	ADC_Voltage@max+1,___fldiv@a+1
  6007  012F18  C0DB  F0C0         	movff	ADC_Voltage@max+2,___fldiv@a+2
  6008  012F1C  C0DC  F0C1         	movff	ADC_Voltage@max+3,___fldiv@a+3
  6009  012F20  ECB6  F086         	call	___fldiv	;wreg free
  6010  012F24  C0BA  F0E1         	movff	?___fldiv,ADC_Voltage@output
  6011  012F28  C0BB  F0E2         	movff	?___fldiv+1,ADC_Voltage@output+1
  6012  012F2C  C0BC  F0E3         	movff	?___fldiv+2,ADC_Voltage@output+2
  6013  012F30  C0BD  F0E4         	movff	?___fldiv+3,ADC_Voltage@output+3
  6014                           
  6015                           ;ADC.c: 266: output *= ref;
  6016  012F34  C0E1  F0BA         	movff	ADC_Voltage@output,___flmul@b
  6017  012F38  C0E2  F0BB         	movff	ADC_Voltage@output+1,___flmul@b+1
  6018  012F3C  C0E3  F0BC         	movff	ADC_Voltage@output+2,___flmul@b+2
  6019  012F40  C0E4  F0BD         	movff	ADC_Voltage@output+3,___flmul@b+3
  6020  012F44  C0DD  F0BE         	movff	ADC_Voltage@ref,___flmul@a
  6021  012F48  C0DE  F0BF         	movff	ADC_Voltage@ref+1,___flmul@a+1
  6022  012F4C  C0DF  F0C0         	movff	ADC_Voltage@ref+2,___flmul@a+2
  6023  012F50  C0E0  F0C1         	movff	ADC_Voltage@ref+3,___flmul@a+3
  6024  012F54  EC54  F082         	call	___flmul	;wreg free
  6025  012F58  C0BA  F0E1         	movff	?___flmul,ADC_Voltage@output
  6026  012F5C  C0BB  F0E2         	movff	?___flmul+1,ADC_Voltage@output+1
  6027  012F60  C0BC  F0E3         	movff	?___flmul+2,ADC_Voltage@output+2
  6028  012F64  C0BD  F0E4         	movff	?___flmul+3,ADC_Voltage@output+3
  6029                           
  6030                           ;ADC.c: 268: return output + (float)0.000;
  6031  012F68  C0E1  F0D3         	movff	ADC_Voltage@output,?_ADC_Voltage
  6032  012F6C  C0E2  F0D4         	movff	ADC_Voltage@output+1,?_ADC_Voltage+1
  6033  012F70  C0E3  F0D5         	movff	ADC_Voltage@output+2,?_ADC_Voltage+2
  6034  012F74  C0E4  F0D6         	movff	ADC_Voltage@output+3,?_ADC_Voltage+3
  6035  012F78  0012               	return	
  6036  012F7A                     __end_of_ADC_Voltage:
  6037                           	opt stack 0
  6038                           tblptru	equ	0xFF8
  6039                           tblptrh	equ	0xFF7
  6040                           tblptrl	equ	0xFF6
  6041                           tablat	equ	0xFF5
  6042                           postinc0	equ	0xFEE
  6043                           wreg	equ	0xFE8
  6044                           indf1	equ	0xFE7
  6045                           postdec1	equ	0xFE5
  6046                           fsr1h	equ	0xFE2
  6047                           fsr1l	equ	0xFE1
  6048                           indf2	equ	0xFDF
  6049                           postinc2	equ	0xFDE
  6050                           postdec2	equ	0xFDD
  6051                           plusw2	equ	0xFDB
  6052                           fsr2h	equ	0xFDA
  6053                           fsr2l	equ	0xFD9
  6054                           status	equ	0xFD8
  6055                           
  6056 ;; *************** function ___xxtofl *****************
  6057 ;; Defined at:
  6058 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\xxtofl.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  sign            1    wreg     unsigned char 
  6061 ;;  val             4    0[BANK0 ] long 
  6062 ;; Auto vars:     Size  Location     Type
  6063 ;;  sign            1    8[BANK0 ] unsigned char 
  6064 ;;  arg             4   10[BANK0 ] unsigned long 
  6065 ;;  exp             1    9[BANK0 ] unsigned char 
  6066 ;; Return value:  Size  Location     Type
  6067 ;;                  4    0[BANK0 ] unsigned char 
  6068 ;; Registers used:
  6069 ;;		wreg, status,2, status,0
  6070 ;; Tracked objects:
  6071 ;;		On entry : 0/0
  6072 ;;		On exit  : 0/0
  6073 ;;		Unchanged: 0/0
  6074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6076 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6079 ;;Total ram usage:       14 bytes
  6080 ;; Hardware stack levels used:    1
  6081 ;; Hardware stack levels required when called:    7
  6082 ;; This function calls:
  6083 ;;		Nothing
  6084 ;; This function is called by:
  6085 ;;		_ADC_Voltage
  6086 ;;		_get_apparentDistance
  6087 ;;		_degrees_to_steps
  6088 ;;		_floor
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text16
  6093  011DE4                     __ptext16:
  6094                           	opt stack 0
  6095  011DE4                     ___xxtofl:
  6096                           	opt stack 21
  6097                           
  6098                           ;incstack = 0
  6099                           ;___xxtofl@sign stored from wreg
  6100  011DE4  0100               	movlb	0	; () banked
  6101  011DE6  6FC2               	movwf	___xxtofl@sign& (0+255),b
  6102  011DE8  0100               	movlb	0	; () banked
  6103  011DEA  51C2               	movf	___xxtofl@sign& (0+255),w,b
  6104  011DEC  0100               	movlb	0	; () banked
  6105  011DEE  B4D8               	btfsc	status,2,c
  6106  011DF0  D01E               	goto	l3115
  6107                           
  6108                           ; BSR set to: 0
  6109  011DF2  0100               	movlb	0	; () banked
  6110  011DF4  AFBD               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6111  011DF6  D01B               	goto	l3115
  6112                           
  6113                           ; BSR set to: 0
  6114  011DF8  C0BA  F0BE         	movff	___xxtofl@val,??___xxtofl
  6115  011DFC  C0BB  F0BF         	movff	___xxtofl@val+1,??___xxtofl+1
  6116  011E00  C0BC  F0C0         	movff	___xxtofl@val+2,??___xxtofl+2
  6117  011E04  C0BD  F0C1         	movff	___xxtofl@val+3,??___xxtofl+3
  6118  011E08  0100               	movlb	0	; () banked
  6119  011E0A  1FBE               	comf	??___xxtofl& (0+255),f,b
  6120  011E0C  1FBF               	comf	(??___xxtofl+1)& (0+255),f,b
  6121  011E0E  1FC0               	comf	(??___xxtofl+2)& (0+255),f,b
  6122  011E10  1FC1               	comf	(??___xxtofl+3)& (0+255),f,b
  6123  011E12  2BBE               	incf	??___xxtofl& (0+255),f,b
  6124  011E14  0E00               	movlw	0
  6125  011E16  23BF               	addwfc	(??___xxtofl+1)& (0+255),f,b
  6126  011E18  23C0               	addwfc	(??___xxtofl+2)& (0+255),f,b
  6127  011E1A  23C1               	addwfc	(??___xxtofl+3)& (0+255),f,b
  6128  011E1C  C0BE  F0C4         	movff	??___xxtofl,___xxtofl@arg
  6129  011E20  C0BF  F0C5         	movff	??___xxtofl+1,___xxtofl@arg+1
  6130  011E24  C0C0  F0C6         	movff	??___xxtofl+2,___xxtofl@arg+2
  6131  011E28  C0C1  F0C7         	movff	??___xxtofl+3,___xxtofl@arg+3
  6132  011E2C  D008               	goto	l3116
  6133  011E2E                     l3115:
  6134                           
  6135                           ; BSR set to: 0
  6136  011E2E  C0BA  F0C4         	movff	___xxtofl@val,___xxtofl@arg
  6137  011E32  C0BB  F0C5         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6138  011E36  C0BC  F0C6         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6139  011E3A  C0BD  F0C7         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6140  011E3E                     l3116:
  6141                           
  6142                           ; BSR set to: 0
  6143                           
  6144                           ; BSR set to: 0
  6145  011E3E  0100               	movlb	0	; () banked
  6146  011E40  51BA               	movf	___xxtofl@val& (0+255),w,b
  6147  011E42  0100               	movlb	0	; () banked
  6148  011E44  11BB               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  6149  011E46  0100               	movlb	0	; () banked
  6150  011E48  11BC               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  6151  011E4A  0100               	movlb	0	; () banked
  6152  011E4C  11BD               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  6153  011E4E  A4D8               	btfss	status,2,c
  6154  011E50  D00A               	goto	l3117
  6155                           
  6156                           ; BSR set to: 0
  6157  011E52  0E00               	movlw	0
  6158  011E54  0100               	movlb	0	; () banked
  6159  011E56  6FBA               	movwf	?___xxtofl& (0+255),b
  6160  011E58  0E00               	movlw	0
  6161  011E5A  6FBB               	movwf	(?___xxtofl+1)& (0+255),b
  6162  011E5C  0E00               	movlw	0
  6163  011E5E  6FBC               	movwf	(?___xxtofl+2)& (0+255),b
  6164  011E60  0E00               	movlw	0
  6165  011E62  6FBD               	movwf	(?___xxtofl+3)& (0+255),b
  6166                           
  6167                           ; BSR set to: 0
  6168  011E64  0012               	return	
  6169  011E66                     l3117:
  6170                           
  6171                           ; BSR set to: 0
  6172                           
  6173                           ; BSR set to: 0
  6174  011E66  0E96               	movlw	150
  6175  011E68  0100               	movlb	0	; () banked
  6176  011E6A  6FC3               	movwf	___xxtofl@exp& (0+255),b
  6177  011E6C  D008               	goto	l3119
  6178  011E6E                     
  6179                           ; BSR set to: 0
  6180                           
  6181                           ; BSR set to: 0
  6182  011E6E  0100               	movlb	0	; () banked
  6183  011E70  2BC3               	incf	___xxtofl@exp& (0+255),f,b
  6184  011E72  0100               	movlb	0	; () banked
  6185  011E74  90D8               	bcf	status,0,c
  6186  011E76  33C7               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6187  011E78  33C6               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6188  011E7A  33C5               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6189  011E7C  33C4               	rrcf	___xxtofl@arg& (0+255),f,b
  6190  011E7E                     l3119:
  6191                           
  6192                           ; BSR set to: 0
  6193                           
  6194                           ; BSR set to: 0
  6195  011E7E  0E00               	movlw	0
  6196  011E80  0100               	movlb	0	; () banked
  6197  011E82  15C4               	andwf	___xxtofl@arg& (0+255),w,b
  6198  011E84  0100               	movlb	0	; () banked
  6199  011E86  6FBE               	movwf	??___xxtofl& (0+255),b
  6200  011E88  0E00               	movlw	0
  6201  011E8A  0100               	movlb	0	; () banked
  6202  011E8C  15C5               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6203  011E8E  0100               	movlb	0	; () banked
  6204  011E90  6FBF               	movwf	(??___xxtofl+1)& (0+255),b
  6205  011E92  0E00               	movlw	0
  6206  011E94  0100               	movlb	0	; () banked
  6207  011E96  15C6               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6208  011E98  0100               	movlb	0	; () banked
  6209  011E9A  6FC0               	movwf	(??___xxtofl+2)& (0+255),b
  6210  011E9C  0EFE               	movlw	254
  6211  011E9E  0100               	movlb	0	; () banked
  6212  011EA0  15C7               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6213  011EA2  0100               	movlb	0	; () banked
  6214  011EA4  6FC1               	movwf	(??___xxtofl+3)& (0+255),b
  6215  011EA6  0100               	movlb	0	; () banked
  6216  011EA8  51BE               	movf	??___xxtofl& (0+255),w,b
  6217  011EAA  0100               	movlb	0	; () banked
  6218  011EAC  11BF               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6219  011EAE  0100               	movlb	0	; () banked
  6220  011EB0  11C0               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6221  011EB2  0100               	movlb	0	; () banked
  6222  011EB4  11C1               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6223  011EB6  B4D8               	btfsc	status,2,c
  6224  011EB8  D010               	goto	l3122
  6225  011EBA  D7D9               	goto	l3120
  6226  011EBC                     
  6227                           ; BSR set to: 0
  6228                           
  6229                           ; BSR set to: 0
  6230  011EBC  0100               	movlb	0	; () banked
  6231  011EBE  2BC3               	incf	___xxtofl@exp& (0+255),f,b
  6232                           
  6233                           ; BSR set to: 0
  6234  011EC0  0E01               	movlw	1
  6235  011EC2  0100               	movlb	0	; () banked
  6236  011EC4  27C4               	addwf	___xxtofl@arg& (0+255),f,b
  6237  011EC6  0E00               	movlw	0
  6238  011EC8  23C5               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  6239  011ECA  23C6               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  6240  011ECC  23C7               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  6241                           
  6242                           ; BSR set to: 0
  6243  011ECE  0100               	movlb	0	; () banked
  6244  011ED0  90D8               	bcf	status,0,c
  6245  011ED2  33C7               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  6246  011ED4  33C6               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  6247  011ED6  33C5               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  6248  011ED8  33C4               	rrcf	___xxtofl@arg& (0+255),f,b
  6249  011EDA                     l3122:
  6250                           
  6251                           ; BSR set to: 0
  6252  011EDA  0E00               	movlw	0
  6253  011EDC  0100               	movlb	0	; () banked
  6254  011EDE  15C4               	andwf	___xxtofl@arg& (0+255),w,b
  6255  011EE0  0100               	movlb	0	; () banked
  6256  011EE2  6FBE               	movwf	??___xxtofl& (0+255),b
  6257  011EE4  0E00               	movlw	0
  6258  011EE6  0100               	movlb	0	; () banked
  6259  011EE8  15C5               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  6260  011EEA  0100               	movlb	0	; () banked
  6261  011EEC  6FBF               	movwf	(??___xxtofl+1)& (0+255),b
  6262  011EEE  0E00               	movlw	0
  6263  011EF0  0100               	movlb	0	; () banked
  6264  011EF2  15C6               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  6265  011EF4  0100               	movlb	0	; () banked
  6266  011EF6  6FC0               	movwf	(??___xxtofl+2)& (0+255),b
  6267  011EF8  0EFF               	movlw	255
  6268  011EFA  0100               	movlb	0	; () banked
  6269  011EFC  15C7               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  6270  011EFE  0100               	movlb	0	; () banked
  6271  011F00  6FC1               	movwf	(??___xxtofl+3)& (0+255),b
  6272  011F02  0100               	movlb	0	; () banked
  6273  011F04  51BE               	movf	??___xxtofl& (0+255),w,b
  6274  011F06  0100               	movlb	0	; () banked
  6275  011F08  11BF               	iorwf	(??___xxtofl+1)& (0+255),w,b
  6276  011F0A  0100               	movlb	0	; () banked
  6277  011F0C  11C0               	iorwf	(??___xxtofl+2)& (0+255),w,b
  6278  011F0E  0100               	movlb	0	; () banked
  6279  011F10  11C1               	iorwf	(??___xxtofl+3)& (0+255),w,b
  6280  011F12  B4D8               	btfsc	status,2,c
  6281  011F14  D009               	goto	l3125
  6282  011F16  D7D2               	goto	l3123
  6283  011F18                     
  6284                           ; BSR set to: 0
  6285                           
  6286                           ; BSR set to: 0
  6287  011F18  0100               	movlb	0	; () banked
  6288  011F1A  07C3               	decf	___xxtofl@exp& (0+255),f,b
  6289  011F1C  0100               	movlb	0	; () banked
  6290  011F1E  90D8               	bcf	status,0,c
  6291  011F20  37C4               	rlcf	___xxtofl@arg& (0+255),f,b
  6292  011F22  37C5               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  6293  011F24  37C6               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  6294  011F26  37C7               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  6295  011F28                     l3125:
  6296                           
  6297                           ; BSR set to: 0
  6298                           
  6299                           ; BSR set to: 0
  6300  011F28  0100               	movlb	0	; () banked
  6301  011F2A  BFC6               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  6302  011F2C  D004               	goto	u15930
  6303                           
  6304                           ; BSR set to: 0
  6305  011F2E  0E02               	movlw	2
  6306  011F30  0100               	movlb	0	; () banked
  6307  011F32  61C3               	cpfslt	___xxtofl@exp& (0+255),b
  6308  011F34  D7F1               	goto	l3126
  6309  011F36                     u15930:
  6310                           
  6311                           ; BSR set to: 0
  6312                           
  6313                           ; BSR set to: 0
  6314  011F36  0100               	movlb	0	; () banked
  6315  011F38  B1C3               	btfsc	___xxtofl@exp& (0+255),0,b
  6316  011F3A  D009               	goto	l3130
  6317                           
  6318                           ; BSR set to: 0
  6319  011F3C  0EFF               	movlw	255
  6320  011F3E  0100               	movlb	0	; () banked
  6321  011F40  17C4               	andwf	___xxtofl@arg& (0+255),f,b
  6322  011F42  0EFF               	movlw	255
  6323  011F44  17C5               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  6324  011F46  0E7F               	movlw	127
  6325  011F48  17C6               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  6326  011F4A  0EFF               	movlw	255
  6327  011F4C  17C7               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  6328  011F4E                     l3130:
  6329                           
  6330                           ; BSR set to: 0
  6331  011F4E  0100               	movlb	0	; () banked
  6332  011F50  90D8               	bcf	status,0,c
  6333  011F52  33C3               	rrcf	___xxtofl@exp& (0+255),f,b
  6334  011F54  C0C3  F0BE         	movff	___xxtofl@exp,??___xxtofl
  6335  011F58  0100               	movlb	0	; () banked
  6336  011F5A  6BBF               	clrf	(??___xxtofl+1)& (0+255),b
  6337  011F5C  6BC0               	clrf	(??___xxtofl+2)& (0+255),b
  6338  011F5E  6BC1               	clrf	(??___xxtofl+3)& (0+255),b
  6339  011F60  C0BE  F0C1         	movff	??___xxtofl,??___xxtofl+3
  6340  011F64  0100               	movlb	0	; () banked
  6341  011F66  6BC0               	clrf	(??___xxtofl+2)& (0+255),b
  6342  011F68  6BBF               	clrf	(??___xxtofl+1)& (0+255),b
  6343  011F6A  6BBE               	clrf	??___xxtofl& (0+255),b
  6344  011F6C  0100               	movlb	0	; () banked
  6345  011F6E  51BE               	movf	??___xxtofl& (0+255),w,b
  6346  011F70  0100               	movlb	0	; () banked
  6347  011F72  13C4               	iorwf	___xxtofl@arg& (0+255),f,b
  6348  011F74  0100               	movlb	0	; () banked
  6349  011F76  51BF               	movf	(??___xxtofl+1)& (0+255),w,b
  6350  011F78  0100               	movlb	0	; () banked
  6351  011F7A  13C5               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  6352  011F7C  0100               	movlb	0	; () banked
  6353  011F7E  51C0               	movf	(??___xxtofl+2)& (0+255),w,b
  6354  011F80  0100               	movlb	0	; () banked
  6355  011F82  13C6               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  6356  011F84  0100               	movlb	0	; () banked
  6357  011F86  51C1               	movf	(??___xxtofl+3)& (0+255),w,b
  6358  011F88  0100               	movlb	0	; () banked
  6359  011F8A  13C7               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  6360                           
  6361                           ; BSR set to: 0
  6362  011F8C  0100               	movlb	0	; () banked
  6363  011F8E  51C2               	movf	___xxtofl@sign& (0+255),w,b
  6364  011F90  0100               	movlb	0	; () banked
  6365  011F92  B4D8               	btfsc	status,2,c
  6366  011F94  D005               	goto	l3131
  6367                           
  6368                           ; BSR set to: 0
  6369  011F96  0100               	movlb	0	; () banked
  6370  011F98  AFBD               	btfss	(___xxtofl@val+3)& (0+255),7,b
  6371  011F9A  D002               	goto	l3131
  6372                           
  6373                           ; BSR set to: 0
  6374  011F9C  0100               	movlb	0	; () banked
  6375  011F9E  8FC7               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  6376  011FA0                     l3131:
  6377                           
  6378                           ; BSR set to: 0
  6379                           
  6380                           ; BSR set to: 0
  6381  011FA0  C0C4  F0BA         	movff	___xxtofl@arg,?___xxtofl
  6382  011FA4  C0C5  F0BB         	movff	___xxtofl@arg+1,?___xxtofl+1
  6383  011FA8  C0C6  F0BC         	movff	___xxtofl@arg+2,?___xxtofl+2
  6384  011FAC  C0C7  F0BD         	movff	___xxtofl@arg+3,?___xxtofl+3
  6385  011FB0  0012               	return	
  6386  011FB2                     __end_of___xxtofl:
  6387                           	opt stack 0
  6388                           tblptru	equ	0xFF8
  6389                           tblptrh	equ	0xFF7
  6390                           tblptrl	equ	0xFF6
  6391                           tablat	equ	0xFF5
  6392                           postinc0	equ	0xFEE
  6393                           wreg	equ	0xFE8
  6394                           indf1	equ	0xFE7
  6395                           postdec1	equ	0xFE5
  6396                           fsr1h	equ	0xFE2
  6397                           fsr1l	equ	0xFE1
  6398                           indf2	equ	0xFDF
  6399                           postinc2	equ	0xFDE
  6400                           postdec2	equ	0xFDD
  6401                           plusw2	equ	0xFDB
  6402                           fsr2h	equ	0xFDA
  6403                           fsr2l	equ	0xFD9
  6404                           status	equ	0xFD8
  6405                           
  6406 ;; *************** function ___flmul *****************
  6407 ;; Defined at:
  6408 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sprcmul.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;  b               4    0[BANK0 ] unsigned char 
  6411 ;;  a               4    4[BANK0 ] unsigned char 
  6412 ;; Auto vars:     Size  Location     Type
  6413 ;;  prod            4   19[BANK0 ] struct .
  6414 ;;  grs             4   15[BANK0 ] unsigned long 
  6415 ;;  temp            2   23[BANK0 ] struct .
  6416 ;;  bexp            1   14[BANK0 ] unsigned char 
  6417 ;;  aexp            1   13[BANK0 ] unsigned char 
  6418 ;;  sign            1   12[BANK0 ] unsigned char 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  4    0[BANK0 ] unsigned char 
  6421 ;; Registers used:
  6422 ;;		wreg, status,2, status,0, prodl, prodh
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6428 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;Total ram usage:       25 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; Hardware stack levels required when called:    7
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		_ADC_Voltage
  6439 ;;		_sin
  6440 ;;		_eval_poly
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text17
  6445  0104A8                     __ptext17:
  6446                           	opt stack 0
  6447  0104A8                     ___flmul:
  6448                           	opt stack 21
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;incstack = 0
  6452  0104A8  0100               	movlb	0	; () banked
  6453  0104AA  51BD               	movf	(___flmul@b+3)& (0+255),w,b
  6454  0104AC  0B80               	andlw	128
  6455  0104AE  0100               	movlb	0	; () banked
  6456  0104B0  6FC6               	movwf	___flmul@sign& (0+255),b
  6457  0104B2  0100               	movlb	0	; () banked
  6458  0104B4  51BD               	movf	(___flmul@b+3)& (0+255),w,b
  6459  0104B6  25BD               	addwf	(___flmul@b+3)& (0+255),w,b
  6460  0104B8  0100               	movlb	0	; () banked
  6461  0104BA  6FC8               	movwf	___flmul@bexp& (0+255),b
  6462                           
  6463                           ; BSR set to: 0
  6464  0104BC  0100               	movlb	0	; () banked
  6465  0104BE  AFBC               	btfss	(___flmul@b+2)& (0+255),7,b
  6466  0104C0  D002               	goto	l3086
  6467                           
  6468                           ; BSR set to: 0
  6469  0104C2  0100               	movlb	0	; () banked
  6470  0104C4  81C8               	bsf	___flmul@bexp& (0+255),0,b
  6471  0104C6                     l3086:
  6472                           
  6473                           ; BSR set to: 0
  6474                           
  6475                           ; BSR set to: 0
  6476  0104C6  0100               	movlb	0	; () banked
  6477  0104C8  51C8               	movf	___flmul@bexp& (0+255),w,b
  6478  0104CA  0100               	movlb	0	; () banked
  6479  0104CC  B4D8               	btfsc	status,2,c
  6480  0104CE  D010               	goto	l3087
  6481                           
  6482                           ; BSR set to: 0
  6483  0104D0  0100               	movlb	0	; () banked
  6484  0104D2  29C8               	incf	___flmul@bexp& (0+255),w,b
  6485  0104D4  A4D8               	btfss	status,2,c
  6486  0104D6  D009               	goto	l3088
  6487                           
  6488                           ; BSR set to: 0
  6489  0104D8  0E00               	movlw	0
  6490  0104DA  0100               	movlb	0	; () banked
  6491  0104DC  6FBA               	movwf	___flmul@b& (0+255),b
  6492  0104DE  0E00               	movlw	0
  6493  0104E0  6FBB               	movwf	(___flmul@b+1)& (0+255),b
  6494  0104E2  0E00               	movlw	0
  6495  0104E4  6FBC               	movwf	(___flmul@b+2)& (0+255),b
  6496  0104E6  0E00               	movlw	0
  6497  0104E8  6FBD               	movwf	(___flmul@b+3)& (0+255),b
  6498  0104EA                     l3088:
  6499                           
  6500                           ; BSR set to: 0
  6501                           
  6502                           ; BSR set to: 0
  6503  0104EA  0100               	movlb	0	; () banked
  6504  0104EC  8FBC               	bsf	(___flmul@b+2)& (0+255),7,b
  6505  0104EE  D009               	goto	l3089
  6506  0104F0                     l3087:
  6507                           
  6508                           ; BSR set to: 0
  6509                           
  6510                           ; BSR set to: 0
  6511  0104F0  0E00               	movlw	0
  6512  0104F2  0100               	movlb	0	; () banked
  6513  0104F4  6FBA               	movwf	___flmul@b& (0+255),b
  6514  0104F6  0E00               	movlw	0
  6515  0104F8  6FBB               	movwf	(___flmul@b+1)& (0+255),b
  6516  0104FA  0E00               	movlw	0
  6517  0104FC  6FBC               	movwf	(___flmul@b+2)& (0+255),b
  6518  0104FE  0E00               	movlw	0
  6519  010500  6FBD               	movwf	(___flmul@b+3)& (0+255),b
  6520  010502                     l3089:
  6521                           
  6522                           ; BSR set to: 0
  6523                           
  6524                           ; BSR set to: 0
  6525  010502  0100               	movlb	0	; () banked
  6526  010504  51C1               	movf	(___flmul@a+3)& (0+255),w,b
  6527  010506  0B80               	andlw	128
  6528  010508  0100               	movlb	0	; () banked
  6529  01050A  1BC6               	xorwf	___flmul@sign& (0+255),f,b
  6530                           
  6531                           ; BSR set to: 0
  6532  01050C  0100               	movlb	0	; () banked
  6533  01050E  51C1               	movf	(___flmul@a+3)& (0+255),w,b
  6534  010510  25C1               	addwf	(___flmul@a+3)& (0+255),w,b
  6535  010512  0100               	movlb	0	; () banked
  6536  010514  6FC7               	movwf	___flmul@aexp& (0+255),b
  6537                           
  6538                           ; BSR set to: 0
  6539  010516  0100               	movlb	0	; () banked
  6540  010518  AFC0               	btfss	(___flmul@a+2)& (0+255),7,b
  6541  01051A  D002               	goto	l3090
  6542                           
  6543                           ; BSR set to: 0
  6544  01051C  0100               	movlb	0	; () banked
  6545  01051E  81C7               	bsf	___flmul@aexp& (0+255),0,b
  6546  010520                     l3090:
  6547                           
  6548                           ; BSR set to: 0
  6549                           
  6550                           ; BSR set to: 0
  6551  010520  0100               	movlb	0	; () banked
  6552  010522  51C7               	movf	___flmul@aexp& (0+255),w,b
  6553  010524  0100               	movlb	0	; () banked
  6554  010526  B4D8               	btfsc	status,2,c
  6555  010528  D010               	goto	l3091
  6556                           
  6557                           ; BSR set to: 0
  6558  01052A  0100               	movlb	0	; () banked
  6559  01052C  29C7               	incf	___flmul@aexp& (0+255),w,b
  6560  01052E  A4D8               	btfss	status,2,c
  6561  010530  D009               	goto	l3092
  6562                           
  6563                           ; BSR set to: 0
  6564  010532  0E00               	movlw	0
  6565  010534  0100               	movlb	0	; () banked
  6566  010536  6FBE               	movwf	___flmul@a& (0+255),b
  6567  010538  0E00               	movlw	0
  6568  01053A  6FBF               	movwf	(___flmul@a+1)& (0+255),b
  6569  01053C  0E00               	movlw	0
  6570  01053E  6FC0               	movwf	(___flmul@a+2)& (0+255),b
  6571  010540  0E00               	movlw	0
  6572  010542  6FC1               	movwf	(___flmul@a+3)& (0+255),b
  6573  010544                     l3092:
  6574                           
  6575                           ; BSR set to: 0
  6576                           
  6577                           ; BSR set to: 0
  6578  010544  0100               	movlb	0	; () banked
  6579  010546  8FC0               	bsf	(___flmul@a+2)& (0+255),7,b
  6580  010548  D009               	goto	l3093
  6581  01054A                     l3091:
  6582                           
  6583                           ; BSR set to: 0
  6584                           
  6585                           ; BSR set to: 0
  6586  01054A  0E00               	movlw	0
  6587  01054C  0100               	movlb	0	; () banked
  6588  01054E  6FBE               	movwf	___flmul@a& (0+255),b
  6589  010550  0E00               	movlw	0
  6590  010552  6FBF               	movwf	(___flmul@a+1)& (0+255),b
  6591  010554  0E00               	movlw	0
  6592  010556  6FC0               	movwf	(___flmul@a+2)& (0+255),b
  6593  010558  0E00               	movlw	0
  6594  01055A  6FC1               	movwf	(___flmul@a+3)& (0+255),b
  6595  01055C                     l3093:
  6596                           
  6597                           ; BSR set to: 0
  6598  01055C  0100               	movlb	0	; () banked
  6599  01055E  51C7               	movf	___flmul@aexp& (0+255),w,b
  6600  010560  0100               	movlb	0	; () banked
  6601  010562  B4D8               	btfsc	status,2,c
  6602  010564  D005               	goto	u15750
  6603                           
  6604                           ; BSR set to: 0
  6605  010566  0100               	movlb	0	; () banked
  6606  010568  51C8               	movf	___flmul@bexp& (0+255),w,b
  6607  01056A  0100               	movlb	0	; () banked
  6608  01056C  A4D8               	btfss	status,2,c
  6609  01056E  D00A               	goto	l3094
  6610  010570                     u15750:
  6611                           
  6612                           ; BSR set to: 0
  6613                           
  6614                           ; BSR set to: 0
  6615  010570  0E00               	movlw	0
  6616  010572  0100               	movlb	0	; () banked
  6617  010574  6FBA               	movwf	?___flmul& (0+255),b
  6618  010576  0E00               	movlw	0
  6619  010578  6FBB               	movwf	(?___flmul+1)& (0+255),b
  6620  01057A  0E00               	movlw	0
  6621  01057C  6FBC               	movwf	(?___flmul+2)& (0+255),b
  6622  01057E  0E00               	movlw	0
  6623  010580  6FBD               	movwf	(?___flmul+3)& (0+255),b
  6624                           
  6625                           ; BSR set to: 0
  6626  010582  0012               	return	
  6627  010584                     l3094:
  6628                           
  6629                           ; BSR set to: 0
  6630                           
  6631                           ; BSR set to: 0
  6632  010584  0100               	movlb	0	; () banked
  6633  010586  51C0               	movf	(___flmul@a+2)& (0+255),w,b
  6634  010588  0100               	movlb	0	; () banked
  6635  01058A  03BA               	mulwf	___flmul@b& (0+255),b
  6636  01058C  CFF3 F0D1          	movff	prodl,___flmul@temp
  6637  010590  CFF4 F0D2          	movff	prodh,___flmul@temp+1
  6638                           
  6639                           ; BSR set to: 0
  6640  010594  0100               	movlb	0	; () banked
  6641  010596  51D1               	movf	___flmul@temp& (0+255),w,b
  6642  010598  0100               	movlb	0	; () banked
  6643  01059A  6FC9               	movwf	___flmul@grs& (0+255),b
  6644  01059C  6BCA               	clrf	(___flmul@grs+1)& (0+255),b
  6645  01059E  6BCB               	clrf	(___flmul@grs+2)& (0+255),b
  6646  0105A0  6BCC               	clrf	(___flmul@grs+3)& (0+255),b
  6647                           
  6648                           ; BSR set to: 0
  6649  0105A2  0100               	movlb	0	; () banked
  6650  0105A4  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  6651  0105A6  0100               	movlb	0	; () banked
  6652  0105A8  6FCD               	movwf	___flmul@prod& (0+255),b
  6653  0105AA  6BCE               	clrf	(___flmul@prod+1)& (0+255),b
  6654  0105AC  6BCF               	clrf	(___flmul@prod+2)& (0+255),b
  6655  0105AE  6BD0               	clrf	(___flmul@prod+3)& (0+255),b
  6656  0105B0  0100               	movlb	0	; () banked
  6657  0105B2  51BF               	movf	(___flmul@a+1)& (0+255),w,b
  6658  0105B4  0100               	movlb	0	; () banked
  6659  0105B6  03BB               	mulwf	(___flmul@b+1)& (0+255),b
  6660  0105B8  CFF3 F0D1          	movff	prodl,___flmul@temp
  6661  0105BC  CFF4 F0D2          	movff	prodh,___flmul@temp+1
  6662                           
  6663                           ; BSR set to: 0
  6664  0105C0  0100               	movlb	0	; () banked
  6665  0105C2  51D1               	movf	___flmul@temp& (0+255),w,b
  6666  0105C4  0100               	movlb	0	; () banked
  6667  0105C6  27C9               	addwf	___flmul@grs& (0+255),f,b
  6668  0105C8  0E00               	movlw	0
  6669  0105CA  23CA               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6670  0105CC  23CB               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6671  0105CE  23CC               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6672                           
  6673                           ; BSR set to: 0
  6674  0105D0  0100               	movlb	0	; () banked
  6675  0105D2  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  6676  0105D4  0100               	movlb	0	; () banked
  6677  0105D6  27CD               	addwf	___flmul@prod& (0+255),f,b
  6678  0105D8  0E00               	movlw	0
  6679  0105DA  23CE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6680  0105DC  23CF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6681  0105DE  23D0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6682  0105E0  0100               	movlb	0	; () banked
  6683  0105E2  51BE               	movf	___flmul@a& (0+255),w,b
  6684  0105E4  0100               	movlb	0	; () banked
  6685  0105E6  03BC               	mulwf	(___flmul@b+2)& (0+255),b
  6686  0105E8  CFF3 F0D1          	movff	prodl,___flmul@temp
  6687  0105EC  CFF4 F0D2          	movff	prodh,___flmul@temp+1
  6688                           
  6689                           ; BSR set to: 0
  6690  0105F0  0100               	movlb	0	; () banked
  6691  0105F2  51D1               	movf	___flmul@temp& (0+255),w,b
  6692  0105F4  0100               	movlb	0	; () banked
  6693  0105F6  27C9               	addwf	___flmul@grs& (0+255),f,b
  6694  0105F8  0E00               	movlw	0
  6695  0105FA  23CA               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6696  0105FC  23CB               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6697  0105FE  23CC               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6698                           
  6699                           ; BSR set to: 0
  6700  010600  0100               	movlb	0	; () banked
  6701  010602  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  6702  010604  0100               	movlb	0	; () banked
  6703  010606  27CD               	addwf	___flmul@prod& (0+255),f,b
  6704  010608  0E00               	movlw	0
  6705  01060A  23CE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6706  01060C  23CF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6707  01060E  23D0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6708                           
  6709                           ; BSR set to: 0
  6710  010610  C0CB  F0CC         	movff	___flmul@grs+2,___flmul@grs+3
  6711  010614  C0CA  F0CB         	movff	___flmul@grs+1,___flmul@grs+2
  6712  010618  C0C9  F0CA         	movff	___flmul@grs,___flmul@grs+1
  6713  01061C  0100               	movlb	0	; () banked
  6714  01061E  6BC9               	clrf	___flmul@grs& (0+255),b
  6715                           
  6716                           ; BSR set to: 0
  6717  010620  0100               	movlb	0	; () banked
  6718  010622  51BE               	movf	___flmul@a& (0+255),w,b
  6719  010624  0100               	movlb	0	; () banked
  6720  010626  03BB               	mulwf	(___flmul@b+1)& (0+255),b
  6721  010628  CFF3 F0D1          	movff	prodl,___flmul@temp
  6722  01062C  CFF4 F0D2          	movff	prodh,___flmul@temp+1
  6723                           
  6724                           ; BSR set to: 0
  6725  010630  0100               	movlb	0	; () banked
  6726  010632  51D1               	movf	___flmul@temp& (0+255),w,b
  6727  010634  0100               	movlb	0	; () banked
  6728  010636  27C9               	addwf	___flmul@grs& (0+255),f,b
  6729  010638  0100               	movlb	0	; () banked
  6730  01063A  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  6731  01063C  0100               	movlb	0	; () banked
  6732  01063E  23CA               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6733  010640  0E00               	movlw	0
  6734  010642  0100               	movlb	0	; () banked
  6735  010644  23CB               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6736  010646  0E00               	movlw	0
  6737  010648  0100               	movlb	0	; () banked
  6738  01064A  23CC               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6739                           
  6740                           ; BSR set to: 0
  6741  01064C  0100               	movlb	0	; () banked
  6742  01064E  51BF               	movf	(___flmul@a+1)& (0+255),w,b
  6743  010650  0100               	movlb	0	; () banked
  6744  010652  03BA               	mulwf	___flmul@b& (0+255),b
  6745  010654  CFF3 F0D1          	movff	prodl,___flmul@temp
  6746  010658  CFF4 F0D2          	movff	prodh,___flmul@temp+1
  6747                           
  6748                           ; BSR set to: 0
  6749  01065C  0100               	movlb	0	; () banked
  6750  01065E  51D1               	movf	___flmul@temp& (0+255),w,b
  6751  010660  0100               	movlb	0	; () banked
  6752  010662  27C9               	addwf	___flmul@grs& (0+255),f,b
  6753  010664  0100               	movlb	0	; () banked
  6754  010666  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  6755  010668  0100               	movlb	0	; () banked
  6756  01066A  23CA               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6757  01066C  0E00               	movlw	0
  6758  01066E  0100               	movlb	0	; () banked
  6759  010670  23CB               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6760  010672  0E00               	movlw	0
  6761  010674  0100               	movlb	0	; () banked
  6762  010676  23CC               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6763                           
  6764                           ; BSR set to: 0
  6765  010678  C0CB  F0CC         	movff	___flmul@grs+2,___flmul@grs+3
  6766  01067C  C0CA  F0CB         	movff	___flmul@grs+1,___flmul@grs+2
  6767  010680  C0C9  F0CA         	movff	___flmul@grs,___flmul@grs+1
  6768  010684  0100               	movlb	0	; () banked
  6769  010686  6BC9               	clrf	___flmul@grs& (0+255),b
  6770  010688  0100               	movlb	0	; () banked
  6771  01068A  51BE               	movf	___flmul@a& (0+255),w,b
  6772  01068C  0100               	movlb	0	; () banked
  6773  01068E  03BA               	mulwf	___flmul@b& (0+255),b
  6774  010690  CFF3 F0D1          	movff	prodl,___flmul@temp
  6775  010694  CFF4 F0D2          	movff	prodh,___flmul@temp+1
  6776                           
  6777                           ; BSR set to: 0
  6778  010698  0100               	movlb	0	; () banked
  6779  01069A  51D1               	movf	___flmul@temp& (0+255),w,b
  6780  01069C  0100               	movlb	0	; () banked
  6781  01069E  27C9               	addwf	___flmul@grs& (0+255),f,b
  6782  0106A0  0100               	movlb	0	; () banked
  6783  0106A2  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  6784  0106A4  0100               	movlb	0	; () banked
  6785  0106A6  23CA               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6786  0106A8  0E00               	movlw	0
  6787  0106AA  0100               	movlb	0	; () banked
  6788  0106AC  23CB               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6789  0106AE  0E00               	movlw	0
  6790  0106B0  0100               	movlb	0	; () banked
  6791  0106B2  23CC               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6792                           
  6793                           ; BSR set to: 0
  6794  0106B4  0100               	movlb	0	; () banked
  6795  0106B6  51C0               	movf	(___flmul@a+2)& (0+255),w,b
  6796  0106B8  0100               	movlb	0	; () banked
  6797  0106BA  03BB               	mulwf	(___flmul@b+1)& (0+255),b
  6798  0106BC  CFF3 F0D1          	movff	prodl,___flmul@temp
  6799  0106C0  CFF4 F0D2          	movff	prodh,___flmul@temp+1
  6800  0106C4  0100               	movlb	0	; () banked
  6801  0106C6  51D1               	movf	___flmul@temp& (0+255),w,b
  6802  0106C8  0100               	movlb	0	; () banked
  6803  0106CA  27CD               	addwf	___flmul@prod& (0+255),f,b
  6804  0106CC  0100               	movlb	0	; () banked
  6805  0106CE  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  6806  0106D0  0100               	movlb	0	; () banked
  6807  0106D2  23CE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6808  0106D4  0E00               	movlw	0
  6809  0106D6  0100               	movlb	0	; () banked
  6810  0106D8  23CF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6811  0106DA  0E00               	movlw	0
  6812  0106DC  0100               	movlb	0	; () banked
  6813  0106DE  23D0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6814                           
  6815                           ; BSR set to: 0
  6816  0106E0  0100               	movlb	0	; () banked
  6817  0106E2  51BF               	movf	(___flmul@a+1)& (0+255),w,b
  6818  0106E4  0100               	movlb	0	; () banked
  6819  0106E6  03BC               	mulwf	(___flmul@b+2)& (0+255),b
  6820  0106E8  CFF3 F0D1          	movff	prodl,___flmul@temp
  6821  0106EC  CFF4 F0D2          	movff	prodh,___flmul@temp+1
  6822                           
  6823                           ; BSR set to: 0
  6824  0106F0  0100               	movlb	0	; () banked
  6825  0106F2  51D1               	movf	___flmul@temp& (0+255),w,b
  6826  0106F4  0100               	movlb	0	; () banked
  6827  0106F6  27CD               	addwf	___flmul@prod& (0+255),f,b
  6828  0106F8  0100               	movlb	0	; () banked
  6829  0106FA  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  6830  0106FC  0100               	movlb	0	; () banked
  6831  0106FE  23CE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6832  010700  0E00               	movlw	0
  6833  010702  0100               	movlb	0	; () banked
  6834  010704  23CF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6835  010706  0E00               	movlw	0
  6836  010708  0100               	movlb	0	; () banked
  6837  01070A  23D0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6838  01070C  0100               	movlb	0	; () banked
  6839  01070E  51C0               	movf	(___flmul@a+2)& (0+255),w,b
  6840  010710  0100               	movlb	0	; () banked
  6841  010712  03BC               	mulwf	(___flmul@b+2)& (0+255),b
  6842  010714  CFF3 F0D1          	movff	prodl,___flmul@temp
  6843  010718  CFF4 F0D2          	movff	prodh,___flmul@temp+1
  6844                           
  6845                           ; BSR set to: 0
  6846  01071C  0100               	movlb	0	; () banked
  6847  01071E  51D1               	movf	___flmul@temp& (0+255),w,b
  6848  010720  0100               	movlb	0	; () banked
  6849  010722  6FC2               	movwf	??___flmul& (0+255),b
  6850  010724  0100               	movlb	0	; () banked
  6851  010726  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  6852  010728  0100               	movlb	0	; () banked
  6853  01072A  6FC3               	movwf	(??___flmul+1)& (0+255),b
  6854  01072C  0100               	movlb	0	; () banked
  6855  01072E  6BC4               	clrf	(??___flmul+2)& (0+255),b
  6856  010730  0100               	movlb	0	; () banked
  6857  010732  6BC5               	clrf	(??___flmul+3)& (0+255),b
  6858  010734  C0C4  F0C5         	movff	??___flmul+2,??___flmul+3
  6859  010738  C0C3  F0C4         	movff	??___flmul+1,??___flmul+2
  6860  01073C  C0C2  F0C3         	movff	??___flmul,??___flmul+1
  6861  010740  0100               	movlb	0	; () banked
  6862  010742  6BC2               	clrf	??___flmul& (0+255),b
  6863  010744  0100               	movlb	0	; () banked
  6864  010746  51C2               	movf	??___flmul& (0+255),w,b
  6865  010748  0100               	movlb	0	; () banked
  6866  01074A  27CD               	addwf	___flmul@prod& (0+255),f,b
  6867  01074C  0100               	movlb	0	; () banked
  6868  01074E  51C3               	movf	(??___flmul+1)& (0+255),w,b
  6869  010750  0100               	movlb	0	; () banked
  6870  010752  23CE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6871  010754  0100               	movlb	0	; () banked
  6872  010756  51C4               	movf	(??___flmul+2)& (0+255),w,b
  6873  010758  0100               	movlb	0	; () banked
  6874  01075A  23CF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6875  01075C  0100               	movlb	0	; () banked
  6876  01075E  51C5               	movf	(??___flmul+3)& (0+255),w,b
  6877  010760  0100               	movlb	0	; () banked
  6878  010762  23D0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6879                           
  6880                           ; BSR set to: 0
  6881  010764  C0C9  F0C2         	movff	___flmul@grs,??___flmul
  6882  010768  C0CA  F0C3         	movff	___flmul@grs+1,??___flmul+1
  6883  01076C  C0CB  F0C4         	movff	___flmul@grs+2,??___flmul+2
  6884  010770  C0CC  F0C5         	movff	___flmul@grs+3,??___flmul+3
  6885  010774  0E19               	movlw	25
  6886  010776  D006               	goto	u15760
  6887  010778                     u15765:
  6888  010778  0100               	movlb	0	; () banked
  6889  01077A  90D8               	bcf	status,0,c
  6890  01077C  33C5               	rrcf	(??___flmul+3)& (0+255),f,b
  6891  01077E  33C4               	rrcf	(??___flmul+2)& (0+255),f,b
  6892  010780  33C3               	rrcf	(??___flmul+1)& (0+255),f,b
  6893  010782  33C2               	rrcf	??___flmul& (0+255),f,b
  6894  010784                     u15760:
  6895  010784  2EE8               	decfsz	wreg,f,c
  6896  010786  D7F8               	goto	u15765
  6897  010788  0100               	movlb	0	; () banked
  6898  01078A  51C2               	movf	??___flmul& (0+255),w,b
  6899  01078C  0100               	movlb	0	; () banked
  6900  01078E  27CD               	addwf	___flmul@prod& (0+255),f,b
  6901  010790  0100               	movlb	0	; () banked
  6902  010792  51C3               	movf	(??___flmul+1)& (0+255),w,b
  6903  010794  0100               	movlb	0	; () banked
  6904  010796  23CE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6905  010798  0100               	movlb	0	; () banked
  6906  01079A  51C4               	movf	(??___flmul+2)& (0+255),w,b
  6907  01079C  0100               	movlb	0	; () banked
  6908  01079E  23CF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6909  0107A0  0100               	movlb	0	; () banked
  6910  0107A2  51C5               	movf	(??___flmul+3)& (0+255),w,b
  6911  0107A4  0100               	movlb	0	; () banked
  6912  0107A6  23D0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6913                           
  6914                           ; BSR set to: 0
  6915  0107A8  C0CB  F0CC         	movff	___flmul@grs+2,___flmul@grs+3
  6916  0107AC  C0CA  F0CB         	movff	___flmul@grs+1,___flmul@grs+2
  6917  0107B0  C0C9  F0CA         	movff	___flmul@grs,___flmul@grs+1
  6918  0107B4  0100               	movlb	0	; () banked
  6919  0107B6  6BC9               	clrf	___flmul@grs& (0+255),b
  6920                           
  6921                           ; BSR set to: 0
  6922  0107B8  0100               	movlb	0	; () banked
  6923  0107BA  51C7               	movf	___flmul@aexp& (0+255),w,b
  6924  0107BC  C0C8  F0C2         	movff	___flmul@bexp,??___flmul
  6925  0107C0  0100               	movlb	0	; () banked
  6926  0107C2  6BC3               	clrf	(??___flmul+1)& (0+255),b
  6927  0107C4  0100               	movlb	0	; () banked
  6928  0107C6  27C2               	addwf	??___flmul& (0+255),f,b
  6929  0107C8  0E00               	movlw	0
  6930  0107CA  23C3               	addwfc	(??___flmul+1)& (0+255),f,b
  6931  0107CC  0E82               	movlw	130
  6932  0107CE  0100               	movlb	0	; () banked
  6933  0107D0  25C2               	addwf	??___flmul& (0+255),w,b
  6934  0107D2  0100               	movlb	0	; () banked
  6935  0107D4  6FD1               	movwf	___flmul@temp& (0+255),b
  6936  0107D6  0EFF               	movlw	255
  6937  0107D8  0100               	movlb	0	; () banked
  6938  0107DA  21C3               	addwfc	(??___flmul+1)& (0+255),w,b
  6939  0107DC  0100               	movlb	0	; () banked
  6940  0107DE  6FD2               	movwf	(___flmul@temp+1)& (0+255),b
  6941  0107E0  D015               	goto	l3098
  6942  0107E2                     
  6943                           ; BSR set to: 0
  6944                           
  6945                           ; BSR set to: 0
  6946  0107E2  0100               	movlb	0	; () banked
  6947  0107E4  90D8               	bcf	status,0,c
  6948  0107E6  37CD               	rlcf	___flmul@prod& (0+255),f,b
  6949  0107E8  37CE               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6950  0107EA  37CF               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6951  0107EC  37D0               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6952                           
  6953                           ; BSR set to: 0
  6954  0107EE  0100               	movlb	0	; () banked
  6955  0107F0  AFCC               	btfss	(___flmul@grs+3)& (0+255),7,b
  6956  0107F2  D002               	goto	l3100
  6957                           
  6958                           ; BSR set to: 0
  6959  0107F4  0100               	movlb	0	; () banked
  6960  0107F6  81CD               	bsf	___flmul@prod& (0+255),0,b
  6961  0107F8                     l3100:
  6962                           
  6963                           ; BSR set to: 0
  6964  0107F8  0100               	movlb	0	; () banked
  6965  0107FA  90D8               	bcf	status,0,c
  6966  0107FC  37C9               	rlcf	___flmul@grs& (0+255),f,b
  6967  0107FE  37CA               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6968  010800  37CB               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6969  010802  37CC               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6970  010804  0100               	movlb	0	; () banked
  6971  010806  07D1               	decf	___flmul@temp& (0+255),f,b
  6972  010808  A0D8               	btfss	status,0,c
  6973  01080A  07D2               	decf	(___flmul@temp+1)& (0+255),f,b
  6974  01080C                     l3098:
  6975                           
  6976                           ; BSR set to: 0
  6977                           
  6978                           ; BSR set to: 0
  6979  01080C  0100               	movlb	0	; () banked
  6980  01080E  AFCF               	btfss	(___flmul@prod+2)& (0+255),7,b
  6981  010810  D7E8               	goto	l3099
  6982                           
  6983                           ; BSR set to: 0
  6984                           
  6985                           ; BSR set to: 0
  6986  010812  0E00               	movlw	0
  6987  010814  0100               	movlb	0	; () banked
  6988  010816  6FC7               	movwf	___flmul@aexp& (0+255),b
  6989                           
  6990                           ; BSR set to: 0
  6991  010818  0100               	movlb	0	; () banked
  6992  01081A  AFCC               	btfss	(___flmul@grs+3)& (0+255),7,b
  6993  01081C  D024               	goto	l3105
  6994                           
  6995                           ; BSR set to: 0
  6996  01081E  0EFF               	movlw	255
  6997  010820  0100               	movlb	0	; () banked
  6998  010822  15C9               	andwf	___flmul@grs& (0+255),w,b
  6999  010824  0100               	movlb	0	; () banked
  7000  010826  6FC2               	movwf	??___flmul& (0+255),b
  7001  010828  0EFF               	movlw	255
  7002  01082A  0100               	movlb	0	; () banked
  7003  01082C  15CA               	andwf	(___flmul@grs+1)& (0+255),w,b
  7004  01082E  0100               	movlb	0	; () banked
  7005  010830  6FC3               	movwf	(??___flmul+1)& (0+255),b
  7006  010832  0EFF               	movlw	255
  7007  010834  0100               	movlb	0	; () banked
  7008  010836  15CB               	andwf	(___flmul@grs+2)& (0+255),w,b
  7009  010838  0100               	movlb	0	; () banked
  7010  01083A  6FC4               	movwf	(??___flmul+2)& (0+255),b
  7011  01083C  0E7F               	movlw	127
  7012  01083E  0100               	movlb	0	; () banked
  7013  010840  15CC               	andwf	(___flmul@grs+3)& (0+255),w,b
  7014  010842  0100               	movlb	0	; () banked
  7015  010844  6FC5               	movwf	(??___flmul+3)& (0+255),b
  7016  010846  0100               	movlb	0	; () banked
  7017  010848  51C2               	movf	??___flmul& (0+255),w,b
  7018  01084A  0100               	movlb	0	; () banked
  7019  01084C  11C3               	iorwf	(??___flmul+1)& (0+255),w,b
  7020  01084E  0100               	movlb	0	; () banked
  7021  010850  11C4               	iorwf	(??___flmul+2)& (0+255),w,b
  7022  010852  0100               	movlb	0	; () banked
  7023  010854  11C5               	iorwf	(??___flmul+3)& (0+255),w,b
  7024  010856  A4D8               	btfss	status,2,c
  7025  010858  D003               	goto	u15810
  7026                           
  7027                           ; BSR set to: 0
  7028                           
  7029                           ; BSR set to: 0
  7030  01085A  0100               	movlb	0	; () banked
  7031  01085C  A1CD               	btfss	___flmul@prod& (0+255),0,b
  7032  01085E  D003               	goto	l3105
  7033  010860                     u15810:
  7034                           
  7035                           ; BSR set to: 0
  7036  010860  0E01               	movlw	1
  7037  010862  0100               	movlb	0	; () banked
  7038  010864  6FC7               	movwf	___flmul@aexp& (0+255),b
  7039  010866                     l3105:
  7040                           
  7041                           ; BSR set to: 0
  7042                           
  7043                           ; BSR set to: 0
  7044                           
  7045                           ; BSR set to: 0
  7046  010866  0100               	movlb	0	; () banked
  7047  010868  51C7               	movf	___flmul@aexp& (0+255),w,b
  7048  01086A  0100               	movlb	0	; () banked
  7049  01086C  B4D8               	btfsc	status,2,c
  7050  01086E  D023               	goto	l3107
  7051                           
  7052                           ; BSR set to: 0
  7053  010870  0E01               	movlw	1
  7054  010872  0100               	movlb	0	; () banked
  7055  010874  27CD               	addwf	___flmul@prod& (0+255),f,b
  7056  010876  0E00               	movlw	0
  7057  010878  23CE               	addwfc	(___flmul@prod+1)& (0+255),f,b
  7058  01087A  23CF               	addwfc	(___flmul@prod+2)& (0+255),f,b
  7059  01087C  23D0               	addwfc	(___flmul@prod+3)& (0+255),f,b
  7060                           
  7061                           ; BSR set to: 0
  7062  01087E  0100               	movlb	0	; () banked
  7063  010880  A1D0               	btfss	(___flmul@prod+3)& (0+255),0,b
  7064  010882  D019               	goto	l3107
  7065                           
  7066                           ; BSR set to: 0
  7067  010884  C0CD  F0C2         	movff	___flmul@prod,??___flmul
  7068  010888  C0CE  F0C3         	movff	___flmul@prod+1,??___flmul+1
  7069  01088C  C0CF  F0C4         	movff	___flmul@prod+2,??___flmul+2
  7070  010890  C0D0  F0C5         	movff	___flmul@prod+3,??___flmul+3
  7071  010894  0100               	movlb	0	; () banked
  7072  010896  35C5               	rlcf	(??___flmul+3)& (0+255),w,b
  7073  010898  33C5               	rrcf	(??___flmul+3)& (0+255),f,b
  7074  01089A  33C4               	rrcf	(??___flmul+2)& (0+255),f,b
  7075  01089C  33C3               	rrcf	(??___flmul+1)& (0+255),f,b
  7076  01089E  33C2               	rrcf	??___flmul& (0+255),f,b
  7077  0108A0  C0C2  F0CD         	movff	??___flmul,___flmul@prod
  7078  0108A4  C0C3  F0CE         	movff	??___flmul+1,___flmul@prod+1
  7079  0108A8  C0C4  F0CF         	movff	??___flmul+2,___flmul@prod+2
  7080  0108AC  C0C5  F0D0         	movff	??___flmul+3,___flmul@prod+3
  7081                           
  7082                           ; BSR set to: 0
  7083  0108B0  0100               	movlb	0	; () banked
  7084  0108B2  4BD1               	infsnz	___flmul@temp& (0+255),f,b
  7085  0108B4  2BD2               	incf	(___flmul@temp+1)& (0+255),f,b
  7086  0108B6                     l3107:
  7087                           
  7088                           ; BSR set to: 0
  7089                           
  7090                           ; BSR set to: 0
  7091                           
  7092                           ; BSR set to: 0
  7093  0108B6  0100               	movlb	0	; () banked
  7094  0108B8  BFD2               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7095  0108BA  D010               	goto	l3108
  7096  0108BC  0100               	movlb	0	; () banked
  7097  0108BE  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  7098  0108C0  E104               	bnz	u15840
  7099  0108C2  0100               	movlb	0	; () banked
  7100  0108C4  29D1               	incf	___flmul@temp& (0+255),w,b
  7101  0108C6  A0D8               	btfss	status,0,c
  7102  0108C8  D009               	goto	l3108
  7103  0108CA                     u15840:
  7104                           
  7105                           ; BSR set to: 0
  7106  0108CA  0E00               	movlw	0
  7107  0108CC  0100               	movlb	0	; () banked
  7108  0108CE  6FCD               	movwf	___flmul@prod& (0+255),b
  7109  0108D0  0E00               	movlw	0
  7110  0108D2  6FCE               	movwf	(___flmul@prod+1)& (0+255),b
  7111  0108D4  0E80               	movlw	128
  7112  0108D6  6FCF               	movwf	(___flmul@prod+2)& (0+255),b
  7113  0108D8  0E7F               	movlw	127
  7114  0108DA  D02B               	goto	L4
  7115  0108DC                     l3108:
  7116                           
  7117                           ; BSR set to: 0
  7118                           
  7119                           ; BSR set to: 0
  7120  0108DC  0100               	movlb	0	; () banked
  7121  0108DE  BFD2               	btfsc	(___flmul@temp+1)& (0+255),7,b
  7122  0108E0  D007               	goto	u15850
  7123  0108E2  0100               	movlb	0	; () banked
  7124  0108E4  51D2               	movf	(___flmul@temp+1)& (0+255),w,b
  7125  0108E6  E111               	bnz	l3110
  7126  0108E8  0100               	movlb	0	; () banked
  7127  0108EA  05D1               	decf	___flmul@temp& (0+255),w,b
  7128  0108EC  B0D8               	btfsc	status,0,c
  7129  0108EE  D00D               	goto	l3110
  7130  0108F0                     u15850:
  7131                           
  7132                           ; BSR set to: 0
  7133  0108F0  0E00               	movlw	0
  7134  0108F2  0100               	movlb	0	; () banked
  7135  0108F4  6FCD               	movwf	___flmul@prod& (0+255),b
  7136  0108F6  0E00               	movlw	0
  7137  0108F8  6FCE               	movwf	(___flmul@prod+1)& (0+255),b
  7138  0108FA  0E00               	movlw	0
  7139  0108FC  6FCF               	movwf	(___flmul@prod+2)& (0+255),b
  7140  0108FE  0E00               	movlw	0
  7141  010900  6FD0               	movwf	(___flmul@prod+3)& (0+255),b
  7142  010902  0E00               	movlw	0
  7143  010904  0100               	movlb	0	; () banked
  7144  010906  6FC6               	movwf	___flmul@sign& (0+255),b
  7145  010908  D015               	goto	l3111
  7146  01090A                     l3110:
  7147                           
  7148                           ; BSR set to: 0
  7149  01090A  C0D1  F0C8         	movff	___flmul@temp,___flmul@bexp
  7150                           
  7151                           ; BSR set to: 0
  7152  01090E  0EFF               	movlw	255
  7153  010910  0100               	movlb	0	; () banked
  7154  010912  17CD               	andwf	___flmul@prod& (0+255),f,b
  7155  010914  0EFF               	movlw	255
  7156  010916  17CE               	andwf	(___flmul@prod+1)& (0+255),f,b
  7157  010918  0E7F               	movlw	127
  7158  01091A  17CF               	andwf	(___flmul@prod+2)& (0+255),f,b
  7159  01091C  0E00               	movlw	0
  7160  01091E  17D0               	andwf	(___flmul@prod+3)& (0+255),f,b
  7161                           
  7162                           ; BSR set to: 0
  7163  010920  0100               	movlb	0	; () banked
  7164  010922  A1C8               	btfss	___flmul@bexp& (0+255),0,b
  7165  010924  D002               	goto	l3112
  7166                           
  7167                           ; BSR set to: 0
  7168  010926  0100               	movlb	0	; () banked
  7169  010928  8FCF               	bsf	(___flmul@prod+2)& (0+255),7,b
  7170  01092A                     l3112:
  7171                           
  7172                           ; BSR set to: 0
  7173                           
  7174                           ; BSR set to: 0
  7175  01092A  0100               	movlb	0	; () banked
  7176  01092C  90D8               	bcf	status,0,c
  7177  01092E  31C8               	rrcf	___flmul@bexp& (0+255),w,b
  7178  010930  0100               	movlb	0	; () banked
  7179  010932                     L4:
  7180  010932  6FD0               	movwf	(___flmul@prod+3)& (0+255),b
  7181  010934                     l3111:
  7182                           
  7183                           ; BSR set to: 0
  7184                           
  7185                           ; BSR set to: 0
  7186                           
  7187                           ; BSR set to: 0
  7188  010934  0100               	movlb	0	; () banked
  7189  010936  51C6               	movf	___flmul@sign& (0+255),w,b
  7190  010938  0100               	movlb	0	; () banked
  7191  01093A  13D0               	iorwf	(___flmul@prod+3)& (0+255),f,b
  7192                           
  7193                           ; BSR set to: 0
  7194  01093C  C0CD  F0BA         	movff	___flmul@prod,?___flmul
  7195  010940  C0CE  F0BB         	movff	___flmul@prod+1,?___flmul+1
  7196  010944  C0CF  F0BC         	movff	___flmul@prod+2,?___flmul+2
  7197  010948  C0D0  F0BD         	movff	___flmul@prod+3,?___flmul+3
  7198  01094C  0012               	return	
  7199  01094E                     __end_of___flmul:
  7200                           	opt stack 0
  7201                           tblptru	equ	0xFF8
  7202                           tblptrh	equ	0xFF7
  7203                           tblptrl	equ	0xFF6
  7204                           tablat	equ	0xFF5
  7205                           prodh	equ	0xFF4
  7206                           prodl	equ	0xFF3
  7207                           postinc0	equ	0xFEE
  7208                           wreg	equ	0xFE8
  7209                           indf1	equ	0xFE7
  7210                           postdec1	equ	0xFE5
  7211                           fsr1h	equ	0xFE2
  7212                           fsr1l	equ	0xFE1
  7213                           indf2	equ	0xFDF
  7214                           postinc2	equ	0xFDE
  7215                           postdec2	equ	0xFDD
  7216                           plusw2	equ	0xFDB
  7217                           fsr2h	equ	0xFDA
  7218                           fsr2l	equ	0xFD9
  7219                           status	equ	0xFD8
  7220                           
  7221 ;; *************** function ___fldiv *****************
  7222 ;; Defined at:
  7223 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\sprcdiv.c"
  7224 ;; Parameters:    Size  Location     Type
  7225 ;;  b               4    0[BANK0 ] unsigned char 
  7226 ;;  a               4    4[BANK0 ] unsigned char 
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;  grs             4   19[BANK0 ] unsigned long 
  7229 ;;  rem             4   13[BANK0 ] unsigned long 
  7230 ;;  new_exp         2   17[BANK0 ] int 
  7231 ;;  aexp            1   24[BANK0 ] unsigned char 
  7232 ;;  bexp            1   23[BANK0 ] unsigned char 
  7233 ;;  sign            1   12[BANK0 ] unsigned char 
  7234 ;; Return value:  Size  Location     Type
  7235 ;;                  4    0[BANK0 ] unsigned char 
  7236 ;; Registers used:
  7237 ;;		wreg, status,2, status,0
  7238 ;; Tracked objects:
  7239 ;;		On entry : 0/0
  7240 ;;		On exit  : 0/0
  7241 ;;		Unchanged: 0/0
  7242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7243 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7244 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7245 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7246 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7247 ;;Total ram usage:       25 bytes
  7248 ;; Hardware stack levels used:    1
  7249 ;; Hardware stack levels required when called:    7
  7250 ;; This function calls:
  7251 ;;		Nothing
  7252 ;; This function is called by:
  7253 ;;		_ADC_Voltage
  7254 ;;		_update_IR_distance
  7255 ;;		_get_apparentDistance
  7256 ;;		_degrees_to_steps
  7257 ;;		_sin
  7258 ;; This function uses a non-reentrant model
  7259 ;;
  7260                           
  7261                           	psect	text18
  7262  010D6C                     __ptext18:
  7263                           	opt stack 0
  7264  010D6C                     ___fldiv:
  7265                           	opt stack 22
  7266                           
  7267                           ; BSR set to: 0
  7268                           ;incstack = 0
  7269  010D6C  0100               	movlb	0	; () banked
  7270  010D6E  51BD               	movf	(___fldiv@b+3)& (0+255),w,b
  7271  010D70  0B80               	andlw	128
  7272  010D72  0100               	movlb	0	; () banked
  7273  010D74  6FC6               	movwf	___fldiv@sign& (0+255),b
  7274  010D76  0100               	movlb	0	; () banked
  7275  010D78  51BD               	movf	(___fldiv@b+3)& (0+255),w,b
  7276  010D7A  25BD               	addwf	(___fldiv@b+3)& (0+255),w,b
  7277  010D7C  0100               	movlb	0	; () banked
  7278  010D7E  6FD1               	movwf	___fldiv@bexp& (0+255),b
  7279                           
  7280                           ; BSR set to: 0
  7281  010D80  0100               	movlb	0	; () banked
  7282  010D82  AFBC               	btfss	(___fldiv@b+2)& (0+255),7,b
  7283  010D84  D002               	goto	l3052
  7284                           
  7285                           ; BSR set to: 0
  7286  010D86  0100               	movlb	0	; () banked
  7287  010D88  81D1               	bsf	___fldiv@bexp& (0+255),0,b
  7288  010D8A                     l3052:
  7289                           
  7290                           ; BSR set to: 0
  7291                           
  7292                           ; BSR set to: 0
  7293  010D8A  0100               	movlb	0	; () banked
  7294  010D8C  51D1               	movf	___fldiv@bexp& (0+255),w,b
  7295  010D8E  0100               	movlb	0	; () banked
  7296  010D90  B4D8               	btfsc	status,2,c
  7297  010D92  D012               	goto	l3053
  7298                           
  7299                           ; BSR set to: 0
  7300  010D94  0100               	movlb	0	; () banked
  7301  010D96  29D1               	incf	___fldiv@bexp& (0+255),w,b
  7302  010D98  A4D8               	btfss	status,2,c
  7303  010D9A  D009               	goto	l3054
  7304                           
  7305                           ; BSR set to: 0
  7306  010D9C  0E00               	movlw	0
  7307  010D9E  0100               	movlb	0	; () banked
  7308  010DA0  6FBA               	movwf	___fldiv@b& (0+255),b
  7309  010DA2  0E00               	movlw	0
  7310  010DA4  6FBB               	movwf	(___fldiv@b+1)& (0+255),b
  7311  010DA6  0E00               	movlw	0
  7312  010DA8  6FBC               	movwf	(___fldiv@b+2)& (0+255),b
  7313  010DAA  0E00               	movlw	0
  7314  010DAC  6FBD               	movwf	(___fldiv@b+3)& (0+255),b
  7315  010DAE                     l3054:
  7316                           
  7317                           ; BSR set to: 0
  7318                           
  7319                           ; BSR set to: 0
  7320  010DAE  0100               	movlb	0	; () banked
  7321  010DB0  8FBC               	bsf	(___fldiv@b+2)& (0+255),7,b
  7322                           
  7323                           ; BSR set to: 0
  7324  010DB2  0E00               	movlw	0
  7325  010DB4  0100               	movlb	0	; () banked
  7326  010DB6  D008               	goto	L5
  7327  010DB8                     l3053:
  7328                           
  7329                           ; BSR set to: 0
  7330                           
  7331                           ; BSR set to: 0
  7332  010DB8  0E00               	movlw	0
  7333  010DBA  0100               	movlb	0	; () banked
  7334  010DBC  6FBA               	movwf	___fldiv@b& (0+255),b
  7335  010DBE  0E00               	movlw	0
  7336  010DC0  6FBB               	movwf	(___fldiv@b+1)& (0+255),b
  7337  010DC2  0E00               	movlw	0
  7338  010DC4  6FBC               	movwf	(___fldiv@b+2)& (0+255),b
  7339  010DC6  0E00               	movlw	0
  7340  010DC8                     L5:
  7341  010DC8  6FBD               	movwf	(___fldiv@b+3)& (0+255),b
  7342                           
  7343                           ; BSR set to: 0
  7344                           
  7345                           ; BSR set to: 0
  7346  010DCA  0100               	movlb	0	; () banked
  7347  010DCC  51C1               	movf	(___fldiv@a+3)& (0+255),w,b
  7348  010DCE  0B80               	andlw	128
  7349  010DD0  0100               	movlb	0	; () banked
  7350  010DD2  1BC6               	xorwf	___fldiv@sign& (0+255),f,b
  7351                           
  7352                           ; BSR set to: 0
  7353  010DD4  0100               	movlb	0	; () banked
  7354  010DD6  51C1               	movf	(___fldiv@a+3)& (0+255),w,b
  7355  010DD8  25C1               	addwf	(___fldiv@a+3)& (0+255),w,b
  7356  010DDA  0100               	movlb	0	; () banked
  7357  010DDC  6FD2               	movwf	___fldiv@aexp& (0+255),b
  7358                           
  7359                           ; BSR set to: 0
  7360  010DDE  0100               	movlb	0	; () banked
  7361  010DE0  AFC0               	btfss	(___fldiv@a+2)& (0+255),7,b
  7362  010DE2  D002               	goto	l3056
  7363                           
  7364                           ; BSR set to: 0
  7365  010DE4  0100               	movlb	0	; () banked
  7366  010DE6  81D2               	bsf	___fldiv@aexp& (0+255),0,b
  7367  010DE8                     l3056:
  7368                           
  7369                           ; BSR set to: 0
  7370                           
  7371                           ; BSR set to: 0
  7372  010DE8  0100               	movlb	0	; () banked
  7373  010DEA  51D2               	movf	___fldiv@aexp& (0+255),w,b
  7374  010DEC  0100               	movlb	0	; () banked
  7375  010DEE  B4D8               	btfsc	status,2,c
  7376  010DF0  D012               	goto	l3057
  7377                           
  7378                           ; BSR set to: 0
  7379  010DF2  0100               	movlb	0	; () banked
  7380  010DF4  29D2               	incf	___fldiv@aexp& (0+255),w,b
  7381  010DF6  A4D8               	btfss	status,2,c
  7382  010DF8  D009               	goto	l3058
  7383                           
  7384                           ; BSR set to: 0
  7385  010DFA  0E00               	movlw	0
  7386  010DFC  0100               	movlb	0	; () banked
  7387  010DFE  6FBE               	movwf	___fldiv@a& (0+255),b
  7388  010E00  0E00               	movlw	0
  7389  010E02  6FBF               	movwf	(___fldiv@a+1)& (0+255),b
  7390  010E04  0E00               	movlw	0
  7391  010E06  6FC0               	movwf	(___fldiv@a+2)& (0+255),b
  7392  010E08  0E00               	movlw	0
  7393  010E0A  6FC1               	movwf	(___fldiv@a+3)& (0+255),b
  7394  010E0C                     l3058:
  7395                           
  7396                           ; BSR set to: 0
  7397                           
  7398                           ; BSR set to: 0
  7399  010E0C  0100               	movlb	0	; () banked
  7400  010E0E  8FC0               	bsf	(___fldiv@a+2)& (0+255),7,b
  7401                           
  7402                           ; BSR set to: 0
  7403  010E10  0E00               	movlw	0
  7404  010E12  0100               	movlb	0	; () banked
  7405  010E14  D008               	goto	L6
  7406  010E16                     l3057:
  7407                           
  7408                           ; BSR set to: 0
  7409                           
  7410                           ; BSR set to: 0
  7411  010E16  0E00               	movlw	0
  7412  010E18  0100               	movlb	0	; () banked
  7413  010E1A  6FBE               	movwf	___fldiv@a& (0+255),b
  7414  010E1C  0E00               	movlw	0
  7415  010E1E  6FBF               	movwf	(___fldiv@a+1)& (0+255),b
  7416  010E20  0E00               	movlw	0
  7417  010E22  6FC0               	movwf	(___fldiv@a+2)& (0+255),b
  7418  010E24  0E00               	movlw	0
  7419  010E26                     L6:
  7420  010E26  6FC1               	movwf	(___fldiv@a+3)& (0+255),b
  7421                           
  7422                           ; BSR set to: 0
  7423                           
  7424                           ; BSR set to: 0
  7425  010E28  0100               	movlb	0	; () banked
  7426  010E2A  51BE               	movf	___fldiv@a& (0+255),w,b
  7427  010E2C  0100               	movlb	0	; () banked
  7428  010E2E  11BF               	iorwf	(___fldiv@a+1)& (0+255),w,b
  7429  010E30  0100               	movlb	0	; () banked
  7430  010E32  11C0               	iorwf	(___fldiv@a+2)& (0+255),w,b
  7431  010E34  0100               	movlb	0	; () banked
  7432  010E36  11C1               	iorwf	(___fldiv@a+3)& (0+255),w,b
  7433  010E38  A4D8               	btfss	status,2,c
  7434  010E3A  D017               	goto	l3060
  7435                           
  7436                           ; BSR set to: 0
  7437  010E3C  0E00               	movlw	0
  7438  010E3E  0100               	movlb	0	; () banked
  7439  010E40  6FBA               	movwf	___fldiv@b& (0+255),b
  7440  010E42  0E00               	movlw	0
  7441  010E44  6FBB               	movwf	(___fldiv@b+1)& (0+255),b
  7442  010E46  0E00               	movlw	0
  7443  010E48  6FBC               	movwf	(___fldiv@b+2)& (0+255),b
  7444  010E4A  0E00               	movlw	0
  7445  010E4C  6FBD               	movwf	(___fldiv@b+3)& (0+255),b
  7446                           
  7447                           ; BSR set to: 0
  7448  010E4E  0100               	movlb	0	; () banked
  7449  010E50  0E80               	movlw	128
  7450  010E52  13BC               	iorwf	(___fldiv@b+2)& (0+255),f,b
  7451  010E54  0E7F               	movlw	127
  7452  010E56  13BD               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7453                           
  7454                           ; BSR set to: 0
  7455  010E58  C0BA  F0BA         	movff	___fldiv@b,?___fldiv
  7456  010E5C  C0BB  F0BB         	movff	___fldiv@b+1,?___fldiv+1
  7457  010E60  C0BC  F0BC         	movff	___fldiv@b+2,?___fldiv+2
  7458  010E64  C0BD  F0BD         	movff	___fldiv@b+3,?___fldiv+3
  7459                           
  7460                           ; BSR set to: 0
  7461  010E68  0012               	return	
  7462  010E6A                     l3060:
  7463                           
  7464                           ; BSR set to: 0
  7465                           
  7466                           ; BSR set to: 0
  7467  010E6A  0100               	movlb	0	; () banked
  7468  010E6C  51D1               	movf	___fldiv@bexp& (0+255),w,b
  7469  010E6E  0100               	movlb	0	; () banked
  7470  010E70  A4D8               	btfss	status,2,c
  7471  010E72  D012               	goto	l3062
  7472                           
  7473                           ; BSR set to: 0
  7474  010E74  0E00               	movlw	0
  7475  010E76  0100               	movlb	0	; () banked
  7476  010E78  6FBA               	movwf	___fldiv@b& (0+255),b
  7477  010E7A  0E00               	movlw	0
  7478  010E7C  6FBB               	movwf	(___fldiv@b+1)& (0+255),b
  7479  010E7E  0E00               	movlw	0
  7480  010E80  6FBC               	movwf	(___fldiv@b+2)& (0+255),b
  7481  010E82  0E00               	movlw	0
  7482  010E84  6FBD               	movwf	(___fldiv@b+3)& (0+255),b
  7483                           
  7484                           ; BSR set to: 0
  7485  010E86  C0BA  F0BA         	movff	___fldiv@b,?___fldiv
  7486  010E8A  C0BB  F0BB         	movff	___fldiv@b+1,?___fldiv+1
  7487  010E8E  C0BC  F0BC         	movff	___fldiv@b+2,?___fldiv+2
  7488  010E92  C0BD  F0BD         	movff	___fldiv@b+3,?___fldiv+3
  7489                           
  7490                           ; BSR set to: 0
  7491  010E96  0012               	return	
  7492  010E98                     l3062:
  7493                           
  7494                           ; BSR set to: 0
  7495                           
  7496                           ; BSR set to: 0
  7497  010E98  0100               	movlb	0	; () banked
  7498  010E9A  51D2               	movf	___fldiv@aexp& (0+255),w,b
  7499  010E9C  0100               	movlb	0	; () banked
  7500  010E9E  6FC2               	movwf	??___fldiv& (0+255),b
  7501  010EA0  6BC3               	clrf	(??___fldiv+1)& (0+255),b
  7502  010EA2  0100               	movlb	0	; () banked
  7503  010EA4  1FC2               	comf	??___fldiv& (0+255),f,b
  7504  010EA6  1FC3               	comf	(??___fldiv+1)& (0+255),f,b
  7505  010EA8  4BC2               	infsnz	??___fldiv& (0+255),f,b
  7506  010EAA  2BC3               	incf	(??___fldiv+1)& (0+255),f,b
  7507  010EAC  0100               	movlb	0	; () banked
  7508  010EAE  51D1               	movf	___fldiv@bexp& (0+255),w,b
  7509  010EB0  0100               	movlb	0	; () banked
  7510  010EB2  6FC4               	movwf	(??___fldiv+2)& (0+255),b
  7511  010EB4  6BC5               	clrf	(??___fldiv+3)& (0+255),b
  7512  010EB6  0100               	movlb	0	; () banked
  7513  010EB8  51C2               	movf	??___fldiv& (0+255),w,b
  7514  010EBA  0100               	movlb	0	; () banked
  7515  010EBC  27C4               	addwf	(??___fldiv+2)& (0+255),f,b
  7516  010EBE  0100               	movlb	0	; () banked
  7517  010EC0  51C3               	movf	(??___fldiv+1)& (0+255),w,b
  7518  010EC2  0100               	movlb	0	; () banked
  7519  010EC4  23C5               	addwfc	(??___fldiv+3)& (0+255),f,b
  7520  010EC6  0E7F               	movlw	127
  7521  010EC8  0100               	movlb	0	; () banked
  7522  010ECA  25C4               	addwf	(??___fldiv+2)& (0+255),w,b
  7523  010ECC  0100               	movlb	0	; () banked
  7524  010ECE  6FCB               	movwf	___fldiv@new_exp& (0+255),b
  7525  010ED0  0E00               	movlw	0
  7526  010ED2  0100               	movlb	0	; () banked
  7527  010ED4  21C5               	addwfc	(??___fldiv+3)& (0+255),w,b
  7528  010ED6  0100               	movlb	0	; () banked
  7529  010ED8  6FCC               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7530                           
  7531                           ; BSR set to: 0
  7532  010EDA  C0BA  F0C7         	movff	___fldiv@b,___fldiv@rem
  7533  010EDE  C0BB  F0C8         	movff	___fldiv@b+1,___fldiv@rem+1
  7534  010EE2  C0BC  F0C9         	movff	___fldiv@b+2,___fldiv@rem+2
  7535  010EE6  C0BD  F0CA         	movff	___fldiv@b+3,___fldiv@rem+3
  7536                           
  7537                           ; BSR set to: 0
  7538  010EEA  0E00               	movlw	0
  7539  010EEC  0100               	movlb	0	; () banked
  7540  010EEE  6FBA               	movwf	___fldiv@b& (0+255),b
  7541  010EF0  0E00               	movlw	0
  7542  010EF2  6FBB               	movwf	(___fldiv@b+1)& (0+255),b
  7543  010EF4  0E00               	movlw	0
  7544  010EF6  6FBC               	movwf	(___fldiv@b+2)& (0+255),b
  7545  010EF8  0E00               	movlw	0
  7546  010EFA  6FBD               	movwf	(___fldiv@b+3)& (0+255),b
  7547                           
  7548                           ; BSR set to: 0
  7549  010EFC  0E00               	movlw	0
  7550  010EFE  0100               	movlb	0	; () banked
  7551  010F00  6FCD               	movwf	___fldiv@grs& (0+255),b
  7552  010F02  0E00               	movlw	0
  7553  010F04  6FCE               	movwf	(___fldiv@grs+1)& (0+255),b
  7554  010F06  0E00               	movlw	0
  7555  010F08  6FCF               	movwf	(___fldiv@grs+2)& (0+255),b
  7556  010F0A  0E00               	movlw	0
  7557  010F0C  6FD0               	movwf	(___fldiv@grs+3)& (0+255),b
  7558                           
  7559                           ; BSR set to: 0
  7560  010F0E  0E00               	movlw	0
  7561  010F10  0100               	movlb	0	; () banked
  7562  010F12  6FD2               	movwf	___fldiv@aexp& (0+255),b
  7563  010F14  D042               	goto	l3063
  7564  010F16                     
  7565                           ; BSR set to: 0
  7566                           
  7567                           ; BSR set to: 0
  7568  010F16  0100               	movlb	0	; () banked
  7569  010F18  51D2               	movf	___fldiv@aexp& (0+255),w,b
  7570  010F1A  0100               	movlb	0	; () banked
  7571  010F1C  B4D8               	btfsc	status,2,c
  7572  010F1E  D017               	goto	l3065
  7573                           
  7574                           ; BSR set to: 0
  7575  010F20  0100               	movlb	0	; () banked
  7576  010F22  90D8               	bcf	status,0,c
  7577  010F24  37C7               	rlcf	___fldiv@rem& (0+255),f,b
  7578  010F26  37C8               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  7579  010F28  37C9               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  7580  010F2A  37CA               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  7581  010F2C  0100               	movlb	0	; () banked
  7582  010F2E  90D8               	bcf	status,0,c
  7583  010F30  37BA               	rlcf	___fldiv@b& (0+255),f,b
  7584  010F32  37BB               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7585  010F34  37BC               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7586  010F36  37BD               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7587                           
  7588                           ; BSR set to: 0
  7589  010F38  0100               	movlb	0	; () banked
  7590  010F3A  AFD0               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7591  010F3C  D002               	goto	l3066
  7592                           
  7593                           ; BSR set to: 0
  7594  010F3E  0100               	movlb	0	; () banked
  7595  010F40  81BA               	bsf	___fldiv@b& (0+255),0,b
  7596  010F42                     l3066:
  7597                           
  7598                           ; BSR set to: 0
  7599  010F42  0100               	movlb	0	; () banked
  7600  010F44  90D8               	bcf	status,0,c
  7601  010F46  37CD               	rlcf	___fldiv@grs& (0+255),f,b
  7602  010F48  37CE               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7603  010F4A  37CF               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7604  010F4C  37D0               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7605  010F4E                     l3065:
  7606                           
  7607                           ; BSR set to: 0
  7608                           
  7609                           ; BSR set to: 0
  7610  010F4E  0100               	movlb	0	; () banked
  7611  010F50  51BE               	movf	___fldiv@a& (0+255),w,b
  7612  010F52  0100               	movlb	0	; () banked
  7613  010F54  5DC7               	subwf	___fldiv@rem& (0+255),w,b
  7614  010F56  0100               	movlb	0	; () banked
  7615  010F58  51BF               	movf	(___fldiv@a+1)& (0+255),w,b
  7616  010F5A  0100               	movlb	0	; () banked
  7617  010F5C  59C8               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  7618  010F5E  0100               	movlb	0	; () banked
  7619  010F60  51C0               	movf	(___fldiv@a+2)& (0+255),w,b
  7620  010F62  0100               	movlb	0	; () banked
  7621  010F64  59C9               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  7622  010F66  0100               	movlb	0	; () banked
  7623  010F68  51C1               	movf	(___fldiv@a+3)& (0+255),w,b
  7624  010F6A  0100               	movlb	0	; () banked
  7625  010F6C  59CA               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  7626  010F6E  A0D8               	btfss	status,0,c
  7627  010F70  D012               	goto	l3067
  7628                           
  7629                           ; BSR set to: 0
  7630  010F72  0100               	movlb	0	; () banked
  7631  010F74  8DD0               	bsf	(___fldiv@grs+3)& (0+255),6,b
  7632                           
  7633                           ; BSR set to: 0
  7634  010F76  0100               	movlb	0	; () banked
  7635  010F78  51BE               	movf	___fldiv@a& (0+255),w,b
  7636  010F7A  0100               	movlb	0	; () banked
  7637  010F7C  5FC7               	subwf	___fldiv@rem& (0+255),f,b
  7638  010F7E  0100               	movlb	0	; () banked
  7639  010F80  51BF               	movf	(___fldiv@a+1)& (0+255),w,b
  7640  010F82  0100               	movlb	0	; () banked
  7641  010F84  5BC8               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  7642  010F86  0100               	movlb	0	; () banked
  7643  010F88  51C0               	movf	(___fldiv@a+2)& (0+255),w,b
  7644  010F8A  0100               	movlb	0	; () banked
  7645  010F8C  5BC9               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  7646  010F8E  0100               	movlb	0	; () banked
  7647  010F90  51C1               	movf	(___fldiv@a+3)& (0+255),w,b
  7648  010F92  0100               	movlb	0	; () banked
  7649  010F94  5BCA               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  7650  010F96                     l3067:
  7651                           
  7652                           ; BSR set to: 0
  7653                           
  7654                           ; BSR set to: 0
  7655  010F96  0100               	movlb	0	; () banked
  7656  010F98  2BD2               	incf	___fldiv@aexp& (0+255),f,b
  7657  010F9A                     l3063:
  7658                           
  7659                           ; BSR set to: 0
  7660  010F9A  0E19               	movlw	25
  7661  010F9C  0100               	movlb	0	; () banked
  7662  010F9E  65D2               	cpfsgt	___fldiv@aexp& (0+255),b
  7663  010FA0  D7BA               	goto	l3064
  7664                           
  7665                           ; BSR set to: 0
  7666                           
  7667                           ; BSR set to: 0
  7668  010FA2  0100               	movlb	0	; () banked
  7669  010FA4  51C7               	movf	___fldiv@rem& (0+255),w,b
  7670  010FA6  0100               	movlb	0	; () banked
  7671  010FA8  11C8               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  7672  010FAA  0100               	movlb	0	; () banked
  7673  010FAC  11C9               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  7674  010FAE  0100               	movlb	0	; () banked
  7675  010FB0  11CA               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  7676  010FB2  B4D8               	btfsc	status,2,c
  7677  010FB4  D018               	goto	l3070
  7678                           
  7679                           ; BSR set to: 0
  7680  010FB6  0100               	movlb	0	; () banked
  7681  010FB8  81CD               	bsf	___fldiv@grs& (0+255),0,b
  7682                           
  7683                           ; BSR set to: 0
  7684  010FBA  D015               	goto	l3070
  7685  010FBC                     
  7686                           ; BSR set to: 0
  7687                           
  7688                           ; BSR set to: 0
  7689  010FBC  0100               	movlb	0	; () banked
  7690  010FBE  90D8               	bcf	status,0,c
  7691  010FC0  37BA               	rlcf	___fldiv@b& (0+255),f,b
  7692  010FC2  37BB               	rlcf	(___fldiv@b+1)& (0+255),f,b
  7693  010FC4  37BC               	rlcf	(___fldiv@b+2)& (0+255),f,b
  7694  010FC6  37BD               	rlcf	(___fldiv@b+3)& (0+255),f,b
  7695                           
  7696                           ; BSR set to: 0
  7697  010FC8  0100               	movlb	0	; () banked
  7698  010FCA  AFD0               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7699  010FCC  D002               	goto	l3072
  7700                           
  7701                           ; BSR set to: 0
  7702  010FCE  0100               	movlb	0	; () banked
  7703  010FD0  81BA               	bsf	___fldiv@b& (0+255),0,b
  7704  010FD2                     l3072:
  7705                           
  7706                           ; BSR set to: 0
  7707  010FD2  0100               	movlb	0	; () banked
  7708  010FD4  90D8               	bcf	status,0,c
  7709  010FD6  37CD               	rlcf	___fldiv@grs& (0+255),f,b
  7710  010FD8  37CE               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  7711  010FDA  37CF               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  7712  010FDC  37D0               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  7713  010FDE  0100               	movlb	0	; () banked
  7714  010FE0  07CB               	decf	___fldiv@new_exp& (0+255),f,b
  7715  010FE2  A0D8               	btfss	status,0,c
  7716  010FE4  07CC               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  7717  010FE6                     l3070:
  7718                           
  7719                           ; BSR set to: 0
  7720                           
  7721                           ; BSR set to: 0
  7722  010FE6  0100               	movlb	0	; () banked
  7723  010FE8  AFBC               	btfss	(___fldiv@b+2)& (0+255),7,b
  7724  010FEA  D7E8               	goto	l3071
  7725                           
  7726                           ; BSR set to: 0
  7727                           
  7728                           ; BSR set to: 0
  7729  010FEC  0E00               	movlw	0
  7730  010FEE  0100               	movlb	0	; () banked
  7731  010FF0  6FD2               	movwf	___fldiv@aexp& (0+255),b
  7732                           
  7733                           ; BSR set to: 0
  7734  010FF2  0100               	movlb	0	; () banked
  7735  010FF4  AFD0               	btfss	(___fldiv@grs+3)& (0+255),7,b
  7736  010FF6  D024               	goto	l3077
  7737                           
  7738                           ; BSR set to: 0
  7739  010FF8  0EFF               	movlw	255
  7740  010FFA  0100               	movlb	0	; () banked
  7741  010FFC  15CD               	andwf	___fldiv@grs& (0+255),w,b
  7742  010FFE  0100               	movlb	0	; () banked
  7743  011000  6FC2               	movwf	??___fldiv& (0+255),b
  7744  011002  0EFF               	movlw	255
  7745  011004  0100               	movlb	0	; () banked
  7746  011006  15CE               	andwf	(___fldiv@grs+1)& (0+255),w,b
  7747  011008  0100               	movlb	0	; () banked
  7748  01100A  6FC3               	movwf	(??___fldiv+1)& (0+255),b
  7749  01100C  0EFF               	movlw	255
  7750  01100E  0100               	movlb	0	; () banked
  7751  011010  15CF               	andwf	(___fldiv@grs+2)& (0+255),w,b
  7752  011012  0100               	movlb	0	; () banked
  7753  011014  6FC4               	movwf	(??___fldiv+2)& (0+255),b
  7754  011016  0E7F               	movlw	127
  7755  011018  0100               	movlb	0	; () banked
  7756  01101A  15D0               	andwf	(___fldiv@grs+3)& (0+255),w,b
  7757  01101C  0100               	movlb	0	; () banked
  7758  01101E  6FC5               	movwf	(??___fldiv+3)& (0+255),b
  7759  011020  0100               	movlb	0	; () banked
  7760  011022  51C2               	movf	??___fldiv& (0+255),w,b
  7761  011024  0100               	movlb	0	; () banked
  7762  011026  11C3               	iorwf	(??___fldiv+1)& (0+255),w,b
  7763  011028  0100               	movlb	0	; () banked
  7764  01102A  11C4               	iorwf	(??___fldiv+2)& (0+255),w,b
  7765  01102C  0100               	movlb	0	; () banked
  7766  01102E  11C5               	iorwf	(??___fldiv+3)& (0+255),w,b
  7767  011030  A4D8               	btfss	status,2,c
  7768  011032  D003               	goto	u15620
  7769                           
  7770                           ; BSR set to: 0
  7771                           
  7772                           ; BSR set to: 0
  7773  011034  0100               	movlb	0	; () banked
  7774  011036  A1BA               	btfss	___fldiv@b& (0+255),0,b
  7775  011038  D003               	goto	l3077
  7776  01103A                     u15620:
  7777                           
  7778                           ; BSR set to: 0
  7779  01103A  0E01               	movlw	1
  7780  01103C  0100               	movlb	0	; () banked
  7781  01103E  6FD2               	movwf	___fldiv@aexp& (0+255),b
  7782  011040                     l3077:
  7783                           
  7784                           ; BSR set to: 0
  7785                           
  7786                           ; BSR set to: 0
  7787                           
  7788                           ; BSR set to: 0
  7789  011040  0100               	movlb	0	; () banked
  7790  011042  51D2               	movf	___fldiv@aexp& (0+255),w,b
  7791  011044  0100               	movlb	0	; () banked
  7792  011046  B4D8               	btfsc	status,2,c
  7793  011048  D023               	goto	l3079
  7794                           
  7795                           ; BSR set to: 0
  7796  01104A  0E01               	movlw	1
  7797  01104C  0100               	movlb	0	; () banked
  7798  01104E  27BA               	addwf	___fldiv@b& (0+255),f,b
  7799  011050  0E00               	movlw	0
  7800  011052  23BB               	addwfc	(___fldiv@b+1)& (0+255),f,b
  7801  011054  23BC               	addwfc	(___fldiv@b+2)& (0+255),f,b
  7802  011056  23BD               	addwfc	(___fldiv@b+3)& (0+255),f,b
  7803                           
  7804                           ; BSR set to: 0
  7805  011058  0100               	movlb	0	; () banked
  7806  01105A  A1BD               	btfss	(___fldiv@b+3)& (0+255),0,b
  7807  01105C  D019               	goto	l3079
  7808                           
  7809                           ; BSR set to: 0
  7810  01105E  C0BA  F0C2         	movff	___fldiv@b,??___fldiv
  7811  011062  C0BB  F0C3         	movff	___fldiv@b+1,??___fldiv+1
  7812  011066  C0BC  F0C4         	movff	___fldiv@b+2,??___fldiv+2
  7813  01106A  C0BD  F0C5         	movff	___fldiv@b+3,??___fldiv+3
  7814  01106E  0100               	movlb	0	; () banked
  7815  011070  35C5               	rlcf	(??___fldiv+3)& (0+255),w,b
  7816  011072  33C5               	rrcf	(??___fldiv+3)& (0+255),f,b
  7817  011074  33C4               	rrcf	(??___fldiv+2)& (0+255),f,b
  7818  011076  33C3               	rrcf	(??___fldiv+1)& (0+255),f,b
  7819  011078  33C2               	rrcf	??___fldiv& (0+255),f,b
  7820  01107A  C0C2  F0BA         	movff	??___fldiv,___fldiv@b
  7821  01107E  C0C3  F0BB         	movff	??___fldiv+1,___fldiv@b+1
  7822  011082  C0C4  F0BC         	movff	??___fldiv+2,___fldiv@b+2
  7823  011086  C0C5  F0BD         	movff	??___fldiv+3,___fldiv@b+3
  7824                           
  7825                           ; BSR set to: 0
  7826  01108A  0100               	movlb	0	; () banked
  7827  01108C  4BCB               	infsnz	___fldiv@new_exp& (0+255),f,b
  7828  01108E  2BCC               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  7829  011090                     l3079:
  7830                           
  7831                           ; BSR set to: 0
  7832                           
  7833                           ; BSR set to: 0
  7834                           
  7835                           ; BSR set to: 0
  7836  011090  0100               	movlb	0	; () banked
  7837  011092  BFCC               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7838  011094  D014               	goto	l3080
  7839  011096  0100               	movlb	0	; () banked
  7840  011098  51CC               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7841  01109A  E104               	bnz	u15650
  7842  01109C  0100               	movlb	0	; () banked
  7843  01109E  29CB               	incf	___fldiv@new_exp& (0+255),w,b
  7844  0110A0  A0D8               	btfss	status,0,c
  7845  0110A2  D00D               	goto	l3080
  7846  0110A4                     u15650:
  7847                           
  7848                           ; BSR set to: 0
  7849  0110A4  0E00               	movlw	0
  7850  0110A6  0100               	movlb	0	; () banked
  7851  0110A8  6FCC               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7852  0110AA  69CB               	setf	___fldiv@new_exp& (0+255),b
  7853  0110AC  0E00               	movlw	0
  7854  0110AE  0100               	movlb	0	; () banked
  7855  0110B0  6FBA               	movwf	___fldiv@b& (0+255),b
  7856  0110B2  0E00               	movlw	0
  7857  0110B4  6FBB               	movwf	(___fldiv@b+1)& (0+255),b
  7858  0110B6  0E00               	movlw	0
  7859  0110B8  6FBC               	movwf	(___fldiv@b+2)& (0+255),b
  7860  0110BA  0E00               	movlw	0
  7861  0110BC  6FBD               	movwf	(___fldiv@b+3)& (0+255),b
  7862  0110BE                     l3080:
  7863                           
  7864                           ; BSR set to: 0
  7865                           
  7866                           ; BSR set to: 0
  7867  0110BE  0100               	movlb	0	; () banked
  7868  0110C0  BFCC               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  7869  0110C2  D007               	goto	u15660
  7870  0110C4  0100               	movlb	0	; () banked
  7871  0110C6  51CC               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  7872  0110C8  E115               	bnz	l17728
  7873  0110CA  0100               	movlb	0	; () banked
  7874  0110CC  05CB               	decf	___fldiv@new_exp& (0+255),w,b
  7875  0110CE  B0D8               	btfsc	status,0,c
  7876  0110D0  D011               	goto	l3081
  7877  0110D2                     u15660:
  7878                           
  7879                           ; BSR set to: 0
  7880  0110D2  0E00               	movlw	0
  7881  0110D4  0100               	movlb	0	; () banked
  7882  0110D6  6FCC               	movwf	(___fldiv@new_exp+1)& (0+255),b
  7883  0110D8  0E00               	movlw	0
  7884  0110DA  6FCB               	movwf	___fldiv@new_exp& (0+255),b
  7885  0110DC  0E00               	movlw	0
  7886  0110DE  0100               	movlb	0	; () banked
  7887  0110E0  6FBA               	movwf	___fldiv@b& (0+255),b
  7888  0110E2  0E00               	movlw	0
  7889  0110E4  6FBB               	movwf	(___fldiv@b+1)& (0+255),b
  7890  0110E6  0E00               	movlw	0
  7891  0110E8  6FBC               	movwf	(___fldiv@b+2)& (0+255),b
  7892  0110EA  0E00               	movlw	0
  7893  0110EC  6FBD               	movwf	(___fldiv@b+3)& (0+255),b
  7894  0110EE  0E00               	movlw	0
  7895  0110F0  0100               	movlb	0	; () banked
  7896  0110F2  6FC6               	movwf	___fldiv@sign& (0+255),b
  7897  0110F4                     l3081:
  7898  0110F4                     l17728:
  7899                           
  7900                           ; BSR set to: 0
  7901  0110F4  C0CB  F0D1         	movff	___fldiv@new_exp,___fldiv@bexp
  7902                           
  7903                           ; BSR set to: 0
  7904  0110F8  0100               	movlb	0	; () banked
  7905  0110FA  A1D1               	btfss	___fldiv@bexp& (0+255),0,b
  7906  0110FC  D003               	goto	l3082
  7907                           
  7908                           ; BSR set to: 0
  7909  0110FE  0100               	movlb	0	; () banked
  7910  011100  8FBC               	bsf	(___fldiv@b+2)& (0+255),7,b
  7911  011102  D002               	goto	l3083
  7912  011104                     l3082:
  7913                           
  7914                           ; BSR set to: 0
  7915                           
  7916                           ; BSR set to: 0
  7917  011104  0100               	movlb	0	; () banked
  7918  011106  9FBC               	bcf	(___fldiv@b+2)& (0+255),7,b
  7919  011108                     l3083:
  7920                           
  7921                           ; BSR set to: 0
  7922                           
  7923                           ; BSR set to: 0
  7924  011108  0100               	movlb	0	; () banked
  7925  01110A  90D8               	bcf	status,0,c
  7926  01110C  31D1               	rrcf	___fldiv@bexp& (0+255),w,b
  7927  01110E  0100               	movlb	0	; () banked
  7928  011110  6FBD               	movwf	(___fldiv@b+3)& (0+255),b
  7929                           
  7930                           ; BSR set to: 0
  7931  011112  0100               	movlb	0	; () banked
  7932  011114  51C6               	movf	___fldiv@sign& (0+255),w,b
  7933  011116  0100               	movlb	0	; () banked
  7934  011118  13BD               	iorwf	(___fldiv@b+3)& (0+255),f,b
  7935                           
  7936                           ; BSR set to: 0
  7937  01111A  C0BA  F0BA         	movff	___fldiv@b,?___fldiv
  7938  01111E  C0BB  F0BB         	movff	___fldiv@b+1,?___fldiv+1
  7939  011122  C0BC  F0BC         	movff	___fldiv@b+2,?___fldiv+2
  7940  011126  C0BD  F0BD         	movff	___fldiv@b+3,?___fldiv+3
  7941  01112A  0012               	return	
  7942  01112C                     __end_of___fldiv:
  7943                           	opt stack 0
  7944                           tblptru	equ	0xFF8
  7945                           tblptrh	equ	0xFF7
  7946                           tblptrl	equ	0xFF6
  7947                           tablat	equ	0xFF5
  7948                           prodh	equ	0xFF4
  7949                           prodl	equ	0xFF3
  7950                           postinc0	equ	0xFEE
  7951                           wreg	equ	0xFE8
  7952                           indf1	equ	0xFE7
  7953                           postdec1	equ	0xFE5
  7954                           fsr1h	equ	0xFE2
  7955                           fsr1l	equ	0xFE1
  7956                           indf2	equ	0xFDF
  7957                           postinc2	equ	0xFDE
  7958                           postdec2	equ	0xFDD
  7959                           plusw2	equ	0xFDB
  7960                           fsr2h	equ	0xFDA
  7961                           fsr2l	equ	0xFD9
  7962                           status	equ	0xFD8
  7963                           
  7964 ;; *************** function _init *****************
  7965 ;; Defined at:
  7966 ;;		line 499 in file "main.c"
  7967 ;; Parameters:    Size  Location     Type
  7968 ;;		None
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;		None
  7971 ;; Return value:  Size  Location     Type
  7972 ;;                  1    wreg      void 
  7973 ;; Registers used:
  7974 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7975 ;; Tracked objects:
  7976 ;;		On entry : 0/0
  7977 ;;		On exit  : 0/0
  7978 ;;		Unchanged: 0/0
  7979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7984 ;;Total ram usage:        0 bytes
  7985 ;; Hardware stack levels used:    1
  7986 ;; Hardware stack levels required when called:   17
  7987 ;; This function calls:
  7988 ;;		_ADC_Init
  7989 ;;		_ADC_Start
  7990 ;;		_Console_Init
  7991 ;;		_HMI_Init
  7992 ;;		_ISR_Enable
  7993 ;;		_LCD_Init
  7994 ;;		_MXK_BlockSwitchTo
  7995 ;;		_MXK_Dequeue
  7996 ;;		_MXK_Init
  7997 ;;		_MXK_Release
  7998 ;;		_Motor_Init
  7999 ;;		_eusart_init
  8000 ;;		_irobot_init
  8001 ;;		_irobot_init_song_0
  8002 ;; This function is called by:
  8003 ;;		_main
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           
  8007                           	psect	text19
  8008  013A12                     __ptext19:
  8009                           	opt stack 0
  8010  013A12                     _init:
  8011                           	opt stack 13
  8012                           
  8013                           ;main.c: 504: MXK_Init();
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;incstack = 0
  8017  013A12  EC82  F091         	call	_MXK_Init	;wreg free
  8018                           
  8019                           ;main.c: 505: ISR_Enable();
  8020  013A16  ECD5  F0A5         	call	_ISR_Enable	;wreg free
  8021                           
  8022                           ;main.c: 508: if (MXK_BlockSwitchTo(eMXK_HMI)) {
  8023  013A1A  0E01               	movlw	1
  8024  013A1C  EC8F  F0A3         	call	_MXK_BlockSwitchTo
  8025  013A20  0900               	iorlw	0
  8026  013A22  B4D8               	btfsc	status,2,c
  8027  013A24  D00C               	goto	l2497
  8028                           
  8029                           ;main.c: 509: Console_Init();
  8030  013A26  EC97  F09D         	call	_Console_Init	;wreg free
  8031                           
  8032                           ;main.c: 510: HMI_Init();
  8033  013A2A  ECF5  F08D         	call	_HMI_Init	;wreg free
  8034                           
  8035                           ;main.c: 511: LCD_Init();
  8036  013A2E  EC42  F092         	call	_LCD_Init	;wreg free
  8037                           
  8038                           ;main.c: 512: if (MXK_Release())
  8039  013A32  EC4B  F0A5         	call	_MXK_Release	;wreg free
  8040  013A36  0900               	iorlw	0
  8041  013A38  A4D8               	btfss	status,2,c
  8042                           
  8043                           ;main.c: 513: MXK_Dequeue();
  8044  013A3A  EC70  F0A3         	call	_MXK_Dequeue	;wreg free
  8045  013A3E                     l2497:
  8046                           
  8047                           ;main.c: 514: }
  8048                           ;main.c: 517: if (MXK_BlockSwitchTo(eMXK_Motor)) {
  8049  013A3E  0E08               	movlw	8
  8050  013A40  EC8F  F0A3         	call	_MXK_BlockSwitchTo
  8051  013A44  0900               	iorlw	0
  8052  013A46  B4D8               	btfsc	status,2,c
  8053  013A48  D013               	goto	l2499
  8054                           
  8055                           ;main.c: 518: Motor_Init(&Stepper, 0b1000);
  8056  013A4A  0ED3               	movlw	low _Stepper
  8057  013A4C  0100               	movlb	0	; () banked
  8058  013A4E  6FE7               	movwf	Motor_Init@pMotor& (0+255),b
  8059  013A50  0E01               	movlw	high _Stepper
  8060  013A52  0100               	movlb	0	; () banked
  8061  013A54  6FE8               	movwf	(Motor_Init@pMotor+1)& (0+255),b
  8062  013A56  0E00               	movlw	0
  8063  013A58  0100               	movlb	0	; () banked
  8064  013A5A  6FEA               	movwf	(Motor_Init@pAddress+1)& (0+255),b
  8065  013A5C  0E08               	movlw	8
  8066  013A5E  6FE9               	movwf	Motor_Init@pAddress& (0+255),b
  8067  013A60  ECBD  F097         	call	_Motor_Init	;wreg free
  8068                           
  8069                           ;main.c: 519: if (MXK_Release())
  8070  013A64  EC4B  F0A5         	call	_MXK_Release	;wreg free
  8071  013A68  0900               	iorlw	0
  8072  013A6A  A4D8               	btfss	status,2,c
  8073                           
  8074                           ;main.c: 520: MXK_Dequeue();
  8075  013A6C  EC70  F0A3         	call	_MXK_Dequeue	;wreg free
  8076  013A70                     l2499:
  8077                           
  8078                           ;main.c: 521: }
  8079                           ;main.c: 524: ADC_Init(&ADC_AN0, eADC_Ch0);
  8080  013A70  0EB5               	movlw	low _ADC_AN0
  8081  013A72  0100               	movlb	0	; () banked
  8082  013A74  6FBE               	movwf	ADC_Init@pInput& (0+255),b
  8083  013A76  0E00               	movlw	high _ADC_AN0
  8084  013A78  0100               	movlb	0	; () banked
  8085  013A7A  6FBF               	movwf	(ADC_Init@pInput+1)& (0+255),b
  8086  013A7C  0E00               	movlw	0
  8087  013A7E  0100               	movlb	0	; () banked
  8088  013A80  6FC0               	movwf	ADC_Init@pChannel& (0+255),b
  8089  013A82  EC9B  F09E         	call	_ADC_Init	;wreg free
  8090                           
  8091                           ;main.c: 525: float ADC_Voltage(ADCPtr plnput);
  8092                           ;main.c: 526: ADC_Start(&ADC_AN0);
  8093  013A86  0EB5               	movlw	low _ADC_AN0
  8094  013A88  0100               	movlb	0	; () banked
  8095  013A8A  6FBC               	movwf	ADC_Start@pInput& (0+255),b
  8096  013A8C  0E00               	movlw	high _ADC_AN0
  8097  013A8E  0100               	movlb	0	; () banked
  8098  013A90  6FBD               	movwf	(ADC_Start@pInput+1)& (0+255),b
  8099  013A92  ECDA  F09D         	call	_ADC_Start	;wreg free
  8100                           
  8101                           ;main.c: 529: eusart_init();
  8102  013A96  ECE2  F0A4         	call	_eusart_init	;wreg free
  8103                           
  8104                           ;main.c: 530: irobot_init();
  8105  013A9A  EC9A  F0A5         	call	_irobot_init	;wreg free
  8106                           
  8107                           ;main.c: 533: irobot_init_song_0();
  8108  013A9E  ECD2  F0A4         	call	_irobot_init_song_0	;wreg free
  8109  013AA2  0012               	return		;funcret
  8110  013AA4                     __end_of_init:
  8111                           	opt stack 0
  8112                           tblptru	equ	0xFF8
  8113                           tblptrh	equ	0xFF7
  8114                           tblptrl	equ	0xFF6
  8115                           tablat	equ	0xFF5
  8116                           prodh	equ	0xFF4
  8117                           prodl	equ	0xFF3
  8118                           postinc0	equ	0xFEE
  8119                           wreg	equ	0xFE8
  8120                           indf1	equ	0xFE7
  8121                           postdec1	equ	0xFE5
  8122                           fsr1h	equ	0xFE2
  8123                           fsr1l	equ	0xFE1
  8124                           indf2	equ	0xFDF
  8125                           postinc2	equ	0xFDE
  8126                           postdec2	equ	0xFDD
  8127                           plusw2	equ	0xFDB
  8128                           fsr2h	equ	0xFDA
  8129                           fsr2l	equ	0xFD9
  8130                           status	equ	0xFD8
  8131                           
  8132 ;; *************** function _irobot_init_song_0 *****************
  8133 ;; Defined at:
  8134 ;;		line 254 in file "Library/iRobotSerial.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;		None
  8137 ;; Auto vars:     Size  Location     Type
  8138 ;;		None
  8139 ;; Return value:  Size  Location     Type
  8140 ;;                  1    wreg      void 
  8141 ;; Registers used:
  8142 ;;		wreg, cstack
  8143 ;; Tracked objects:
  8144 ;;		On entry : 0/0
  8145 ;;		On exit  : 0/0
  8146 ;;		Unchanged: 0/0
  8147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8151 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8152 ;;Total ram usage:        0 bytes
  8153 ;; Hardware stack levels used:    1
  8154 ;; Hardware stack levels required when called:    8
  8155 ;; This function calls:
  8156 ;;		_eusart_putch
  8157 ;; This function is called by:
  8158 ;;		_init
  8159 ;; This function uses a non-reentrant model
  8160 ;;
  8161                           
  8162                           	psect	text20
  8163  0149A4                     __ptext20:
  8164                           	opt stack 0
  8165  0149A4                     _irobot_init_song_0:
  8166                           	opt stack 21
  8167                           
  8168                           ;iRobotSerial.c: 255: eusart_putch(iR_SONG_INIT);
  8169                           
  8170                           ;incstack = 0
  8171  0149A4  0E8C               	movlw	140
  8172  0149A6  ECA1  F0A5         	call	_eusart_putch
  8173                           
  8174                           ;iRobotSerial.c: 256: eusart_putch(0);
  8175  0149AA  0E00               	movlw	0
  8176  0149AC  ECA1  F0A5         	call	_eusart_putch
  8177                           
  8178                           ;iRobotSerial.c: 257: eusart_putch(1);
  8179  0149B0  0E01               	movlw	1
  8180  0149B2  ECA1  F0A5         	call	_eusart_putch
  8181                           
  8182                           ;iRobotSerial.c: 258: eusart_putch(70);
  8183  0149B6  0E46               	movlw	70
  8184  0149B8  ECA1  F0A5         	call	_eusart_putch
  8185                           
  8186                           ;iRobotSerial.c: 259: eusart_putch(64);
  8187  0149BC  0E40               	movlw	64
  8188  0149BE  ECA1  F0A5         	call	_eusart_putch
  8189  0149C2  0012               	return		;funcret
  8190  0149C4                     __end_of_irobot_init_song_0:
  8191                           	opt stack 0
  8192                           tblptru	equ	0xFF8
  8193                           tblptrh	equ	0xFF7
  8194                           tblptrl	equ	0xFF6
  8195                           tablat	equ	0xFF5
  8196                           prodh	equ	0xFF4
  8197                           prodl	equ	0xFF3
  8198                           postinc0	equ	0xFEE
  8199                           wreg	equ	0xFE8
  8200                           indf1	equ	0xFE7
  8201                           postdec1	equ	0xFE5
  8202                           fsr1h	equ	0xFE2
  8203                           fsr1l	equ	0xFE1
  8204                           indf2	equ	0xFDF
  8205                           postinc2	equ	0xFDE
  8206                           postdec2	equ	0xFDD
  8207                           plusw2	equ	0xFDB
  8208                           fsr2h	equ	0xFDA
  8209                           fsr2l	equ	0xFD9
  8210                           status	equ	0xFD8
  8211                           
  8212 ;; *************** function _irobot_init *****************
  8213 ;; Defined at:
  8214 ;;		line 200 in file "Library/iRobotSerial.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  1    wreg      void 
  8221 ;; Registers used:
  8222 ;;		wreg, cstack
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8232 ;;Total ram usage:        0 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:    8
  8235 ;; This function calls:
  8236 ;;		_eusart_putch
  8237 ;; This function is called by:
  8238 ;;		_init
  8239 ;; This function uses a non-reentrant model
  8240 ;;
  8241                           
  8242                           	psect	text21
  8243  014B34                     __ptext21:
  8244                           	opt stack 0
  8245  014B34                     _irobot_init:
  8246                           	opt stack 21
  8247                           
  8248                           ;iRobotSerial.c: 201: eusart_putch(iR_START);
  8249                           
  8250                           ;incstack = 0
  8251  014B34  0E80               	movlw	128
  8252  014B36  ECA1  F0A5         	call	_eusart_putch
  8253                           
  8254                           ;iRobotSerial.c: 202: eusart_putch(iR_FULL_MODE);
  8255  014B3A  0E84               	movlw	132
  8256  014B3C  ECA1  F0A5         	call	_eusart_putch
  8257  014B40  0012               	return		;funcret
  8258  014B42                     __end_of_irobot_init:
  8259                           	opt stack 0
  8260                           tblptru	equ	0xFF8
  8261                           tblptrh	equ	0xFF7
  8262                           tblptrl	equ	0xFF6
  8263                           tablat	equ	0xFF5
  8264                           prodh	equ	0xFF4
  8265                           prodl	equ	0xFF3
  8266                           postinc0	equ	0xFEE
  8267                           wreg	equ	0xFE8
  8268                           indf1	equ	0xFE7
  8269                           postdec1	equ	0xFE5
  8270                           fsr1h	equ	0xFE2
  8271                           fsr1l	equ	0xFE1
  8272                           indf2	equ	0xFDF
  8273                           postinc2	equ	0xFDE
  8274                           postdec2	equ	0xFDD
  8275                           plusw2	equ	0xFDB
  8276                           fsr2h	equ	0xFDA
  8277                           fsr2l	equ	0xFD9
  8278                           status	equ	0xFD8
  8279                           
  8280 ;; *************** function _eusart_putch *****************
  8281 ;; Defined at:
  8282 ;;		line 122 in file "Library/iRobotSerial.c"
  8283 ;; Parameters:    Size  Location     Type
  8284 ;;  eusartSendCh    1    wreg     unsigned char 
  8285 ;; Auto vars:     Size  Location     Type
  8286 ;;  eusartSendCh    1    0[BANK0 ] unsigned char 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;                  1    wreg      void 
  8289 ;; Registers used:
  8290 ;;		wreg
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8297 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;Total ram usage:        1 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    7
  8303 ;; This function calls:
  8304 ;;		Nothing
  8305 ;; This function is called by:
  8306 ;;		_irobot_init
  8307 ;;		_irobot_init_song_0
  8308 ;;		_irobot_query_and_update
  8309 ;;		_irobot_script_play
  8310 ;;		_irobot_move
  8311 ;;		_irobot_leds
  8312 ;;		_irobot_song_play
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text22
  8317  014B42                     __ptext22:
  8318                           	opt stack 0
  8319  014B42                     _eusart_putch:
  8320                           	opt stack 21
  8321                           
  8322                           ;incstack = 0
  8323                           ;eusart_putch@eusartSendChar stored from wreg
  8324  014B42  0100               	movlb	0	; () banked
  8325  014B44  6FBA               	movwf	eusart_putch@eusartSendChar& (0+255),b
  8326  014B46                     
  8327                           ;iRobotSerial.c: 123: while (!TXSTA1bits.TRMT) {};
  8328  014B46  A2AD               	btfss	4013,1,c	;volatile
  8329  014B48  D7FE               	goto	l13958
  8330                           
  8331                           ;iRobotSerial.c: 124: TXREG1 = eusartSendChar;
  8332  014B4A  C0BA  FFAE         	movff	eusart_putch@eusartSendChar,4014	;volatile
  8333  014B4E  0012               	return		;funcret
  8334  014B50                     __end_of_eusart_putch:
  8335                           	opt stack 0
  8336                           tblptru	equ	0xFF8
  8337                           tblptrh	equ	0xFF7
  8338                           tblptrl	equ	0xFF6
  8339                           tablat	equ	0xFF5
  8340                           prodh	equ	0xFF4
  8341                           prodl	equ	0xFF3
  8342                           postinc0	equ	0xFEE
  8343                           wreg	equ	0xFE8
  8344                           indf1	equ	0xFE7
  8345                           postdec1	equ	0xFE5
  8346                           fsr1h	equ	0xFE2
  8347                           fsr1l	equ	0xFE1
  8348                           indf2	equ	0xFDF
  8349                           postinc2	equ	0xFDE
  8350                           postdec2	equ	0xFDD
  8351                           plusw2	equ	0xFDB
  8352                           fsr2h	equ	0xFDA
  8353                           fsr2l	equ	0xFD9
  8354                           status	equ	0xFD8
  8355                           
  8356 ;; *************** function _eusart_init *****************
  8357 ;; Defined at:
  8358 ;;		line 105 in file "Library/iRobotSerial.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;		None
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;		None
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      void 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8376 ;;Total ram usage:        0 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    7
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_init
  8383 ;; This function uses a non-reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text23
  8387  0149C4                     __ptext23:
  8388                           	opt stack 0
  8389  0149C4                     _eusart_init:
  8390                           	opt stack 22
  8391                           
  8392                           ;iRobotSerial.c: 106: TRISCbits.TRISC6 = 0;
  8393                           
  8394                           ;incstack = 0
  8395  0149C4  9C94               	bcf	3988,6,c	;volatile
  8396                           
  8397                           ;iRobotSerial.c: 107: TRISCbits.TRISC7 = 1;
  8398  0149C6  8E94               	bsf	3988,7,c	;volatile
  8399                           
  8400                           ;iRobotSerial.c: 109: TXSTA1 = 0b00100100;
  8401  0149C8  0E24               	movlw	36
  8402  0149CA  6EAD               	movwf	4013,c	;volatile
  8403                           
  8404                           ;iRobotSerial.c: 110: RCSTA1 = 0b10011000;
  8405  0149CC  0E98               	movlw	152
  8406  0149CE  6EAC               	movwf	4012,c	;volatile
  8407                           
  8408                           ;iRobotSerial.c: 112: BAUDCON1bits.DTRXP = 0;
  8409  0149D0  9A7E               	bcf	3966,5,c	;volatile
  8410                           
  8411                           ;iRobotSerial.c: 113: BAUDCON1bits.SCKP = 0;
  8412  0149D2  987E               	bcf	3966,4,c	;volatile
  8413                           
  8414                           ;iRobotSerial.c: 114: BAUDCON1bits.WUE = 0;
  8415  0149D4  927E               	bcf	3966,1,c	;volatile
  8416                           
  8417                           ;iRobotSerial.c: 115: BAUDCON1bits.ABDEN = 0;
  8418  0149D6  907E               	bcf	3966,0,c	;volatile
  8419                           
  8420                           ;iRobotSerial.c: 117: TXSTA1bits.BRGH = 1;
  8421  0149D8  84AD               	bsf	4013,2,c	;volatile
  8422                           
  8423                           ;iRobotSerial.c: 118: BAUDCON1bits.BRG16 = 0;
  8424  0149DA  967E               	bcf	3966,3,c	;volatile
  8425                           
  8426                           ;iRobotSerial.c: 119: SPBRG1 = 51;
  8427  0149DC  0E33               	movlw	51
  8428  0149DE  6EB0               	movwf	4016,c	;volatile
  8429  0149E0  0012               	return		;funcret
  8430  0149E2                     __end_of_eusart_init:
  8431                           	opt stack 0
  8432                           tblptru	equ	0xFF8
  8433                           tblptrh	equ	0xFF7
  8434                           tblptrl	equ	0xFF6
  8435                           tablat	equ	0xFF5
  8436                           prodh	equ	0xFF4
  8437                           prodl	equ	0xFF3
  8438                           postinc0	equ	0xFEE
  8439                           wreg	equ	0xFE8
  8440                           indf1	equ	0xFE7
  8441                           postdec1	equ	0xFE5
  8442                           fsr1h	equ	0xFE2
  8443                           fsr1l	equ	0xFE1
  8444                           indf2	equ	0xFDF
  8445                           postinc2	equ	0xFDE
  8446                           postdec2	equ	0xFDD
  8447                           plusw2	equ	0xFDB
  8448                           fsr2h	equ	0xFDA
  8449                           fsr2l	equ	0xFD9
  8450                           status	equ	0xFD8
  8451                           
  8452 ;; *************** function _Motor_Init *****************
  8453 ;; Defined at:
  8454 ;;		line 26 in file "Library/Motor.c"
  8455 ;; Parameters:    Size  Location     Type
  8456 ;;  pMotor          2   45[BANK0 ] PTR struct Motor
  8457 ;;		 -> Stepper(6), 
  8458 ;;  pAddress        2   47[BANK0 ] unsigned short 
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;		None
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      void 
  8463 ;; Registers used:
  8464 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8470 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;Total ram usage:        4 bytes
  8475 ;; Hardware stack levels used:    1
  8476 ;; Hardware stack levels required when called:   12
  8477 ;; This function calls:
  8478 ;;		_Port_SetPin
  8479 ;;		_Port_SetPinType
  8480 ;;		_Timer0_Init
  8481 ;; This function is called by:
  8482 ;;		_init
  8483 ;; This function uses a non-reentrant model
  8484 ;;
  8485                           
  8486                           	psect	text24
  8487  012F7A                     __ptext24:
  8488                           	opt stack 0
  8489  012F7A                     _Motor_Init:
  8490                           	opt stack 17
  8491                           
  8492                           ;Motor.c: 28: pMotor->mDelta = 0;
  8493                           
  8494                           ;incstack = 0
  8495  012F7A  C0E7  FFD9         	movff	Motor_Init@pMotor,fsr2l
  8496  012F7E  C0E8  FFDA         	movff	Motor_Init@pMotor+1,fsr2h
  8497  012F82  0E00               	movlw	0
  8498  012F84  6EDE               	movwf	postinc2,c
  8499  012F86  0E00               	movlw	0
  8500  012F88  6EDD               	movwf	postdec2,c
  8501                           
  8502                           ;Motor.c: 29: pMotor->mFrequency = 0;
  8503  012F8A  0100               	movlb	0	; () banked
  8504  012F8C  EE20 F002          	lfsr	2,2
  8505  012F90  51E7               	movf	Motor_Init@pMotor& (0+255),w,b
  8506  012F92  26D9               	addwf	fsr2l,f,c
  8507  012F94  51E8               	movf	(Motor_Init@pMotor+1)& (0+255),w,b
  8508  012F96  22DA               	addwfc	fsr2h,f,c
  8509  012F98  0E00               	movlw	0
  8510  012F9A  6EDE               	movwf	postinc2,c
  8511  012F9C  0E00               	movlw	0
  8512  012F9E  6EDD               	movwf	postdec2,c
  8513                           
  8514                           ; BSR set to: 0
  8515                           ;Motor.c: 30: pMotor->mAddress = pAddress;
  8516  012FA0  0100               	movlb	0	; () banked
  8517  012FA2  EE20 F004          	lfsr	2,4
  8518  012FA6  51E7               	movf	Motor_Init@pMotor& (0+255),w,b
  8519  012FA8  26D9               	addwf	fsr2l,f,c
  8520  012FAA  51E8               	movf	(Motor_Init@pMotor+1)& (0+255),w,b
  8521  012FAC  22DA               	addwfc	fsr2h,f,c
  8522  012FAE  C0E9  FFDE         	movff	Motor_Init@pAddress,postinc2
  8523  012FB2  C0EA  FFDD         	movff	Motor_Init@pAddress+1,postdec2
  8524                           
  8525                           ; BSR set to: 0
  8526                           ;Motor.c: 33: Port_SetPinType (&PortE, eP0, eTypeOutputPushPull);
  8527  012FB6  0E90               	movlw	low _PortE
  8528  012FB8  0100               	movlb	0	; () banked
  8529  012FBA  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
  8530  012FBC  0E00               	movlw	high _PortE
  8531  012FBE  0100               	movlb	0	; () banked
  8532  012FC0  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  8533  012FC2  0E00               	movlw	0
  8534  012FC4  0100               	movlb	0	; () banked
  8535  012FC6  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
  8536  012FC8  0E03               	movlw	3
  8537  012FCA  0100               	movlb	0	; () banked
  8538  012FCC  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
  8539  012FCE  ECD9  F08F         	call	_Port_SetPinType	;wreg free
  8540                           
  8541                           ;Motor.c: 34: Port_SetPinType (&PortE, eP1, eTypeOutputPushPull);
  8542  012FD2  0E90               	movlw	low _PortE
  8543  012FD4  0100               	movlb	0	; () banked
  8544  012FD6  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
  8545  012FD8  0E00               	movlw	high _PortE
  8546  012FDA  0100               	movlb	0	; () banked
  8547  012FDC  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  8548  012FDE  0E01               	movlw	1
  8549  012FE0  0100               	movlb	0	; () banked
  8550  012FE2  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
  8551  012FE4  0E03               	movlw	3
  8552  012FE6  0100               	movlb	0	; () banked
  8553  012FE8  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
  8554  012FEA  ECD9  F08F         	call	_Port_SetPinType	;wreg free
  8555                           
  8556                           ;Motor.c: 35: Port_SetPin (&PortE, eP0, 0);
  8557  012FEE  0E90               	movlw	low _PortE
  8558  012FF0  0100               	movlb	0	; () banked
  8559  012FF2  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
  8560  012FF4  0E00               	movlw	high _PortE
  8561  012FF6  0100               	movlb	0	; () banked
  8562  012FF8  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  8563  012FFA  0E00               	movlw	0
  8564  012FFC  0100               	movlb	0	; () banked
  8565  012FFE  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
  8566  013000  0E00               	movlw	0
  8567  013002  0100               	movlb	0	; () banked
  8568  013004  6FCC               	movwf	Port_SetPin@pValue& (0+255),b
  8569  013006  ECF5  F098         	call	_Port_SetPin	;wreg free
  8570                           
  8571                           ;Motor.c: 36: Port_SetPin (&PortE, eP1, 0);
  8572  01300A  0E90               	movlw	low _PortE
  8573  01300C  0100               	movlb	0	; () banked
  8574  01300E  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
  8575  013010  0E00               	movlw	high _PortE
  8576  013012  0100               	movlb	0	; () banked
  8577  013014  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  8578  013016  0E01               	movlw	1
  8579  013018  0100               	movlb	0	; () banked
  8580  01301A  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
  8581  01301C  0E00               	movlw	0
  8582  01301E  0100               	movlb	0	; () banked
  8583  013020  6FCC               	movwf	Port_SetPin@pValue& (0+255),b
  8584  013022  ECF5  F098         	call	_Port_SetPin	;wreg free
  8585                           
  8586                           ;Motor.c: 38: lStepFunction = Motor_Step;
  8587  013026  0EBA               	movlw	low _Motor_Step
  8588  013028  0100               	movlb	0	; () banked
  8589  01302A  6F66               	movwf	_lStepFunction& (0+255),b
  8590  01302C  0E28               	movlw	high _Motor_Step
  8591  01302E  0100               	movlb	0	; () banked
  8592  013030  6F67               	movwf	(_lStepFunction+1)& (0+255),b
  8593  013032  0E01               	movlw	low (_Motor_Step shr (0+16))
  8594  013034  0100               	movlb	0	; () banked
  8595  013036  6F68               	movwf	(_lStepFunction+2)& (0+255),b
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;Motor.c: 39: Timer0_Init(1000);
  8599  013038  0EE8               	movlw	232
  8600  01303A  0100               	movlb	0	; () banked
  8601  01303C  6FC7               	movwf	Timer0_Init@pFrequency& (0+255),b
  8602  01303E  0E03               	movlw	3
  8603  013040  6FC8               	movwf	(Timer0_Init@pFrequency+1)& (0+255),b
  8604  013042  0E00               	movlw	0
  8605  013044  6FC9               	movwf	(Timer0_Init@pFrequency+2)& (0+255),b
  8606  013046  0E00               	movlw	0
  8607  013048  6FCA               	movwf	(Timer0_Init@pFrequency+3)& (0+255),b
  8608  01304A  ECFB  F092         	call	_Timer0_Init	;wreg free
  8609  01304E  0012               	return		;funcret
  8610  013050                     __end_of_Motor_Init:
  8611                           	opt stack 0
  8612                           tblptru	equ	0xFF8
  8613                           tblptrh	equ	0xFF7
  8614                           tblptrl	equ	0xFF6
  8615                           tablat	equ	0xFF5
  8616                           prodh	equ	0xFF4
  8617                           prodl	equ	0xFF3
  8618                           postinc0	equ	0xFEE
  8619                           wreg	equ	0xFE8
  8620                           indf1	equ	0xFE7
  8621                           postdec1	equ	0xFE5
  8622                           fsr1h	equ	0xFE2
  8623                           fsr1l	equ	0xFE1
  8624                           indf2	equ	0xFDF
  8625                           postinc2	equ	0xFDE
  8626                           postdec2	equ	0xFDD
  8627                           plusw2	equ	0xFDB
  8628                           fsr2h	equ	0xFDA
  8629                           fsr2l	equ	0xFD9
  8630                           status	equ	0xFD8
  8631                           
  8632 ;; *************** function _Timer0_Init *****************
  8633 ;; Defined at:
  8634 ;;		line 25 in file "Library/Timer0.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  pFrequency      4   13[BANK0 ] unsigned long 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;  DIVIDE          4   23[BANK0 ] unsigned long 
  8639 ;;  pCPUClock       4   19[BANK0 ] unsigned long 
  8640 ;; Return value:  Size  Location     Type
  8641 ;;                  1    wreg      void 
  8642 ;; Registers used:
  8643 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8644 ;; Tracked objects:
  8645 ;;		On entry : 0/0
  8646 ;;		On exit  : 0/0
  8647 ;;		Unchanged: 0/0
  8648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8649 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8650 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8651 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8652 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8653 ;;Total ram usage:       14 bytes
  8654 ;; Hardware stack levels used:    1
  8655 ;; Hardware stack levels required when called:    8
  8656 ;; This function calls:
  8657 ;;		_Timer0_Clear
  8658 ;;		___lldiv
  8659 ;; This function is called by:
  8660 ;;		_Motor_Init
  8661 ;;		_Motor_Speed
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text25
  8666  0125F6                     __ptext25:
  8667                           	opt stack 0
  8668  0125F6                     _Timer0_Init:
  8669                           	opt stack 20
  8670                           
  8671                           ;Timer0.c: 27: UINT32 pCPUClock = (48*1000000L)/8;
  8672                           
  8673                           ;incstack = 0
  8674  0125F6  0E80               	movlw	128
  8675  0125F8  0100               	movlb	0	; () banked
  8676  0125FA  6FCD               	movwf	Timer0_Init@pCPUClock& (0+255),b
  8677  0125FC  0E8D               	movlw	141
  8678  0125FE  6FCE               	movwf	(Timer0_Init@pCPUClock+1)& (0+255),b
  8679  012600  0E5B               	movlw	91
  8680  012602  6FCF               	movwf	(Timer0_Init@pCPUClock+2)& (0+255),b
  8681  012604  0E00               	movlw	0
  8682  012606  6FD0               	movwf	(Timer0_Init@pCPUClock+3)& (0+255),b
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;Timer0.c: 29: static const UINT16 PRESCALE[] = {2, 4, 8, 16, 32, 64 ,128, 256};
  8686                           ;Timer0.c: 31: static UINT8 PRE = 0;
  8687                           ;Timer0.c: 32: static UINT32 DIV = 0;
  8688                           ;Timer0.c: 34: UINT32 DIVIDE;
  8689                           ;Timer0.c: 37: T0CONbits.TMR0ON = 0;
  8690  012608  9ED5               	bcf	4053,7,c	;volatile
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;Timer0.c: 38: if (pFrequency == 0)
  8694  01260A  0100               	movlb	0	; () banked
  8695  01260C  51C7               	movf	Timer0_Init@pFrequency& (0+255),w,b
  8696  01260E  0100               	movlb	0	; () banked
  8697  012610  11C8               	iorwf	(Timer0_Init@pFrequency+1)& (0+255),w,b
  8698  012612  0100               	movlb	0	; () banked
  8699  012614  11C9               	iorwf	(Timer0_Init@pFrequency+2)& (0+255),w,b
  8700  012616  0100               	movlb	0	; () banked
  8701  012618  11CA               	iorwf	(Timer0_Init@pFrequency+3)& (0+255),w,b
  8702  01261A  B4D8               	btfsc	status,2,c
  8703  01261C  0012               	return	
  8704                           
  8705                           ; BSR set to: 0
  8706                           ;Timer0.c: 41: T0CONbits.PSA = 0;
  8707                           
  8708                           ; BSR set to: 0
  8709                           ;Timer0.c: 39: return;
  8710  01261E  96D5               	bcf	4053,3,c	;volatile
  8711                           
  8712                           ;Timer0.c: 42: T0CONbits.T08BIT = 0;
  8713  012620  9CD5               	bcf	4053,6,c	;volatile
  8714                           
  8715                           ;Timer0.c: 43: T0CONbits.T0CS = 0;
  8716  012622  9AD5               	bcf	4053,5,c	;volatile
  8717                           
  8718                           ;Timer0.c: 44: T0CONbits.T0SE = 0;
  8719  012624  98D5               	bcf	4053,4,c	;volatile
  8720                           
  8721                           ; BSR set to: 0
  8722                           ;Timer0.c: 46: DIVIDE = pCPUClock / pFrequency;
  8723  012626  C0CD  F0BA         	movff	Timer0_Init@pCPUClock,___lldiv@dividend
  8724  01262A  C0CE  F0BB         	movff	Timer0_Init@pCPUClock+1,___lldiv@dividend+1
  8725  01262E  C0CF  F0BC         	movff	Timer0_Init@pCPUClock+2,___lldiv@dividend+2
  8726  012632  C0D0  F0BD         	movff	Timer0_Init@pCPUClock+3,___lldiv@dividend+3
  8727  012636  C0C7  F0BE         	movff	Timer0_Init@pFrequency,___lldiv@divisor
  8728  01263A  C0C8  F0BF         	movff	Timer0_Init@pFrequency+1,___lldiv@divisor+1
  8729  01263E  C0C9  F0C0         	movff	Timer0_Init@pFrequency+2,___lldiv@divisor+2
  8730  012642  C0CA  F0C1         	movff	Timer0_Init@pFrequency+3,___lldiv@divisor+3
  8731  012646  ECB6  F099         	call	___lldiv	;wreg free
  8732  01264A  C0BA  F0D1         	movff	?___lldiv,Timer0_Init@DIVIDE
  8733  01264E  C0BB  F0D2         	movff	?___lldiv+1,Timer0_Init@DIVIDE+1
  8734  012652  C0BC  F0D3         	movff	?___lldiv+2,Timer0_Init@DIVIDE+2
  8735  012656  C0BD  F0D4         	movff	?___lldiv+3,Timer0_Init@DIVIDE+3
  8736                           
  8737                           ;Timer0.c: 49: while ((DIVIDE/PRESCALE[INDEX]) > 0xFFFF)
  8738  01265A  D00C               	goto	l1787
  8739  01265C                     l13874:
  8740                           
  8741                           ;Timer0.c: 50: {
  8742                           ;Timer0.c: 51: INDEX ++;
  8743  01265C  0100               	movlb	0	; () banked
  8744  01265E  2B8E               	incf	_INDEX& (0+255),f,b
  8745                           
  8746                           ; BSR set to: 0
  8747                           ;Timer0.c: 52: if (INDEX >= 3)
  8748  012660  0E02               	movlw	2
  8749  012662  0100               	movlb	0	; () banked
  8750  012664  658E               	cpfsgt	_INDEX& (0+255),b
  8751  012666  D001               	goto	l1785
  8752  012668  D02F               	goto	u10460
  8753  01266A                     l1785:
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;Timer0.c: 56: if (INDEX >= 8)
  8757                           
  8758                           ; BSR set to: 0
  8759  01266A  0E07               	movlw	7
  8760  01266C  0100               	movlb	0	; () banked
  8761  01266E  658E               	cpfsgt	_INDEX& (0+255),b
  8762  012670  D001               	goto	l1787
  8763  012672  0012               	return	
  8764  012674                     l1787:
  8765                           
  8766                           ; BSR set to: 0
  8767                           
  8768                           ; BSR set to: 0
  8769  012674  C0D1  F0BA         	movff	Timer0_Init@DIVIDE,___lldiv@dividend
  8770  012678  C0D2  F0BB         	movff	Timer0_Init@DIVIDE+1,___lldiv@dividend+1
  8771  01267C  C0D3  F0BC         	movff	Timer0_Init@DIVIDE+2,___lldiv@dividend+2
  8772  012680  C0D4  F0BD         	movff	Timer0_Init@DIVIDE+3,___lldiv@dividend+3
  8773  012684  0100               	movlb	0	; () banked
  8774  012686  518E               	movf	_INDEX& (0+255),w,b
  8775  012688  0D02               	mullw	2
  8776  01268A  0EA5               	movlw	low Timer0_Init@PRESCALE
  8777  01268C  24F3               	addwf	prodl,w,c
  8778  01268E  6EF6               	movwf	tblptrl,c
  8779  012690  0EFD               	movlw	high Timer0_Init@PRESCALE
  8780  012692  20F4               	addwfc	prodh,w,c
  8781  012694  6EF7               	movwf	tblptrh,c
  8782  012696                     	if	1	;There are 3 active tblptr bytes
  8783  012696  6AF8               	clrf	tblptru,c
  8784  012698  0E00               	movlw	low (__mediumconst shr (0+16))
  8785  01269A  22F8               	addwfc	tblptru,f,c
  8786  01269C                     	endif
  8787  01269C  0009               	tblrd		*+
  8788  01269E  CFF5 F0CB          	movff	tablat,??_Timer0_Init
  8789  0126A2  0009               	tblrd		*+
  8790  0126A4  CFF5 F0CC          	movff	tablat,??_Timer0_Init+1
  8791  0126A8  C0CB  F0BE         	movff	??_Timer0_Init,___lldiv@divisor
  8792  0126AC  C0CC  F0BF         	movff	??_Timer0_Init+1,___lldiv@divisor+1
  8793  0126B0  0100               	movlb	0	; () banked
  8794  0126B2  6BC0               	clrf	(___lldiv@divisor+2)& (0+255),b
  8795  0126B4  6BC1               	clrf	(___lldiv@divisor+3)& (0+255),b
  8796  0126B6  ECB6  F099         	call	___lldiv	;wreg free
  8797  0126BA  0100               	movlb	0	; () banked
  8798  0126BC  51BD               	movf	(?___lldiv+3)& (0+255),w,b
  8799  0126BE  E1CE               	bnz	l13874
  8800  0126C0  0100               	movlb	0	; () banked
  8801  0126C2  05BC               	decf	(?___lldiv+2)& (0+255),w,b
  8802  0126C4  B0D8               	btfsc	status,0,c
  8803  0126C6  D7CA               	goto	l1784
  8804  0126C8                     u10460:
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;Timer0.c: 58: }
  8808                           ;Timer0.c: 62: PRE = PRESCALE[INDEX];
  8809                           
  8810                           ; BSR set to: 0
  8811  0126C8  0100               	movlb	0	; () banked
  8812  0126CA  518E               	movf	_INDEX& (0+255),w,b
  8813  0126CC  0D02               	mullw	2
  8814  0126CE  0EA5               	movlw	low Timer0_Init@PRESCALE
  8815  0126D0  24F3               	addwf	prodl,w,c
  8816  0126D2  6EF6               	movwf	tblptrl,c
  8817  0126D4  0EFD               	movlw	high Timer0_Init@PRESCALE
  8818  0126D6  20F4               	addwfc	prodh,w,c
  8819  0126D8  6EF7               	movwf	tblptrh,c
  8820  0126DA                     	if	1	;There are 3 active tblptr bytes
  8821  0126DA  6AF8               	clrf	tblptru,c
  8822  0126DC  0E00               	movlw	low (__mediumconst shr (0+16))
  8823  0126DE  22F8               	addwfc	tblptru,f,c
  8824  0126E0                     	endif
  8825  0126E0  0008               	tblrd		*
  8826  0126E2  CFF5 F08D          	movff	tablat,Timer0_Init@PRE
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;Timer0.c: 63: DIV = (DIVIDE-1);
  8830  0126E6  0EFF               	movlw	255
  8831  0126E8  0100               	movlb	0	; () banked
  8832  0126EA  25D1               	addwf	Timer0_Init@DIVIDE& (0+255),w,b
  8833  0126EC  0101               	movlb	1	; () banked
  8834  0126EE  6F2A               	movwf	Timer0_Init@DIV& (0+255),b
  8835  0126F0  0EFF               	movlw	255
  8836  0126F2  0100               	movlb	0	; () banked
  8837  0126F4  21D2               	addwfc	(Timer0_Init@DIVIDE+1)& (0+255),w,b
  8838  0126F6  0101               	movlb	1	; () banked
  8839  0126F8  6F2B               	movwf	(Timer0_Init@DIV+1)& (0+255),b
  8840  0126FA  0EFF               	movlw	255
  8841  0126FC  0100               	movlb	0	; () banked
  8842  0126FE  21D3               	addwfc	(Timer0_Init@DIVIDE+2)& (0+255),w,b
  8843  012700  0101               	movlb	1	; () banked
  8844  012702  6F2C               	movwf	(Timer0_Init@DIV+2)& (0+255),b
  8845  012704  0EFF               	movlw	255
  8846  012706  0100               	movlb	0	; () banked
  8847  012708  21D4               	addwfc	(Timer0_Init@DIVIDE+3)& (0+255),w,b
  8848  01270A  0101               	movlb	1	; () banked
  8849  01270C  6F2D               	movwf	(Timer0_Init@DIV+3)& (0+255),b
  8850                           
  8851                           ; BSR set to: 1
  8852                           ;Timer0.c: 65: COUNTER = 0xFFFF-DIV/PRE;
  8853  01270E  C12A  F0BA         	movff	Timer0_Init@DIV,___lldiv@dividend
  8854  012712  C12B  F0BB         	movff	Timer0_Init@DIV+1,___lldiv@dividend+1
  8855  012716  C12C  F0BC         	movff	Timer0_Init@DIV+2,___lldiv@dividend+2
  8856  01271A  C12D  F0BD         	movff	Timer0_Init@DIV+3,___lldiv@dividend+3
  8857  01271E  0100               	movlb	0	; () banked
  8858  012720  518D               	movf	Timer0_Init@PRE& (0+255),w,b
  8859  012722  0100               	movlb	0	; () banked
  8860  012724  6FBE               	movwf	___lldiv@divisor& (0+255),b
  8861  012726  6BBF               	clrf	(___lldiv@divisor+1)& (0+255),b
  8862  012728  6BC0               	clrf	(___lldiv@divisor+2)& (0+255),b
  8863  01272A  6BC1               	clrf	(___lldiv@divisor+3)& (0+255),b
  8864  01272C  ECB6  F099         	call	___lldiv	;wreg free
  8865  012730  0100               	movlb	0	; () banked
  8866  012732  1FBA               	comf	?___lldiv& (0+255),f,b
  8867  012734  0100               	movlb	0	; () banked
  8868  012736  1FBB               	comf	(?___lldiv+1)& (0+255),f,b
  8869  012738  0100               	movlb	0	; () banked
  8870  01273A  4BBA               	infsnz	?___lldiv& (0+255),f,b
  8871  01273C  2BBB               	incf	(?___lldiv+1)& (0+255),f,b
  8872  01273E  0EFF               	movlw	255
  8873  012740  0100               	movlb	0	; () banked
  8874  012742  25BA               	addwf	?___lldiv& (0+255),w,b
  8875  012744  0100               	movlb	0	; () banked
  8876  012746  6F75               	movwf	_COUNTER& (0+255),b
  8877  012748  0EFF               	movlw	255
  8878  01274A  0100               	movlb	0	; () banked
  8879  01274C  21BB               	addwfc	(?___lldiv+1)& (0+255),w,b
  8880  01274E  0100               	movlb	0	; () banked
  8881  012750  6F76               	movwf	(_COUNTER+1)& (0+255),b
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;Timer0.c: 68: Timer0_Clear();
  8885  012752  ECC3  F0A5         	call	_Timer0_Clear	;wreg free
  8886                           
  8887                           ;Timer0.c: 71: T0CONbits.TMR0ON = 1;
  8888  012756  8ED5               	bsf	4053,7,c	;volatile
  8889  012758  0012               	return		;funcret
  8890  01275A                     __end_of_Timer0_Init:
  8891                           	opt stack 0
  8892                           tblptru	equ	0xFF8
  8893                           tblptrh	equ	0xFF7
  8894                           tblptrl	equ	0xFF6
  8895                           tablat	equ	0xFF5
  8896                           prodh	equ	0xFF4
  8897                           prodl	equ	0xFF3
  8898                           postinc0	equ	0xFEE
  8899                           wreg	equ	0xFE8
  8900                           indf1	equ	0xFE7
  8901                           postdec1	equ	0xFE5
  8902                           fsr1h	equ	0xFE2
  8903                           fsr1l	equ	0xFE1
  8904                           indf2	equ	0xFDF
  8905                           postinc2	equ	0xFDE
  8906                           postdec2	equ	0xFDD
  8907                           plusw2	equ	0xFDB
  8908                           fsr2h	equ	0xFDA
  8909                           fsr2l	equ	0xFD9
  8910                           status	equ	0xFD8
  8911                           
  8912 ;; *************** function _Timer0_Clear *****************
  8913 ;; Defined at:
  8914 ;;		line 20 in file "Library/Timer0.c"
  8915 ;; Parameters:    Size  Location     Type
  8916 ;;		None
  8917 ;; Auto vars:     Size  Location     Type
  8918 ;;		None
  8919 ;; Return value:  Size  Location     Type
  8920 ;;                  1    wreg      void 
  8921 ;; Registers used:
  8922 ;;		None
  8923 ;; Tracked objects:
  8924 ;;		On entry : 0/0
  8925 ;;		On exit  : 0/0
  8926 ;;		Unchanged: 0/0
  8927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;Total ram usage:        0 bytes
  8933 ;; Hardware stack levels used:    1
  8934 ;; Hardware stack levels required when called:    7
  8935 ;; This function calls:
  8936 ;;		Nothing
  8937 ;; This function is called by:
  8938 ;;		_Timer0_Init
  8939 ;; This function uses a non-reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text26
  8943  014B86                     __ptext26:
  8944                           	opt stack 0
  8945  014B86                     _Timer0_Clear:
  8946                           	opt stack 20
  8947                           
  8948                           ;Timer0.c: 22: TMR0 = COUNTER;
  8949                           
  8950                           ;incstack = 0
  8951  014B86  C075  FFD6         	movff	_COUNTER,4054	;volatile
  8952  014B8A  C076  FFD7         	movff	_COUNTER+1,4055	;volatile
  8953                           
  8954                           ;Timer0.c: 23: INTCONbits.TMR0IF = 0;
  8955  014B8E  94F2               	bcf	intcon,2,c	;volatile
  8956  014B90  0012               	return		;funcret
  8957  014B92                     __end_of_Timer0_Clear:
  8958                           	opt stack 0
  8959                           tblptru	equ	0xFF8
  8960                           tblptrh	equ	0xFF7
  8961                           tblptrl	equ	0xFF6
  8962                           tablat	equ	0xFF5
  8963                           prodh	equ	0xFF4
  8964                           prodl	equ	0xFF3
  8965                           intcon	equ	0xFF2
  8966                           postinc0	equ	0xFEE
  8967                           wreg	equ	0xFE8
  8968                           indf1	equ	0xFE7
  8969                           postdec1	equ	0xFE5
  8970                           fsr1h	equ	0xFE2
  8971                           fsr1l	equ	0xFE1
  8972                           indf2	equ	0xFDF
  8973                           postinc2	equ	0xFDE
  8974                           postdec2	equ	0xFDD
  8975                           plusw2	equ	0xFDB
  8976                           fsr2h	equ	0xFDA
  8977                           fsr2l	equ	0xFD9
  8978                           status	equ	0xFD8
  8979                           
  8980 ;; *************** function _MXK_Init *****************
  8981 ;; Defined at:
  8982 ;;		line 33 in file "Library/MXK.c"
  8983 ;; Parameters:    Size  Location     Type
  8984 ;;		None
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;		None
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  1    wreg      void 
  8989 ;; Registers used:
  8990 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9000 ;;Total ram usage:        0 bytes
  9001 ;; Hardware stack levels used:    1
  9002 ;; Hardware stack levels required when called:   16
  9003 ;; This function calls:
  9004 ;;		_LED_Init
  9005 ;;		_Port_Init
  9006 ;;		_Port_SetPin
  9007 ;;		_Port_SetPinType
  9008 ;;		_Port_SetQuadType
  9009 ;;		_Port_SetType
  9010 ;;		_delay_ms
  9011 ;; This function is called by:
  9012 ;;		_init
  9013 ;; This function uses a non-reentrant model
  9014 ;;
  9015                           
  9016                           	psect	text27
  9017  012304                     __ptext27:
  9018                           	opt stack 0
  9019  012304                     _MXK_Init:
  9020                           	opt stack 13
  9021                           
  9022                           ;MXK.c: 35: Bus_State = eMXK_Idle;
  9023                           
  9024                           ;incstack = 0
  9025  012304  0E01               	movlw	1
  9026  012306  6E4C               	movwf	_Bus_State,c
  9027                           
  9028                           ;MXK.c: 36: lQueue = (Function)0;
  9029  012308  0E00               	movlw	0
  9030  01230A  0100               	movlb	0	; () banked
  9031  01230C  6F63               	movwf	_lQueue& (0+255),b	;volatile
  9032  01230E  0E00               	movlw	0
  9033  012310  0100               	movlb	0	; () banked
  9034  012312  6F64               	movwf	(_lQueue+1)& (0+255),b	;volatile
  9035  012314  0E00               	movlw	0
  9036  012316  0100               	movlb	0	; () banked
  9037  012318  6F65               	movwf	(_lQueue+2)& (0+255),b	;volatile
  9038                           
  9039                           ; BSR set to: 0
  9040                           ;MXK.c: 38: Port_Init(&PortA, ePortA);
  9041  01231A  0EB8               	movlw	low _PortA
  9042  01231C  0101               	movlb	1	; () banked
  9043  01231E  6FFC               	movwf	Port_Init@pInput& (0+255),b
  9044  012320  0E01               	movlw	high _PortA
  9045  012322  0101               	movlb	1	; () banked
  9046  012324  6FFD               	movwf	(Port_Init@pInput+1)& (0+255),b
  9047  012326  0E00               	movlw	0
  9048  012328  0101               	movlb	1	; () banked
  9049  01232A  6FFE               	movwf	Port_Init@pPort& (0+255),b
  9050  01232C  ECB9  F090         	call	_Port_Init	;wreg free
  9051                           
  9052                           ;MXK.c: 39: Port_Init(&PortB, ePortB);
  9053  012330  0EAE               	movlw	low _PortB
  9054  012332  0101               	movlb	1	; () banked
  9055  012334  6FFC               	movwf	Port_Init@pInput& (0+255),b
  9056  012336  0E01               	movlw	high _PortB
  9057  012338  0101               	movlb	1	; () banked
  9058  01233A  6FFD               	movwf	(Port_Init@pInput+1)& (0+255),b
  9059  01233C  0E01               	movlw	1
  9060  01233E  0101               	movlb	1	; () banked
  9061  012340  6FFE               	movwf	Port_Init@pPort& (0+255),b
  9062  012342  ECB9  F090         	call	_Port_Init	;wreg free
  9063                           
  9064                           ;MXK.c: 40: Port_Init(&PortC, ePortC);
  9065  012346  0EA4               	movlw	low _PortC
  9066  012348  0101               	movlb	1	; () banked
  9067  01234A  6FFC               	movwf	Port_Init@pInput& (0+255),b
  9068  01234C  0E00               	movlw	high _PortC
  9069  01234E  0101               	movlb	1	; () banked
  9070  012350  6FFD               	movwf	(Port_Init@pInput+1)& (0+255),b
  9071  012352  0E02               	movlw	2
  9072  012354  0101               	movlb	1	; () banked
  9073  012356  6FFE               	movwf	Port_Init@pPort& (0+255),b
  9074  012358  ECB9  F090         	call	_Port_Init	;wreg free
  9075                           
  9076                           ;MXK.c: 41: Port_Init(&PortD, ePortD);
  9077  01235C  0E9A               	movlw	low _PortD
  9078  01235E  0101               	movlb	1	; () banked
  9079  012360  6FFC               	movwf	Port_Init@pInput& (0+255),b
  9080  012362  0E00               	movlw	high _PortD
  9081  012364  0101               	movlb	1	; () banked
  9082  012366  6FFD               	movwf	(Port_Init@pInput+1)& (0+255),b
  9083  012368  0E03               	movlw	3
  9084  01236A  0101               	movlb	1	; () banked
  9085  01236C  6FFE               	movwf	Port_Init@pPort& (0+255),b
  9086  01236E  ECB9  F090         	call	_Port_Init	;wreg free
  9087                           
  9088                           ;MXK.c: 42: Port_Init(&PortE, ePortE);
  9089  012372  0E90               	movlw	low _PortE
  9090  012374  0101               	movlb	1	; () banked
  9091  012376  6FFC               	movwf	Port_Init@pInput& (0+255),b
  9092  012378  0E00               	movlw	high _PortE
  9093  01237A  0101               	movlb	1	; () banked
  9094  01237C  6FFD               	movwf	(Port_Init@pInput+1)& (0+255),b
  9095  01237E  0E04               	movlw	4
  9096  012380  0101               	movlb	1	; () banked
  9097  012382  6FFE               	movwf	Port_Init@pPort& (0+255),b
  9098  012384  ECB9  F090         	call	_Port_Init	;wreg free
  9099                           
  9100                           ;MXK.c: 43: Port_Init(&PortF, ePortF);
  9101  012388  0EC2               	movlw	low _PortF
  9102  01238A  0101               	movlb	1	; () banked
  9103  01238C  6FFC               	movwf	Port_Init@pInput& (0+255),b
  9104  01238E  0E01               	movlw	high _PortF
  9105  012390  0101               	movlb	1	; () banked
  9106  012392  6FFD               	movwf	(Port_Init@pInput+1)& (0+255),b
  9107  012394  0E05               	movlw	5
  9108  012396  0101               	movlb	1	; () banked
  9109  012398  6FFE               	movwf	Port_Init@pPort& (0+255),b
  9110  01239A  ECB9  F090         	call	_Port_Init	;wreg free
  9111                           
  9112                           ;MXK.c: 44: Port_Init(&PortG, ePortG);
  9113  01239E  0EA4               	movlw	low _PortG
  9114  0123A0  0101               	movlb	1	; () banked
  9115  0123A2  6FFC               	movwf	Port_Init@pInput& (0+255),b
  9116  0123A4  0E01               	movlw	high _PortG
  9117  0123A6  0101               	movlb	1	; () banked
  9118  0123A8  6FFD               	movwf	(Port_Init@pInput+1)& (0+255),b
  9119  0123AA  0E06               	movlw	6
  9120  0123AC  0101               	movlb	1	; () banked
  9121  0123AE  6FFE               	movwf	Port_Init@pPort& (0+255),b
  9122  0123B0  ECB9  F090         	call	_Port_Init	;wreg free
  9123                           
  9124                           ;MXK.c: 46: Port_SetPinType (&PortF, eP5, eTypeInput);
  9125  0123B4  0EC2               	movlw	low _PortF
  9126  0123B6  0100               	movlb	0	; () banked
  9127  0123B8  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
  9128  0123BA  0E01               	movlw	high _PortF
  9129  0123BC  0100               	movlb	0	; () banked
  9130  0123BE  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  9131  0123C0  0E05               	movlw	5
  9132  0123C2  0100               	movlb	0	; () banked
  9133  0123C4  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
  9134  0123C6  0E00               	movlw	0
  9135  0123C8  0100               	movlb	0	; () banked
  9136  0123CA  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
  9137  0123CC  ECD9  F08F         	call	_Port_SetPinType	;wreg free
  9138                           
  9139                           ;MXK.c: 47: Port_SetQuadType (&PortB, eP0_3, eTypeInput);
  9140  0123D0  0EAE               	movlw	low _PortB
  9141  0123D2  0100               	movlb	0	; () banked
  9142  0123D4  6FF0               	movwf	Port_SetQuadType@pInput& (0+255),b
  9143  0123D6  0E01               	movlw	high _PortB
  9144  0123D8  0100               	movlb	0	; () banked
  9145  0123DA  6FF1               	movwf	(Port_SetQuadType@pInput+1)& (0+255),b
  9146  0123DC  0E00               	movlw	0
  9147  0123DE  0100               	movlb	0	; () banked
  9148  0123E0  6FF2               	movwf	Port_SetQuadType@pQuad& (0+255),b
  9149  0123E2  0E00               	movlw	0
  9150  0123E4  0100               	movlb	0	; () banked
  9151  0123E6  6FF3               	movwf	Port_SetQuadType@pType& (0+255),b
  9152  0123E8  ECB5  F08B         	call	_Port_SetQuadType	;wreg free
  9153                           
  9154                           ;MXK.c: 48: Port_SetPinType (&PortF, eP6, eTypeOutputPushPull);
  9155  0123EC  0EC2               	movlw	low _PortF
  9156  0123EE  0100               	movlb	0	; () banked
  9157  0123F0  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
  9158  0123F2  0E01               	movlw	high _PortF
  9159  0123F4  0100               	movlb	0	; () banked
  9160  0123F6  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
  9161  0123F8  0E06               	movlw	6
  9162  0123FA  0100               	movlb	0	; () banked
  9163  0123FC  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
  9164  0123FE  0E03               	movlw	3
  9165  012400  0100               	movlb	0	; () banked
  9166  012402  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
  9167  012404  ECD9  F08F         	call	_Port_SetPinType	;wreg free
  9168                           
  9169                           ;MXK.c: 49: Port_SetType (&PortG, eTypeOutputPushPull);
  9170  012408  0EA4               	movlw	low _PortG
  9171  01240A  0100               	movlb	0	; () banked
  9172  01240C  6FF4               	movwf	Port_SetType@pInput& (0+255),b
  9173  01240E  0E01               	movlw	high _PortG
  9174  012410  0100               	movlb	0	; () banked
  9175  012412  6FF5               	movwf	(Port_SetType@pInput+1)& (0+255),b
  9176  012414  0E03               	movlw	3
  9177  012416  0100               	movlb	0	; () banked
  9178  012418  6FF6               	movwf	Port_SetType@pType& (0+255),b
  9179  01241A  ECE0  F08C         	call	_Port_SetType	;wreg free
  9180                           
  9181                           ;MXK.c: 51: Port_SetPin(&PortG, eP4, 0);
  9182  01241E  0EA4               	movlw	low _PortG
  9183  012420  0100               	movlb	0	; () banked
  9184  012422  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
  9185  012424  0E01               	movlw	high _PortG
  9186  012426  0100               	movlb	0	; () banked
  9187  012428  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  9188  01242A  0E04               	movlw	4
  9189  01242C  0100               	movlb	0	; () banked
  9190  01242E  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
  9191  012430  0E00               	movlw	0
  9192  012432  0100               	movlb	0	; () banked
  9193  012434  6FCC               	movwf	Port_SetPin@pValue& (0+255),b
  9194  012436  ECF5  F098         	call	_Port_SetPin	;wreg free
  9195                           
  9196                           ;MXK.c: 52: Port_SetPin(&PortF, eP6,1);
  9197  01243A  0EC2               	movlw	low _PortF
  9198  01243C  0100               	movlb	0	; () banked
  9199  01243E  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
  9200  012440  0E01               	movlw	high _PortF
  9201  012442  0100               	movlb	0	; () banked
  9202  012444  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
  9203  012446  0E06               	movlw	6
  9204  012448  0100               	movlb	0	; () banked
  9205  01244A  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
  9206  01244C  0E01               	movlw	1
  9207  01244E  0100               	movlb	0	; () banked
  9208  012450  6FCC               	movwf	Port_SetPin@pValue& (0+255),b
  9209  012452  ECF5  F098         	call	_Port_SetPin	;wreg free
  9210                           
  9211                           ;MXK.c: 55: LED_Init(eLED1);
  9212  012456  0E00               	movlw	0
  9213  012458  EC35  F0A1         	call	_LED_Init
  9214                           
  9215                           ;MXK.c: 56: LED_Init(eLED2);
  9216  01245C  0E01               	movlw	1
  9217  01245E  EC35  F0A1         	call	_LED_Init
  9218                           
  9219                           ;MXK.c: 58: PIR1 = 0;
  9220  012462  0E00               	movlw	0
  9221  012464  6E9E               	movwf	3998,c	;volatile
  9222                           
  9223                           ;MXK.c: 59: PIR2 = 0;
  9224  012466  0E00               	movlw	0
  9225  012468  6EA1               	movwf	4001,c	;volatile
  9226                           
  9227                           ;MXK.c: 60: PIR3 = 0;
  9228  01246A  0E00               	movlw	0
  9229  01246C  6EA4               	movwf	4004,c	;volatile
  9230                           
  9231                           ;MXK.c: 62: OSCTUNEbits.INTSRC = 1;
  9232  01246E  8E9B               	bsf	3995,7,c	;volatile
  9233                           
  9234                           ;MXK.c: 63: OSCTUNEbits.PLLEN = 1;
  9235  012470  8C9B               	bsf	3995,6,c	;volatile
  9236                           
  9237                           ;MXK.c: 66: delay_ms(100);
  9238  012472  0E00               	movlw	0
  9239  012474  0100               	movlb	0	; () banked
  9240  012476  6FBB               	movwf	(delay_ms@ms+1)& (0+255),b
  9241  012478  0E64               	movlw	100
  9242  01247A  6FBA               	movwf	delay_ms@ms& (0+255),b
  9243  01247C  EC68  F0A0         	call	_delay_ms	;wreg free
  9244                           
  9245                           ;MXK.c: 68: RCONbits.IPEN = 1;
  9246  012480  8ED0               	bsf	4048,7,c	;volatile
  9247  012482  0012               	return		;funcret
  9248  012484                     __end_of_MXK_Init:
  9249                           	opt stack 0
  9250                           tblptru	equ	0xFF8
  9251                           tblptrh	equ	0xFF7
  9252                           tblptrl	equ	0xFF6
  9253                           tablat	equ	0xFF5
  9254                           prodh	equ	0xFF4
  9255                           prodl	equ	0xFF3
  9256                           intcon	equ	0xFF2
  9257                           postinc0	equ	0xFEE
  9258                           wreg	equ	0xFE8
  9259                           indf1	equ	0xFE7
  9260                           postdec1	equ	0xFE5
  9261                           fsr1h	equ	0xFE2
  9262                           fsr1l	equ	0xFE1
  9263                           indf2	equ	0xFDF
  9264                           postinc2	equ	0xFDE
  9265                           postdec2	equ	0xFDD
  9266                           plusw2	equ	0xFDB
  9267                           fsr2h	equ	0xFDA
  9268                           fsr2l	equ	0xFD9
  9269                           status	equ	0xFD8
  9270                           
  9271 ;; *************** function _Port_Init *****************
  9272 ;; Defined at:
  9273 ;;		line 150 in file "Library/Port.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  pInput          2    0[BANK1 ] const PTR struct Port
  9276 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  9277 ;;		 -> PortD(10), PortC(10), PortF(10), 
  9278 ;;  pPort           1    2[BANK1 ] enum E6786
  9279 ;; Auto vars:     Size  Location     Type
  9280 ;;  i               1    3[BANK1 ] unsigned char 
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  1    wreg      void 
  9283 ;; Registers used:
  9284 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9290 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9291 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9292 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9293 ;;      Totals:         0       0       4       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9294 ;;Total ram usage:        6 bytes
  9295 ;; Hardware stack levels used:    1
  9296 ;; Hardware stack levels required when called:   15
  9297 ;; This function calls:
  9298 ;;		_GetPortPORT
  9299 ;;		_GetPortProperties
  9300 ;;		_GetPortTRIS
  9301 ;;		_Port_Set
  9302 ;;		_Port_SetPinType
  9303 ;;		_Port_SetType
  9304 ;;		_Word_GetPair
  9305 ;; This function is called by:
  9306 ;;		_MXK_Init
  9307 ;; This function uses a non-reentrant model
  9308 ;;
  9309                           
  9310                           	psect	text28
  9311  012172                     __ptext28:
  9312                           	opt stack 0
  9313  012172                     _Port_Init:
  9314                           	opt stack 13
  9315                           
  9316                           ;Port.c: 153: pInput->mProperties = GetPortProperties(pPort);
  9317                           
  9318                           ;incstack = 0
  9319  012172  0101               	movlb	1	; () banked
  9320  012174  51FE               	movf	Port_Init@pPort& (0+255),w,b
  9321  012176  ECC9  F09B         	call	_GetPortProperties
  9322  01217A  C1FC  FFD9         	movff	Port_Init@pInput,fsr2l
  9323  01217E  C1FD  FFDA         	movff	Port_Init@pInput+1,fsr2h
  9324  012182  0100               	movlb	0	; () banked
  9325  012184  C0BA  FFDE         	movff	?_GetPortProperties,postinc2
  9326  012188  0100               	movlb	0	; () banked
  9327  01218A  C0BB  FFDD         	movff	?_GetPortProperties+1,postdec2
  9328                           
  9329                           ;Port.c: 154: pInput->mInput = GetPortPORT(pPort);
  9330  01218E  0101               	movlb	1	; () banked
  9331  012190  51FE               	movf	Port_Init@pPort& (0+255),w,b
  9332  012192  EC1C  F09C         	call	_GetPortPORT
  9333  012196  0101               	movlb	1	; () banked
  9334  012198  EE20 F006          	lfsr	2,6
  9335  01219C  51FC               	movf	Port_Init@pInput& (0+255),w,b
  9336  01219E  26D9               	addwf	fsr2l,f,c
  9337  0121A0  51FD               	movf	(Port_Init@pInput+1)& (0+255),w,b
  9338  0121A2  22DA               	addwfc	fsr2h,f,c
  9339  0121A4  0100               	movlb	0	; () banked
  9340  0121A6  C0BA  FFDE         	movff	?_GetPortPORT,postinc2
  9341  0121AA  0100               	movlb	0	; () banked
  9342  0121AC  C0BB  FFDD         	movff	?_GetPortPORT+1,postdec2
  9343                           
  9344                           ;Port.c: 155: pInput->mOutput = GetPortPORT(pPort);
  9345  0121B0  0101               	movlb	1	; () banked
  9346  0121B2  51FE               	movf	Port_Init@pPort& (0+255),w,b
  9347  0121B4  EC1C  F09C         	call	_GetPortPORT
  9348  0121B8  0101               	movlb	1	; () banked
  9349  0121BA  EE20 F004          	lfsr	2,4
  9350  0121BE  51FC               	movf	Port_Init@pInput& (0+255),w,b
  9351  0121C0  26D9               	addwf	fsr2l,f,c
  9352  0121C2  51FD               	movf	(Port_Init@pInput+1)& (0+255),w,b
  9353  0121C4  22DA               	addwfc	fsr2h,f,c
  9354  0121C6  0100               	movlb	0	; () banked
  9355  0121C8  C0BA  FFDE         	movff	?_GetPortPORT,postinc2
  9356  0121CC  0100               	movlb	0	; () banked
  9357  0121CE  C0BB  FFDD         	movff	?_GetPortPORT+1,postdec2
  9358                           
  9359                           ;Port.c: 156: pInput->mDirection = GetPortTRIS(pPort);
  9360  0121D2  0101               	movlb	1	; () banked
  9361  0121D4  51FE               	movf	Port_Init@pPort& (0+255),w,b
  9362  0121D6  EC76  F09B         	call	_GetPortTRIS
  9363  0121DA  0101               	movlb	1	; () banked
  9364  0121DC  EE20 F002          	lfsr	2,2
  9365  0121E0  51FC               	movf	Port_Init@pInput& (0+255),w,b
  9366  0121E2  26D9               	addwf	fsr2l,f,c
  9367  0121E4  51FD               	movf	(Port_Init@pInput+1)& (0+255),w,b
  9368  0121E6  22DA               	addwfc	fsr2h,f,c
  9369  0121E8  0100               	movlb	0	; () banked
  9370  0121EA  C0BA  FFDE         	movff	?_GetPortTRIS,postinc2
  9371  0121EE  0100               	movlb	0	; () banked
  9372  0121F0  C0BB  FFDD         	movff	?_GetPortTRIS+1,postdec2
  9373                           
  9374                           ; BSR set to: 0
  9375                           ;Port.c: 159: pInput->mOutput->mBits = 0x00;
  9376  0121F4  0101               	movlb	1	; () banked
  9377  0121F6  EE20 F004          	lfsr	2,4
  9378  0121FA  51FC               	movf	Port_Init@pInput& (0+255),w,b
  9379  0121FC  26D9               	addwf	fsr2l,f,c
  9380  0121FE  51FD               	movf	(Port_Init@pInput+1)& (0+255),w,b
  9381  012200  22DA               	addwfc	fsr2h,f,c
  9382  012202  CFDE F2AA          	movff	postinc2,??_Port_Init
  9383  012206  CFDD F2AB          	movff	postdec2,??_Port_Init+1
  9384  01220A  C2AA  FFD9         	movff	??_Port_Init,fsr2l
  9385  01220E  C2AB  FFDA         	movff	??_Port_Init+1,fsr2h
  9386  012212  0E00               	movlw	0
  9387  012214  6EDF               	movwf	indf2,c
  9388                           
  9389                           ; BSR set to: 1
  9390                           ;Port.c: 160: pInput->mDirection->mBits = 0xFF;
  9391  012216  0101               	movlb	1	; () banked
  9392  012218  EE20 F002          	lfsr	2,2
  9393  01221C  51FC               	movf	Port_Init@pInput& (0+255),w,b
  9394  01221E  26D9               	addwf	fsr2l,f,c
  9395  012220  51FD               	movf	(Port_Init@pInput+1)& (0+255),w,b
  9396  012222  22DA               	addwfc	fsr2h,f,c
  9397  012224  CFDE F2AA          	movff	postinc2,??_Port_Init
  9398  012228  CFDD F2AB          	movff	postdec2,??_Port_Init+1
  9399  01222C  C2AA  FFD9         	movff	??_Port_Init,fsr2l
  9400  012230  C2AB  FFDA         	movff	??_Port_Init+1,fsr2h
  9401  012234  0EFF               	movlw	255
  9402  012236  6EDF               	movwf	indf2,c
  9403                           
  9404                           ; BSR set to: 1
  9405                           ;Port.c: 163: Port_SetType(pInput, eTypeInput);
  9406  012238  C1FC  F0F4         	movff	Port_Init@pInput,Port_SetType@pInput
  9407  01223C  C1FD  F0F5         	movff	Port_Init@pInput+1,Port_SetType@pInput+1
  9408  012240  0E00               	movlw	0
  9409  012242  0100               	movlb	0	; () banked
  9410  012244  6FF6               	movwf	Port_SetType@pType& (0+255),b
  9411  012246  ECE0  F08C         	call	_Port_SetType	;wreg free
  9412                           
  9413                           ;Port.c: 166: UINT8 i;
  9414                           ;Port.c: 167: for (i=0; i<8; i++)
  9415  01224A  0E00               	movlw	0
  9416  01224C  0101               	movlb	1	; () banked
  9417  01224E  6FFF               	movwf	Port_Init@i& (0+255),b
  9418  012250                     l13684:
  9419                           
  9420                           ; BSR set to: 1
  9421  012250  0E07               	movlw	7
  9422  012252  0101               	movlb	1	; () banked
  9423  012254  65FF               	cpfsgt	Port_Init@i& (0+255),b
  9424  012256  D031               	goto	l403
  9425  012258  D04B               	goto	u10230
  9426  01225A                     
  9427                           ;Port.c: 172: Port_SetPinType(pInput, i, eTypeOutputPushPull);
  9428                           
  9429                           ; BSR set to: 1
  9430  01225A  C1FC  F0E0         	movff	Port_Init@pInput,Port_SetPinType@pInput
  9431  01225E  C1FD  F0E1         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  9432  012262  C1FF  F0E2         	movff	Port_Init@i,Port_SetPinType@pPin
  9433  012266  0E03               	movlw	3
  9434  012268  0100               	movlb	0	; () banked
  9435  01226A  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
  9436  01226C  ECD9  F08F         	call	_Port_SetPinType	;wreg free
  9437                           
  9438                           ;Port.c: 173: break;
  9439  012270  D03C               	goto	l405
  9440  012272                     
  9441                           ;Port.c: 175: Port_SetPinType(pInput, i, eTypeOutputOpenSource);
  9442  012272  C1FC  F0E0         	movff	Port_Init@pInput,Port_SetPinType@pInput
  9443  012276  C1FD  F0E1         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  9444  01227A  C1FF  F0E2         	movff	Port_Init@i,Port_SetPinType@pPin
  9445  01227E  0E02               	movlw	2
  9446  012280  0100               	movlb	0	; () banked
  9447  012282  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
  9448  012284  ECD9  F08F         	call	_Port_SetPinType	;wreg free
  9449                           
  9450                           ;Port.c: 176: break;
  9451  012288  D030               	goto	l405
  9452  01228A                     
  9453                           ;Port.c: 178: Port_SetPinType(pInput, i, eTypeOutputOpenDrain);
  9454  01228A  C1FC  F0E0         	movff	Port_Init@pInput,Port_SetPinType@pInput
  9455  01228E  C1FD  F0E1         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  9456  012292  C1FF  F0E2         	movff	Port_Init@i,Port_SetPinType@pPin
  9457  012296  0E01               	movlw	1
  9458  012298  0100               	movlb	0	; () banked
  9459  01229A  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
  9460  01229C  ECD9  F08F         	call	_Port_SetPinType	;wreg free
  9461                           
  9462                           ;Port.c: 179: break;
  9463  0122A0  D024               	goto	l405
  9464  0122A2                     
  9465                           ;Port.c: 181: Port_SetPinType(pInput, i, eTypeInput);
  9466  0122A2  C1FC  F0E0         	movff	Port_Init@pInput,Port_SetPinType@pInput
  9467  0122A6  C1FD  F0E1         	movff	Port_Init@pInput+1,Port_SetPinType@pInput+1
  9468  0122AA  C1FF  F0E2         	movff	Port_Init@i,Port_SetPinType@pPin
  9469  0122AE  0E00               	movlw	0
  9470  0122B0  0100               	movlb	0	; () banked
  9471  0122B2  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
  9472  0122B4  ECD9  F08F         	call	_Port_SetPinType	;wreg free
  9473                           
  9474                           ;Port.c: 183: }
  9475                           
  9476                           ;Port.c: 182: break;
  9477  0122B8  D018               	goto	l405
  9478  0122BA                     l403:
  9479  0122BA  C1FC  FFD9         	movff	Port_Init@pInput,fsr2l
  9480  0122BE  C1FD  FFDA         	movff	Port_Init@pInput+1,fsr2h
  9481  0122C2  CFDE F0C6          	movff	postinc2,Word_GetPair@pInput
  9482  0122C6  CFDD F0C7          	movff	postdec2,Word_GetPair@pInput+1
  9483  0122CA  C1FF  F0C8         	movff	Port_Init@i,Word_GetPair@pPair
  9484  0122CE  ECAE  F0A3         	call	_Word_GetPair	;wreg free
  9485                           
  9486                           ; Switch size 1, requested type "space"
  9487                           ; Number of cases is 4, Range of values is 0 to 3
  9488                           ; switch strategies available:
  9489                           ; Name         Instructions Cycles
  9490                           ; simple_byte           13     7 (average)
  9491                           ;	Chosen strategy is simple_byte
  9492  0122D2  0A00               	xorlw	0	; case 0
  9493  0122D4  B4D8               	btfsc	status,2,c
  9494  0122D6  D7C1               	goto	l404
  9495  0122D8  0A01               	xorlw	1	; case 1
  9496  0122DA  B4D8               	btfsc	status,2,c
  9497  0122DC  D7D6               	goto	l407
  9498  0122DE  0A03               	xorlw	3	; case 2
  9499  0122E0  B4D8               	btfsc	status,2,c
  9500  0122E2  D7C7               	goto	l406
  9501  0122E4  0A01               	xorlw	1	; case 3
  9502  0122E6  B4D8               	btfsc	status,2,c
  9503  0122E8  D7DC               	goto	l408
  9504  0122EA                     l405:
  9505  0122EA  0101               	movlb	1	; () banked
  9506  0122EC  2BFF               	incf	Port_Init@i& (0+255),f,b
  9507  0122EE  D7B0               	goto	l13684
  9508  0122F0                     u10230:
  9509                           
  9510                           ; BSR set to: 1
  9511                           ;Port.c: 184: }
  9512                           ;Port.c: 185: Port_Set(pInput, 0x00);
  9513                           
  9514                           ; BSR set to: 1
  9515  0122F0  C1FC  F0C9         	movff	Port_Init@pInput,Port_Set@pInput
  9516  0122F4  C1FD  F0CA         	movff	Port_Init@pInput+1,Port_Set@pInput+1
  9517  0122F8  0E00               	movlw	0
  9518  0122FA  0100               	movlb	0	; () banked
  9519  0122FC  6FCB               	movwf	Port_Set@pValue& (0+255),b
  9520  0122FE  EC96  F088         	call	_Port_Set	;wreg free
  9521  012302  0012               	return		;funcret
  9522  012304                     __end_of_Port_Init:
  9523                           	opt stack 0
  9524                           tblptru	equ	0xFF8
  9525                           tblptrh	equ	0xFF7
  9526                           tblptrl	equ	0xFF6
  9527                           tablat	equ	0xFF5
  9528                           prodh	equ	0xFF4
  9529                           prodl	equ	0xFF3
  9530                           intcon	equ	0xFF2
  9531                           postinc0	equ	0xFEE
  9532                           wreg	equ	0xFE8
  9533                           indf1	equ	0xFE7
  9534                           postdec1	equ	0xFE5
  9535                           fsr1h	equ	0xFE2
  9536                           fsr1l	equ	0xFE1
  9537                           indf2	equ	0xFDF
  9538                           postinc2	equ	0xFDE
  9539                           postdec2	equ	0xFDD
  9540                           plusw2	equ	0xFDB
  9541                           fsr2h	equ	0xFDA
  9542                           fsr2l	equ	0xFD9
  9543                           status	equ	0xFD8
  9544                           
  9545 ;; *************** function _Port_SetType *****************
  9546 ;; Defined at:
  9547 ;;		line 513 in file "Library/Port.c"
  9548 ;; Parameters:    Size  Location     Type
  9549 ;;  pInput          2   58[BANK0 ] const PTR struct Port
  9550 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  9551 ;;		 -> PortD(10), PortC(10), PortF(10), 
  9552 ;;  pType           1   60[BANK0 ] enum E6795
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;  Output          1   63[BANK0 ] enum E6475
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  1    wreg      enum E6475
  9557 ;; Registers used:
  9558 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9564 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9565 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9566 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9567 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9568 ;;Total ram usage:        6 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; Hardware stack levels required when called:   14
  9571 ;; This function calls:
  9572 ;;		_Port_CheckPortType
  9573 ;;		_Word_SetPair
  9574 ;; This function is called by:
  9575 ;;		_Port_Init
  9576 ;;		_MXK_Init
  9577 ;; This function uses a non-reentrant model
  9578 ;;
  9579                           
  9580                           	psect	text29
  9581  0119C0                     __ptext29:
  9582                           	opt stack 0
  9583  0119C0                     _Port_SetType:
  9584                           	opt stack 14
  9585                           
  9586                           ;Port.c: 515: ePinError Output = ePinErrorState;
  9587                           
  9588                           ;incstack = 0
  9589  0119C0  0E05               	movlw	5
  9590  0119C2  0100               	movlb	0	; () banked
  9591  0119C4  6FF9               	movwf	Port_SetType@Output& (0+255),b
  9592                           
  9593                           ;Port.c: 517: switch (pType)
  9594  0119C6  D07A               	goto	l509
  9595  0119C8                     
  9596                           ; BSR set to: 0
  9597                           ;Port.c: 522: pInput->mDirection->mBits = 0xFF;
  9598                           
  9599                           ; BSR set to: 0
  9600  0119C8  0100               	movlb	0	; () banked
  9601  0119CA  EE20 F002          	lfsr	2,2
  9602  0119CE  51F4               	movf	Port_SetType@pInput& (0+255),w,b
  9603  0119D0  26D9               	addwf	fsr2l,f,c
  9604  0119D2  51F5               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  9605  0119D4  22DA               	addwfc	fsr2h,f,c
  9606  0119D6  CFDE F0F7          	movff	postinc2,??_Port_SetType
  9607  0119DA  CFDD F0F8          	movff	postdec2,??_Port_SetType+1
  9608  0119DE  C0F7  FFD9         	movff	??_Port_SetType,fsr2l
  9609  0119E2  C0F8  FFDA         	movff	??_Port_SetType+1,fsr2h
  9610  0119E6  0EFF               	movlw	255
  9611  0119E8  D067               	goto	L9
  9612  0119EA                     
  9613                           ; BSR set to: 0
  9614                           ;Port.c: 526: if ((Output=Port_CheckPortType(pInput, eLow)) == ePinErrorNone)
  9615                           
  9616                           ; BSR set to: 0
  9617  0119EA  C0F4  F0F0         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  9618  0119EE  C0F5  F0F1         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  9619  0119F2  0E01               	movlw	1
  9620  0119F4  0100               	movlb	0	; () banked
  9621  0119F6  6FF2               	movwf	Port_CheckPortType@pDrive& (0+255),b
  9622  0119F8  EC5E  F0A2         	call	_Port_CheckPortType	;wreg free
  9623  0119FC  0100               	movlb	0	; () banked
  9624  0119FE  6FF9               	movwf	Port_SetType@Output& (0+255),b
  9625  011A00  0100               	movlb	0	; () banked
  9626  011A02  51F9               	movf	Port_SetType@Output& (0+255),w,b
  9627  011A04  A4D8               	btfss	status,2,c
  9628  011A06  0012               	return	
  9629                           
  9630                           ; BSR set to: 0
  9631                           ;Port.c: 527: {
  9632                           ;Port.c: 529: pInput->mDirection->mBits = 0x00;
  9633  011A08  0100               	movlb	0	; () banked
  9634  011A0A  EE20 F002          	lfsr	2,2
  9635  011A0E  51F4               	movf	Port_SetType@pInput& (0+255),w,b
  9636  011A10  26D9               	addwf	fsr2l,f,c
  9637  011A12  51F5               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  9638  011A14  22DA               	addwfc	fsr2h,f,c
  9639  011A16  CFDE F0F7          	movff	postinc2,??_Port_SetType
  9640  011A1A  CFDD F0F8          	movff	postdec2,??_Port_SetType+1
  9641  011A1E  C0F7  FFD9         	movff	??_Port_SetType,fsr2l
  9642  011A22  C0F8  FFDA         	movff	??_Port_SetType+1,fsr2h
  9643  011A26  0E00               	movlw	0
  9644  011A28  6EDF               	movwf	indf2,c
  9645                           
  9646                           ;Port.c: 532: pInput->mOutput->mBits = 0x00;
  9647  011A2A  0100               	movlb	0	; () banked
  9648  011A2C  EE20 F004          	lfsr	2,4
  9649  011A30  D036               	goto	L20
  9650  011A32                     
  9651                           ; BSR set to: 0
  9652                           ;Port.c: 537: if ((Output=Port_CheckPortType(pInput, eHigh)) == ePinErrorNone)
  9653                           
  9654                           ; BSR set to: 0
  9655  011A32  C0F4  F0F0         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  9656  011A36  C0F5  F0F1         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  9657  011A3A  0E02               	movlw	2
  9658  011A3C  0100               	movlb	0	; () banked
  9659  011A3E  6FF2               	movwf	Port_CheckPortType@pDrive& (0+255),b
  9660  011A40  EC5E  F0A2         	call	_Port_CheckPortType	;wreg free
  9661  011A44  0100               	movlb	0	; () banked
  9662  011A46  6FF9               	movwf	Port_SetType@Output& (0+255),b
  9663  011A48  0100               	movlb	0	; () banked
  9664  011A4A  51F9               	movf	Port_SetType@Output& (0+255),w,b
  9665  011A4C  A4D8               	btfss	status,2,c
  9666  011A4E  0012               	return	
  9667                           
  9668                           ; BSR set to: 0
  9669                           ;Port.c: 538: {
  9670                           ;Port.c: 540: pInput->mDirection->mBits = 0xFF;
  9671  011A50  0100               	movlb	0	; () banked
  9672  011A52  EE20 F002          	lfsr	2,2
  9673  011A56  51F4               	movf	Port_SetType@pInput& (0+255),w,b
  9674  011A58  26D9               	addwf	fsr2l,f,c
  9675  011A5A  51F5               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  9676  011A5C  22DA               	addwfc	fsr2h,f,c
  9677  011A5E  CFDE F0F7          	movff	postinc2,??_Port_SetType
  9678  011A62  CFDD F0F8          	movff	postdec2,??_Port_SetType+1
  9679  011A66  C0F7  FFD9         	movff	??_Port_SetType,fsr2l
  9680  011A6A  C0F8  FFDA         	movff	??_Port_SetType+1,fsr2h
  9681  011A6E  0EFF               	movlw	255
  9682  011A70  6EDF               	movwf	indf2,c
  9683                           
  9684                           ;Port.c: 543: pInput->mOutput->mBits = 0xFF;
  9685  011A72  0100               	movlb	0	; () banked
  9686  011A74  EE20 F004          	lfsr	2,4
  9687  011A78  D7AA               	goto	L10
  9688  011A7A                     
  9689                           ; BSR set to: 0
  9690                           ;Port.c: 548: if ((Output=Port_CheckPortType(pInput, eHL)) == ePinErrorNone)
  9691                           
  9692                           ; BSR set to: 0
  9693  011A7A  C0F4  F0F0         	movff	Port_SetType@pInput,Port_CheckPortType@pInput
  9694  011A7E  C0F5  F0F1         	movff	Port_SetType@pInput+1,Port_CheckPortType@pInput+1
  9695  011A82  0E00               	movlw	0
  9696  011A84  0100               	movlb	0	; () banked
  9697  011A86  6FF2               	movwf	Port_CheckPortType@pDrive& (0+255),b
  9698  011A88  EC5E  F0A2         	call	_Port_CheckPortType	;wreg free
  9699  011A8C  0100               	movlb	0	; () banked
  9700  011A8E  6FF9               	movwf	Port_SetType@Output& (0+255),b
  9701  011A90  0100               	movlb	0	; () banked
  9702  011A92  51F9               	movf	Port_SetType@Output& (0+255),w,b
  9703  011A94  A4D8               	btfss	status,2,c
  9704  011A96  0012               	return	
  9705                           
  9706                           ; BSR set to: 0
  9707                           ;Port.c: 549: {
  9708                           ;Port.c: 551: pInput->mDirection->mBits = 0x00;
  9709  011A98  0100               	movlb	0	; () banked
  9710  011A9A  EE20 F002          	lfsr	2,2
  9711  011A9E                     L20:
  9712  011A9E  51F4               	movf	Port_SetType@pInput& (0+255),w,b
  9713  011AA0  26D9               	addwf	fsr2l,f,c
  9714  011AA2  51F5               	movf	(Port_SetType@pInput+1)& (0+255),w,b
  9715  011AA4  22DA               	addwfc	fsr2h,f,c
  9716  011AA6  CFDE F0F7          	movff	postinc2,??_Port_SetType
  9717  011AAA  CFDD F0F8          	movff	postdec2,??_Port_SetType+1
  9718  011AAE  C0F7  FFD9         	movff	??_Port_SetType,fsr2l
  9719  011AB2  C0F8  FFDA         	movff	??_Port_SetType+1,fsr2h
  9720  011AB6  0E00               	movlw	0
  9721  011AB8                     L9:
  9722  011AB8  6EDF               	movwf	indf2,c
  9723                           
  9724                           ;Port.c: 552: }
  9725  011ABA  D00E               	goto	l511
  9726  011ABC                     l509:
  9727                           
  9728                           ; BSR set to: 0
  9729                           
  9730                           ; BSR set to: 0
  9731  011ABC  0100               	movlb	0	; () banked
  9732  011ABE  51F6               	movf	Port_SetType@pType& (0+255),w,b
  9733                           
  9734                           ; Switch size 1, requested type "space"
  9735                           ; Number of cases is 4, Range of values is 0 to 3
  9736                           ; switch strategies available:
  9737                           ; Name         Instructions Cycles
  9738                           ; simple_byte           13     7 (average)
  9739                           ;	Chosen strategy is simple_byte
  9740  011AC0  0A00               	xorlw	0	; case 0
  9741  011AC2  B4D8               	btfsc	status,2,c
  9742  011AC4  D781               	goto	l510
  9743  011AC6  0A01               	xorlw	1	; case 1
  9744  011AC8  B4D8               	btfsc	status,2,c
  9745  011ACA  D78F               	goto	l512
  9746  011ACC  0A03               	xorlw	3	; case 2
  9747  011ACE  B4D8               	btfsc	status,2,c
  9748  011AD0  D7B0               	goto	l516
  9749  011AD2  0A01               	xorlw	1	; case 3
  9750  011AD4  B4D8               	btfsc	status,2,c
  9751  011AD6  D7D1               	goto	l519
  9752  011AD8                     l511:
  9753                           
  9754                           ; BSR set to: 0
  9755                           ;Port.c: 560: Word_SetPair(&pInput->mType, 0, (UINT8)pType);
  9756                           
  9757                           ; BSR set to: 0
  9758  011AD8  0E08               	movlw	8
  9759  011ADA  0100               	movlb	0	; () banked
  9760  011ADC  25F4               	addwf	Port_SetType@pInput& (0+255),w,b
  9761  011ADE  0100               	movlb	0	; () banked
  9762  011AE0  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
  9763  011AE2  0E00               	movlw	0
  9764  011AE4  0100               	movlb	0	; () banked
  9765  011AE6  21F5               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  9766  011AE8  0100               	movlb	0	; () banked
  9767  011AEA  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  9768  011AEC  0E00               	movlw	0
  9769  011AEE  0100               	movlb	0	; () banked
  9770  011AF0  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
  9771  011AF2  C0F6  F0CC         	movff	Port_SetType@pType,Word_SetPair@pValue
  9772  011AF6  ECED  F0A2         	call	_Word_SetPair	;wreg free
  9773                           
  9774                           ;Port.c: 561: Word_SetPair(&pInput->mType, 1, (UINT8)pType);
  9775  011AFA  0E08               	movlw	8
  9776  011AFC  0100               	movlb	0	; () banked
  9777  011AFE  25F4               	addwf	Port_SetType@pInput& (0+255),w,b
  9778  011B00  0100               	movlb	0	; () banked
  9779  011B02  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
  9780  011B04  0E00               	movlw	0
  9781  011B06  0100               	movlb	0	; () banked
  9782  011B08  21F5               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  9783  011B0A  0100               	movlb	0	; () banked
  9784  011B0C  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  9785  011B0E  0E01               	movlw	1
  9786  011B10  0100               	movlb	0	; () banked
  9787  011B12  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
  9788  011B14  C0F6  F0CC         	movff	Port_SetType@pType,Word_SetPair@pValue
  9789  011B18  ECED  F0A2         	call	_Word_SetPair	;wreg free
  9790                           
  9791                           ;Port.c: 562: Word_SetPair(&pInput->mType, 2, (UINT8)pType);
  9792  011B1C  0E08               	movlw	8
  9793  011B1E  0100               	movlb	0	; () banked
  9794  011B20  25F4               	addwf	Port_SetType@pInput& (0+255),w,b
  9795  011B22  0100               	movlb	0	; () banked
  9796  011B24  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
  9797  011B26  0E00               	movlw	0
  9798  011B28  0100               	movlb	0	; () banked
  9799  011B2A  21F5               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  9800  011B2C  0100               	movlb	0	; () banked
  9801  011B2E  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  9802  011B30  0E02               	movlw	2
  9803  011B32  0100               	movlb	0	; () banked
  9804  011B34  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
  9805  011B36  C0F6  F0CC         	movff	Port_SetType@pType,Word_SetPair@pValue
  9806  011B3A  ECED  F0A2         	call	_Word_SetPair	;wreg free
  9807                           
  9808                           ;Port.c: 563: Word_SetPair(&pInput->mType, 3, (UINT8)pType);
  9809  011B3E  0E08               	movlw	8
  9810  011B40  0100               	movlb	0	; () banked
  9811  011B42  25F4               	addwf	Port_SetType@pInput& (0+255),w,b
  9812  011B44  0100               	movlb	0	; () banked
  9813  011B46  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
  9814  011B48  0E00               	movlw	0
  9815  011B4A  0100               	movlb	0	; () banked
  9816  011B4C  21F5               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  9817  011B4E  0100               	movlb	0	; () banked
  9818  011B50  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  9819  011B52  0E03               	movlw	3
  9820  011B54  0100               	movlb	0	; () banked
  9821  011B56  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
  9822  011B58  C0F6  F0CC         	movff	Port_SetType@pType,Word_SetPair@pValue
  9823  011B5C  ECED  F0A2         	call	_Word_SetPair	;wreg free
  9824                           
  9825                           ;Port.c: 564: Word_SetPair(&pInput->mType, 4, (UINT8)pType);
  9826  011B60  0E08               	movlw	8
  9827  011B62  0100               	movlb	0	; () banked
  9828  011B64  25F4               	addwf	Port_SetType@pInput& (0+255),w,b
  9829  011B66  0100               	movlb	0	; () banked
  9830  011B68  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
  9831  011B6A  0E00               	movlw	0
  9832  011B6C  0100               	movlb	0	; () banked
  9833  011B6E  21F5               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  9834  011B70  0100               	movlb	0	; () banked
  9835  011B72  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  9836  011B74  0E04               	movlw	4
  9837  011B76  0100               	movlb	0	; () banked
  9838  011B78  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
  9839  011B7A  C0F6  F0CC         	movff	Port_SetType@pType,Word_SetPair@pValue
  9840  011B7E  ECED  F0A2         	call	_Word_SetPair	;wreg free
  9841                           
  9842                           ;Port.c: 565: Word_SetPair(&pInput->mType, 5, (UINT8)pType);
  9843  011B82  0E08               	movlw	8
  9844  011B84  0100               	movlb	0	; () banked
  9845  011B86  25F4               	addwf	Port_SetType@pInput& (0+255),w,b
  9846  011B88  0100               	movlb	0	; () banked
  9847  011B8A  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
  9848  011B8C  0E00               	movlw	0
  9849  011B8E  0100               	movlb	0	; () banked
  9850  011B90  21F5               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  9851  011B92  0100               	movlb	0	; () banked
  9852  011B94  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  9853  011B96  0E05               	movlw	5
  9854  011B98  0100               	movlb	0	; () banked
  9855  011B9A  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
  9856  011B9C  C0F6  F0CC         	movff	Port_SetType@pType,Word_SetPair@pValue
  9857  011BA0  ECED  F0A2         	call	_Word_SetPair	;wreg free
  9858                           
  9859                           ;Port.c: 566: Word_SetPair(&pInput->mType, 6, (UINT8)pType);
  9860  011BA4  0E08               	movlw	8
  9861  011BA6  0100               	movlb	0	; () banked
  9862  011BA8  25F4               	addwf	Port_SetType@pInput& (0+255),w,b
  9863  011BAA  0100               	movlb	0	; () banked
  9864  011BAC  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
  9865  011BAE  0E00               	movlw	0
  9866  011BB0  0100               	movlb	0	; () banked
  9867  011BB2  21F5               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  9868  011BB4  0100               	movlb	0	; () banked
  9869  011BB6  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  9870  011BB8  0E06               	movlw	6
  9871  011BBA  0100               	movlb	0	; () banked
  9872  011BBC  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
  9873  011BBE  C0F6  F0CC         	movff	Port_SetType@pType,Word_SetPair@pValue
  9874  011BC2  ECED  F0A2         	call	_Word_SetPair	;wreg free
  9875                           
  9876                           ;Port.c: 567: Word_SetPair(&pInput->mType, 7, (UINT8)pType);
  9877  011BC6  0E08               	movlw	8
  9878  011BC8  0100               	movlb	0	; () banked
  9879  011BCA  25F4               	addwf	Port_SetType@pInput& (0+255),w,b
  9880  011BCC  0100               	movlb	0	; () banked
  9881  011BCE  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
  9882  011BD0  0E00               	movlw	0
  9883  011BD2  0100               	movlb	0	; () banked
  9884  011BD4  21F5               	addwfc	(Port_SetType@pInput+1)& (0+255),w,b
  9885  011BD6  0100               	movlb	0	; () banked
  9886  011BD8  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
  9887  011BDA  0E07               	movlw	7
  9888  011BDC  0100               	movlb	0	; () banked
  9889  011BDE  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
  9890  011BE0  C0F6  F0CC         	movff	Port_SetType@pType,Word_SetPair@pValue
  9891  011BE4  ECED  F0A2         	call	_Word_SetPair	;wreg free
  9892  011BE8  0012               	return	
  9893  011BEA                     __end_of_Port_SetType:
  9894                           	opt stack 0
  9895                           tblptru	equ	0xFF8
  9896                           tblptrh	equ	0xFF7
  9897                           tblptrl	equ	0xFF6
  9898                           tablat	equ	0xFF5
  9899                           prodh	equ	0xFF4
  9900                           prodl	equ	0xFF3
  9901                           intcon	equ	0xFF2
  9902                           postinc0	equ	0xFEE
  9903                           wreg	equ	0xFE8
  9904                           indf1	equ	0xFE7
  9905                           postdec1	equ	0xFE5
  9906                           fsr1h	equ	0xFE2
  9907                           fsr1l	equ	0xFE1
  9908                           indf2	equ	0xFDF
  9909                           postinc2	equ	0xFDE
  9910                           postdec2	equ	0xFDD
  9911                           plusw2	equ	0xFDB
  9912                           fsr2h	equ	0xFDA
  9913                           fsr2l	equ	0xFD9
  9914                           status	equ	0xFD8
  9915                           
  9916 ;; *************** function _Port_CheckPortType *****************
  9917 ;; Defined at:
  9918 ;;		line 138 in file "Library/Port.c"
  9919 ;; Parameters:    Size  Location     Type
  9920 ;;  pInput          2   54[BANK0 ] const PTR struct Port
  9921 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
  9922 ;;		 -> PortD(10), PortC(10), PortF(10), 
  9923 ;;  pDrive          1   56[BANK0 ] enum E6469
  9924 ;; Auto vars:     Size  Location     Type
  9925 ;;  Output          1   57[BANK0 ] enum E6475
  9926 ;; Return value:  Size  Location     Type
  9927 ;;                  1    wreg      enum E6475
  9928 ;; Registers used:
  9929 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9930 ;; Tracked objects:
  9931 ;;		On entry : 0/0
  9932 ;;		On exit  : 0/0
  9933 ;;		Unchanged: 0/0
  9934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9935 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9936 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9938 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9939 ;;Total ram usage:        4 bytes
  9940 ;; Hardware stack levels used:    1
  9941 ;; Hardware stack levels required when called:   13
  9942 ;; This function calls:
  9943 ;;		_Port_CheckQuadType
  9944 ;; This function is called by:
  9945 ;;		_Port_SetType
  9946 ;; This function uses a non-reentrant model
  9947 ;;
  9948                           
  9949                           	psect	text30
  9950  0144BC                     __ptext30:
  9951                           	opt stack 0
  9952  0144BC                     _Port_CheckPortType:
  9953                           	opt stack 14
  9954                           
  9955                           ;Port.c: 140: ePinError Output = ePinErrorState;
  9956                           
  9957                           ;incstack = 0
  9958  0144BC  0E05               	movlw	5
  9959  0144BE  0100               	movlb	0	; () banked
  9960  0144C0  6FF3               	movwf	Port_CheckPortType@Output& (0+255),b
  9961                           
  9962                           ; BSR set to: 0
  9963                           ;Port.c: 143: if ((Output = Port_CheckQuadType(pInput, eP0_3, pDrive)) == ePinErrorNone)
  9964  0144C2  C0F0  F0E9         	movff	Port_CheckPortType@pInput,Port_CheckQuadType@pInput
  9965  0144C6  C0F1  F0EA         	movff	Port_CheckPortType@pInput+1,Port_CheckQuadType@pInput+1
  9966  0144CA  0E00               	movlw	0
  9967  0144CC  0100               	movlb	0	; () banked
  9968  0144CE  6FEB               	movwf	Port_CheckQuadType@pQuad& (0+255),b
  9969  0144D0  C0F2  F0EC         	movff	Port_CheckPortType@pDrive,Port_CheckQuadType@pDrive
  9970  0144D4  EC66  F0A1         	call	_Port_CheckQuadType	;wreg free
  9971  0144D8  0100               	movlb	0	; () banked
  9972  0144DA  6FF3               	movwf	Port_CheckPortType@Output& (0+255),b
  9973  0144DC  0100               	movlb	0	; () banked
  9974  0144DE  51F3               	movf	Port_CheckPortType@Output& (0+255),w,b
  9975  0144E0  A4D8               	btfss	status,2,c
  9976  0144E2  D00D               	goto	l397
  9977                           
  9978                           ; BSR set to: 0
  9979                           ;Port.c: 144: Output = Port_CheckQuadType(pInput, eP4_7, pDrive);
  9980  0144E4  C0F0  F0E9         	movff	Port_CheckPortType@pInput,Port_CheckQuadType@pInput
  9981  0144E8  C0F1  F0EA         	movff	Port_CheckPortType@pInput+1,Port_CheckQuadType@pInput+1
  9982  0144EC  0E01               	movlw	1
  9983  0144EE  0100               	movlb	0	; () banked
  9984  0144F0  6FEB               	movwf	Port_CheckQuadType@pQuad& (0+255),b
  9985  0144F2  C0F2  F0EC         	movff	Port_CheckPortType@pDrive,Port_CheckQuadType@pDrive
  9986  0144F6  EC66  F0A1         	call	_Port_CheckQuadType	;wreg free
  9987  0144FA  0100               	movlb	0	; () banked
  9988  0144FC  6FF3               	movwf	Port_CheckPortType@Output& (0+255),b
  9989  0144FE                     l397:
  9990                           
  9991                           ; BSR set to: 0
  9992                           ;Port.c: 146: return Output;
  9993                           
  9994                           ; BSR set to: 0
  9995  0144FE  0100               	movlb	0	; () banked
  9996  014500  51F3               	movf	Port_CheckPortType@Output& (0+255),w,b
  9997  014502  0012               	return	
  9998  014504                     __end_of_Port_CheckPortType:
  9999                           	opt stack 0
 10000                           tblptru	equ	0xFF8
 10001                           tblptrh	equ	0xFF7
 10002                           tblptrl	equ	0xFF6
 10003                           tablat	equ	0xFF5
 10004                           prodh	equ	0xFF4
 10005                           prodl	equ	0xFF3
 10006                           intcon	equ	0xFF2
 10007                           postinc0	equ	0xFEE
 10008                           wreg	equ	0xFE8
 10009                           indf1	equ	0xFE7
 10010                           postdec1	equ	0xFE5
 10011                           fsr1h	equ	0xFE2
 10012                           fsr1l	equ	0xFE1
 10013                           indf2	equ	0xFDF
 10014                           postinc2	equ	0xFDE
 10015                           postdec2	equ	0xFDD
 10016                           plusw2	equ	0xFDB
 10017                           fsr2h	equ	0xFDA
 10018                           fsr2l	equ	0xFD9
 10019                           status	equ	0xFD8
 10020                           
 10021 ;; *************** function _Port_Set *****************
 10022 ;; Defined at:
 10023 ;;		line 570 in file "Library/Port.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  pInput          2   15[BANK0 ] const PTR struct Port
 10026 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
 10027 ;;		 -> PortD(10), PortC(10), PortF(10), 
 10028 ;;  pValue          1   17[BANK0 ] unsigned char 
 10029 ;; Auto vars:     Size  Location     Type
 10030 ;;  TypeActual      2   36[BANK0 ] unsigned short 
 10031 ;;  TypeRequired    2   34[BANK0 ] unsigned short 
 10032 ;;  Type            1   38[BANK0 ] enum E6795
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  1    wreg      void 
 10035 ;; Registers used:
 10036 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10042 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10043 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10044 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10045 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10046 ;;Total ram usage:       24 bytes
 10047 ;; Hardware stack levels used:    1
 10048 ;; Hardware stack levels required when called:   10
 10049 ;; This function calls:
 10050 ;;		_Byte_SetByte
 10051 ;;		_Word_GetPair
 10052 ;; This function is called by:
 10053 ;;		_Port_Init
 10054 ;;		_Port_Toggle
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           	psect	text31
 10059  01112C                     __ptext31:
 10060                           	opt stack 0
 10061  01112C                     _Port_Set:
 10062                           	opt stack 17
 10063                           
 10064                           ;Port.c: 572: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, 0);
 10065                           
 10066                           ; BSR set to: 0
 10067                           ;incstack = 0
 10068  01112C  0E08               	movlw	8
 10069  01112E  0100               	movlb	0	; () banked
 10070  011130  25C9               	addwf	Port_Set@pInput& (0+255),w,b
 10071  011132  0100               	movlb	0	; () banked
 10072  011134  6FC6               	movwf	Word_GetPair@pInput& (0+255),b
 10073  011136  0E00               	movlw	0
 10074  011138  0100               	movlb	0	; () banked
 10075  01113A  21CA               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
 10076  01113C  0100               	movlb	0	; () banked
 10077  01113E  6FC7               	movwf	(Word_GetPair@pInput+1)& (0+255),b
 10078  011140  0E00               	movlw	0
 10079  011142  0100               	movlb	0	; () banked
 10080  011144  6FC8               	movwf	Word_GetPair@pPair& (0+255),b
 10081  011146  ECAE  F0A3         	call	_Word_GetPair	;wreg free
 10082  01114A  0100               	movlb	0	; () banked
 10083  01114C  6FE0               	movwf	Port_Set@Type& (0+255),b
 10084                           
 10085                           ; BSR set to: 0
 10086                           ;Port.c: 573: UINT16 TypeRequired = Type | (Type << 2) | (Type << 4) | (Type << 6) | (Ty
      +                          pe << 8) | (Type << 10) | (Type << 12) | (Type << 14);
 10087  01114E  0100               	movlb	0	; () banked
 10088  011150  51E0               	movf	Port_Set@Type& (0+255),w,b
 10089  011152  0100               	movlb	0	; () banked
 10090  011154  6FCC               	movwf	??_Port_Set& (0+255),b
 10091  011156  6BCD               	clrf	(??_Port_Set+1)& (0+255),b
 10092  011158  0E0E               	movlw	14
 10093  01115A                     u9845:
 10094  01115A  90D8               	bcf	status,0,c
 10095  01115C  0100               	movlb	0	; () banked
 10096  01115E  37CC               	rlcf	??_Port_Set& (0+255),f,b
 10097  011160  37CD               	rlcf	(??_Port_Set+1)& (0+255),f,b
 10098  011162  2EE8               	decfsz	wreg,f,c
 10099  011164  D7FA               	goto	u9845
 10100  011166  0100               	movlb	0	; () banked
 10101  011168  51E0               	movf	Port_Set@Type& (0+255),w,b
 10102  01116A  0100               	movlb	0	; () banked
 10103  01116C  6FCE               	movwf	(??_Port_Set+2)& (0+255),b
 10104  01116E  6BCF               	clrf	(??_Port_Set+3)& (0+255),b
 10105  011170  0E0C               	movlw	12
 10106  011172                     u9855:
 10107  011172  90D8               	bcf	status,0,c
 10108  011174  0100               	movlb	0	; () banked
 10109  011176  37CE               	rlcf	(??_Port_Set+2)& (0+255),f,b
 10110  011178  37CF               	rlcf	(??_Port_Set+3)& (0+255),f,b
 10111  01117A  2EE8               	decfsz	wreg,f,c
 10112  01117C  D7FA               	goto	u9855
 10113  01117E  0100               	movlb	0	; () banked
 10114  011180  51E0               	movf	Port_Set@Type& (0+255),w,b
 10115  011182  0100               	movlb	0	; () banked
 10116  011184  6FD0               	movwf	(??_Port_Set+4)& (0+255),b
 10117  011186  6BD1               	clrf	(??_Port_Set+5)& (0+255),b
 10118  011188  0E0A               	movlw	10
 10119  01118A                     u9865:
 10120  01118A  90D8               	bcf	status,0,c
 10121  01118C  0100               	movlb	0	; () banked
 10122  01118E  37D0               	rlcf	(??_Port_Set+4)& (0+255),f,b
 10123  011190  37D1               	rlcf	(??_Port_Set+5)& (0+255),f,b
 10124  011192  2EE8               	decfsz	wreg,f,c
 10125  011194  D7FA               	goto	u9865
 10126  011196  0100               	movlb	0	; () banked
 10127  011198  51E0               	movf	Port_Set@Type& (0+255),w,b
 10128  01119A  0100               	movlb	0	; () banked
 10129  01119C  6FD3               	movwf	(??_Port_Set+7)& (0+255),b
 10130  01119E  6BD2               	clrf	(??_Port_Set+6)& (0+255),b
 10131  0111A0  0100               	movlb	0	; () banked
 10132  0111A2  51E0               	movf	Port_Set@Type& (0+255),w,b
 10133  0111A4  0100               	movlb	0	; () banked
 10134  0111A6  6FD4               	movwf	(??_Port_Set+8)& (0+255),b
 10135  0111A8  6BD5               	clrf	(??_Port_Set+9)& (0+255),b
 10136  0111AA  0E06               	movlw	6
 10137  0111AC                     u9875:
 10138  0111AC  90D8               	bcf	status,0,c
 10139  0111AE  0100               	movlb	0	; () banked
 10140  0111B0  37D4               	rlcf	(??_Port_Set+8)& (0+255),f,b
 10141  0111B2  37D5               	rlcf	(??_Port_Set+9)& (0+255),f,b
 10142  0111B4  2EE8               	decfsz	wreg,f,c
 10143  0111B6  D7FA               	goto	u9875
 10144  0111B8  0100               	movlb	0	; () banked
 10145  0111BA  51E0               	movf	Port_Set@Type& (0+255),w,b
 10146  0111BC  0100               	movlb	0	; () banked
 10147  0111BE  6FD6               	movwf	(??_Port_Set+10)& (0+255),b
 10148  0111C0  6BD7               	clrf	(??_Port_Set+11)& (0+255),b
 10149  0111C2  0100               	movlb	0	; () banked
 10150  0111C4  3BD6               	swapf	(??_Port_Set+10)& (0+255),f,b
 10151  0111C6  3BD7               	swapf	(??_Port_Set+11)& (0+255),f,b
 10152  0111C8  0EF0               	movlw	240
 10153  0111CA  17D7               	andwf	(??_Port_Set+11)& (0+255),f,b
 10154  0111CC  51D6               	movf	(??_Port_Set+10)& (0+255),w,b
 10155  0111CE  0B0F               	andlw	15
 10156  0111D0  13D7               	iorwf	(??_Port_Set+11)& (0+255),f,b
 10157  0111D2  0EF0               	movlw	240
 10158  0111D4  17D6               	andwf	(??_Port_Set+10)& (0+255),f,b
 10159  0111D6  0100               	movlb	0	; () banked
 10160  0111D8  51E0               	movf	Port_Set@Type& (0+255),w,b
 10161  0111DA  0100               	movlb	0	; () banked
 10162  0111DC  6FD8               	movwf	(??_Port_Set+12)& (0+255),b
 10163  0111DE  6BD9               	clrf	(??_Port_Set+13)& (0+255),b
 10164  0111E0  0100               	movlb	0	; () banked
 10165  0111E2  90D8               	bcf	status,0,c
 10166  0111E4  37D8               	rlcf	(??_Port_Set+12)& (0+255),f,b
 10167  0111E6  37D9               	rlcf	(??_Port_Set+13)& (0+255),f,b
 10168  0111E8  0100               	movlb	0	; () banked
 10169  0111EA  90D8               	bcf	status,0,c
 10170  0111EC  37D8               	rlcf	(??_Port_Set+12)& (0+255),f,b
 10171  0111EE  37D9               	rlcf	(??_Port_Set+13)& (0+255),f,b
 10172  0111F0  0100               	movlb	0	; () banked
 10173  0111F2  51E0               	movf	Port_Set@Type& (0+255),w,b
 10174  0111F4  0100               	movlb	0	; () banked
 10175  0111F6  6FDA               	movwf	(??_Port_Set+14)& (0+255),b
 10176  0111F8  6BDB               	clrf	(??_Port_Set+15)& (0+255),b
 10177  0111FA  0100               	movlb	0	; () banked
 10178  0111FC  51D8               	movf	(??_Port_Set+12)& (0+255),w,b
 10179  0111FE  0100               	movlb	0	; () banked
 10180  011200  13DA               	iorwf	(??_Port_Set+14)& (0+255),f,b
 10181  011202  0100               	movlb	0	; () banked
 10182  011204  51D9               	movf	(??_Port_Set+13)& (0+255),w,b
 10183  011206  0100               	movlb	0	; () banked
 10184  011208  13DB               	iorwf	(??_Port_Set+15)& (0+255),f,b
 10185  01120A  0100               	movlb	0	; () banked
 10186  01120C  51D6               	movf	(??_Port_Set+10)& (0+255),w,b
 10187  01120E  0100               	movlb	0	; () banked
 10188  011210  13DA               	iorwf	(??_Port_Set+14)& (0+255),f,b
 10189  011212  0100               	movlb	0	; () banked
 10190  011214  51D7               	movf	(??_Port_Set+11)& (0+255),w,b
 10191  011216  0100               	movlb	0	; () banked
 10192  011218  13DB               	iorwf	(??_Port_Set+15)& (0+255),f,b
 10193  01121A  0100               	movlb	0	; () banked
 10194  01121C  51D4               	movf	(??_Port_Set+8)& (0+255),w,b
 10195  01121E  0100               	movlb	0	; () banked
 10196  011220  13DA               	iorwf	(??_Port_Set+14)& (0+255),f,b
 10197  011222  0100               	movlb	0	; () banked
 10198  011224  51D5               	movf	(??_Port_Set+9)& (0+255),w,b
 10199  011226  0100               	movlb	0	; () banked
 10200  011228  13DB               	iorwf	(??_Port_Set+15)& (0+255),f,b
 10201  01122A  0100               	movlb	0	; () banked
 10202  01122C  51D2               	movf	(??_Port_Set+6)& (0+255),w,b
 10203  01122E  0100               	movlb	0	; () banked
 10204  011230  13DA               	iorwf	(??_Port_Set+14)& (0+255),f,b
 10205  011232  0100               	movlb	0	; () banked
 10206  011234  51D3               	movf	(??_Port_Set+7)& (0+255),w,b
 10207  011236  0100               	movlb	0	; () banked
 10208  011238  13DB               	iorwf	(??_Port_Set+15)& (0+255),f,b
 10209  01123A  0100               	movlb	0	; () banked
 10210  01123C  51D0               	movf	(??_Port_Set+4)& (0+255),w,b
 10211  01123E  0100               	movlb	0	; () banked
 10212  011240  13DA               	iorwf	(??_Port_Set+14)& (0+255),f,b
 10213  011242  0100               	movlb	0	; () banked
 10214  011244  51D1               	movf	(??_Port_Set+5)& (0+255),w,b
 10215  011246  0100               	movlb	0	; () banked
 10216  011248  13DB               	iorwf	(??_Port_Set+15)& (0+255),f,b
 10217  01124A  0100               	movlb	0	; () banked
 10218  01124C  51CE               	movf	(??_Port_Set+2)& (0+255),w,b
 10219  01124E  0100               	movlb	0	; () banked
 10220  011250  13DA               	iorwf	(??_Port_Set+14)& (0+255),f,b
 10221  011252  0100               	movlb	0	; () banked
 10222  011254  51CF               	movf	(??_Port_Set+3)& (0+255),w,b
 10223  011256  0100               	movlb	0	; () banked
 10224  011258  13DB               	iorwf	(??_Port_Set+15)& (0+255),f,b
 10225  01125A  0100               	movlb	0	; () banked
 10226  01125C  51CC               	movf	??_Port_Set& (0+255),w,b
 10227  01125E  0100               	movlb	0	; () banked
 10228  011260  11DA               	iorwf	(??_Port_Set+14)& (0+255),w,b
 10229  011262  0100               	movlb	0	; () banked
 10230  011264  6FDC               	movwf	Port_Set@TypeRequired& (0+255),b
 10231  011266  0100               	movlb	0	; () banked
 10232  011268  51CD               	movf	(??_Port_Set+1)& (0+255),w,b
 10233  01126A  0100               	movlb	0	; () banked
 10234  01126C  11DB               	iorwf	(??_Port_Set+15)& (0+255),w,b
 10235  01126E  0100               	movlb	0	; () banked
 10236  011270  6FDD               	movwf	(Port_Set@TypeRequired+1)& (0+255),b
 10237                           
 10238                           ; BSR set to: 0
 10239                           ;Port.c: 574: UINT16 TypeActual = Type;
 10240  011272  C0E0  F0DE         	movff	Port_Set@Type,Port_Set@TypeActual
 10241  011276  0100               	movlb	0	; () banked
 10242  011278  6BDF               	clrf	(Port_Set@TypeActual+1)& (0+255),b
 10243                           
 10244                           ; BSR set to: 0
 10245                           ;Port.c: 575: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 1) << 2;
 10246  01127A  0E08               	movlw	8
 10247  01127C  0100               	movlb	0	; () banked
 10248  01127E  25C9               	addwf	Port_Set@pInput& (0+255),w,b
 10249  011280  0100               	movlb	0	; () banked
 10250  011282  6FC6               	movwf	Word_GetPair@pInput& (0+255),b
 10251  011284  0E00               	movlw	0
 10252  011286  0100               	movlb	0	; () banked
 10253  011288  21CA               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
 10254  01128A  0100               	movlb	0	; () banked
 10255  01128C  6FC7               	movwf	(Word_GetPair@pInput+1)& (0+255),b
 10256  01128E  0E01               	movlw	1
 10257  011290  0100               	movlb	0	; () banked
 10258  011292  6FC8               	movwf	Word_GetPair@pPair& (0+255),b
 10259  011294  ECAE  F0A3         	call	_Word_GetPair	;wreg free
 10260  011298  0100               	movlb	0	; () banked
 10261  01129A  6FCC               	movwf	??_Port_Set& (0+255),b
 10262  01129C  6BCD               	clrf	(??_Port_Set+1)& (0+255),b
 10263  01129E  0100               	movlb	0	; () banked
 10264  0112A0  90D8               	bcf	status,0,c
 10265  0112A2  37CC               	rlcf	??_Port_Set& (0+255),f,b
 10266  0112A4  37CD               	rlcf	(??_Port_Set+1)& (0+255),f,b
 10267  0112A6  0100               	movlb	0	; () banked
 10268  0112A8  90D8               	bcf	status,0,c
 10269  0112AA  37CC               	rlcf	??_Port_Set& (0+255),f,b
 10270  0112AC  37CD               	rlcf	(??_Port_Set+1)& (0+255),f,b
 10271  0112AE  0100               	movlb	0	; () banked
 10272  0112B0  51CC               	movf	??_Port_Set& (0+255),w,b
 10273  0112B2  0100               	movlb	0	; () banked
 10274  0112B4  13DE               	iorwf	Port_Set@TypeActual& (0+255),f,b
 10275  0112B6  0100               	movlb	0	; () banked
 10276  0112B8  51CD               	movf	(??_Port_Set+1)& (0+255),w,b
 10277  0112BA  0100               	movlb	0	; () banked
 10278  0112BC  13DF               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
 10279                           
 10280                           ; BSR set to: 0
 10281                           ;Port.c: 576: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 2) << 4;
 10282  0112BE  0E08               	movlw	8
 10283  0112C0  0100               	movlb	0	; () banked
 10284  0112C2  25C9               	addwf	Port_Set@pInput& (0+255),w,b
 10285  0112C4  0100               	movlb	0	; () banked
 10286  0112C6  6FC6               	movwf	Word_GetPair@pInput& (0+255),b
 10287  0112C8  0E00               	movlw	0
 10288  0112CA  0100               	movlb	0	; () banked
 10289  0112CC  21CA               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
 10290  0112CE  0100               	movlb	0	; () banked
 10291  0112D0  6FC7               	movwf	(Word_GetPair@pInput+1)& (0+255),b
 10292  0112D2  0E02               	movlw	2
 10293  0112D4  0100               	movlb	0	; () banked
 10294  0112D6  6FC8               	movwf	Word_GetPair@pPair& (0+255),b
 10295  0112D8  ECAE  F0A3         	call	_Word_GetPair	;wreg free
 10296  0112DC  0100               	movlb	0	; () banked
 10297  0112DE  6FCC               	movwf	??_Port_Set& (0+255),b
 10298  0112E0  6BCD               	clrf	(??_Port_Set+1)& (0+255),b
 10299  0112E2  0100               	movlb	0	; () banked
 10300  0112E4  3BCC               	swapf	??_Port_Set& (0+255),f,b
 10301  0112E6  3BCD               	swapf	(??_Port_Set+1)& (0+255),f,b
 10302  0112E8  0EF0               	movlw	240
 10303  0112EA  17CD               	andwf	(??_Port_Set+1)& (0+255),f,b
 10304  0112EC  51CC               	movf	??_Port_Set& (0+255),w,b
 10305  0112EE  0B0F               	andlw	15
 10306  0112F0  13CD               	iorwf	(??_Port_Set+1)& (0+255),f,b
 10307  0112F2  0EF0               	movlw	240
 10308  0112F4  17CC               	andwf	??_Port_Set& (0+255),f,b
 10309  0112F6  0100               	movlb	0	; () banked
 10310  0112F8  51CC               	movf	??_Port_Set& (0+255),w,b
 10311  0112FA  0100               	movlb	0	; () banked
 10312  0112FC  13DE               	iorwf	Port_Set@TypeActual& (0+255),f,b
 10313  0112FE  0100               	movlb	0	; () banked
 10314  011300  51CD               	movf	(??_Port_Set+1)& (0+255),w,b
 10315  011302  0100               	movlb	0	; () banked
 10316  011304  13DF               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
 10317                           
 10318                           ; BSR set to: 0
 10319                           ;Port.c: 577: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 3) << 6;
 10320  011306  0E08               	movlw	8
 10321  011308  0100               	movlb	0	; () banked
 10322  01130A  25C9               	addwf	Port_Set@pInput& (0+255),w,b
 10323  01130C  0100               	movlb	0	; () banked
 10324  01130E  6FC6               	movwf	Word_GetPair@pInput& (0+255),b
 10325  011310  0E00               	movlw	0
 10326  011312  0100               	movlb	0	; () banked
 10327  011314  21CA               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
 10328  011316  0100               	movlb	0	; () banked
 10329  011318  6FC7               	movwf	(Word_GetPair@pInput+1)& (0+255),b
 10330  01131A  0E03               	movlw	3
 10331  01131C  0100               	movlb	0	; () banked
 10332  01131E  6FC8               	movwf	Word_GetPair@pPair& (0+255),b
 10333  011320  ECAE  F0A3         	call	_Word_GetPair	;wreg free
 10334  011324  0100               	movlb	0	; () banked
 10335  011326  6FCC               	movwf	??_Port_Set& (0+255),b
 10336  011328  6BCD               	clrf	(??_Port_Set+1)& (0+255),b
 10337  01132A  0E06               	movlw	6
 10338  01132C                     u9885:
 10339  01132C  90D8               	bcf	status,0,c
 10340  01132E  0100               	movlb	0	; () banked
 10341  011330  37CC               	rlcf	??_Port_Set& (0+255),f,b
 10342  011332  37CD               	rlcf	(??_Port_Set+1)& (0+255),f,b
 10343  011334  2EE8               	decfsz	wreg,f,c
 10344  011336  D7FA               	goto	u9885
 10345  011338  0100               	movlb	0	; () banked
 10346  01133A  51CC               	movf	??_Port_Set& (0+255),w,b
 10347  01133C  0100               	movlb	0	; () banked
 10348  01133E  13DE               	iorwf	Port_Set@TypeActual& (0+255),f,b
 10349  011340  0100               	movlb	0	; () banked
 10350  011342  51CD               	movf	(??_Port_Set+1)& (0+255),w,b
 10351  011344  0100               	movlb	0	; () banked
 10352  011346  13DF               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
 10353                           
 10354                           ; BSR set to: 0
 10355                           ;Port.c: 578: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 4) << 8;
 10356  011348  0E08               	movlw	8
 10357  01134A  0100               	movlb	0	; () banked
 10358  01134C  25C9               	addwf	Port_Set@pInput& (0+255),w,b
 10359  01134E  0100               	movlb	0	; () banked
 10360  011350  6FC6               	movwf	Word_GetPair@pInput& (0+255),b
 10361  011352  0E00               	movlw	0
 10362  011354  0100               	movlb	0	; () banked
 10363  011356  21CA               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
 10364  011358  0100               	movlb	0	; () banked
 10365  01135A  6FC7               	movwf	(Word_GetPair@pInput+1)& (0+255),b
 10366  01135C  0E04               	movlw	4
 10367  01135E  0100               	movlb	0	; () banked
 10368  011360  6FC8               	movwf	Word_GetPair@pPair& (0+255),b
 10369  011362  ECAE  F0A3         	call	_Word_GetPair	;wreg free
 10370  011366  0100               	movlb	0	; () banked
 10371  011368  6FCC               	movwf	??_Port_Set& (0+255),b
 10372  01136A  0100               	movlb	0	; () banked
 10373  01136C  51CC               	movf	??_Port_Set& (0+255),w,b
 10374  01136E  0100               	movlb	0	; () banked
 10375  011370  6FCE               	movwf	(??_Port_Set+2)& (0+255),b
 10376  011372  6BCD               	clrf	(??_Port_Set+1)& (0+255),b
 10377  011374  0100               	movlb	0	; () banked
 10378  011376  51CD               	movf	(??_Port_Set+1)& (0+255),w,b
 10379  011378  0100               	movlb	0	; () banked
 10380  01137A  13DE               	iorwf	Port_Set@TypeActual& (0+255),f,b
 10381  01137C  0100               	movlb	0	; () banked
 10382  01137E  51CE               	movf	(??_Port_Set+2)& (0+255),w,b
 10383  011380  0100               	movlb	0	; () banked
 10384  011382  13DF               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
 10385                           
 10386                           ; BSR set to: 0
 10387                           ;Port.c: 579: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 5) << 10;
 10388  011384  0E08               	movlw	8
 10389  011386  0100               	movlb	0	; () banked
 10390  011388  25C9               	addwf	Port_Set@pInput& (0+255),w,b
 10391  01138A  0100               	movlb	0	; () banked
 10392  01138C  6FC6               	movwf	Word_GetPair@pInput& (0+255),b
 10393  01138E  0E00               	movlw	0
 10394  011390  0100               	movlb	0	; () banked
 10395  011392  21CA               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
 10396  011394  0100               	movlb	0	; () banked
 10397  011396  6FC7               	movwf	(Word_GetPair@pInput+1)& (0+255),b
 10398  011398  0E05               	movlw	5
 10399  01139A  0100               	movlb	0	; () banked
 10400  01139C  6FC8               	movwf	Word_GetPair@pPair& (0+255),b
 10401  01139E  ECAE  F0A3         	call	_Word_GetPair	;wreg free
 10402  0113A2  0100               	movlb	0	; () banked
 10403  0113A4  6FCC               	movwf	??_Port_Set& (0+255),b
 10404  0113A6  6BCD               	clrf	(??_Port_Set+1)& (0+255),b
 10405  0113A8  0E0A               	movlw	10
 10406  0113AA                     u9895:
 10407  0113AA  90D8               	bcf	status,0,c
 10408  0113AC  0100               	movlb	0	; () banked
 10409  0113AE  37CC               	rlcf	??_Port_Set& (0+255),f,b
 10410  0113B0  37CD               	rlcf	(??_Port_Set+1)& (0+255),f,b
 10411  0113B2  2EE8               	decfsz	wreg,f,c
 10412  0113B4  D7FA               	goto	u9895
 10413  0113B6  0100               	movlb	0	; () banked
 10414  0113B8  51CC               	movf	??_Port_Set& (0+255),w,b
 10415  0113BA  0100               	movlb	0	; () banked
 10416  0113BC  13DE               	iorwf	Port_Set@TypeActual& (0+255),f,b
 10417  0113BE  0100               	movlb	0	; () banked
 10418  0113C0  51CD               	movf	(??_Port_Set+1)& (0+255),w,b
 10419  0113C2  0100               	movlb	0	; () banked
 10420  0113C4  13DF               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
 10421                           
 10422                           ; BSR set to: 0
 10423                           ;Port.c: 580: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 6) << 12;
 10424  0113C6  0E08               	movlw	8
 10425  0113C8  0100               	movlb	0	; () banked
 10426  0113CA  25C9               	addwf	Port_Set@pInput& (0+255),w,b
 10427  0113CC  0100               	movlb	0	; () banked
 10428  0113CE  6FC6               	movwf	Word_GetPair@pInput& (0+255),b
 10429  0113D0  0E00               	movlw	0
 10430  0113D2  0100               	movlb	0	; () banked
 10431  0113D4  21CA               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
 10432  0113D6  0100               	movlb	0	; () banked
 10433  0113D8  6FC7               	movwf	(Word_GetPair@pInput+1)& (0+255),b
 10434  0113DA  0E06               	movlw	6
 10435  0113DC  0100               	movlb	0	; () banked
 10436  0113DE  6FC8               	movwf	Word_GetPair@pPair& (0+255),b
 10437  0113E0  ECAE  F0A3         	call	_Word_GetPair	;wreg free
 10438  0113E4  0100               	movlb	0	; () banked
 10439  0113E6  6FCC               	movwf	??_Port_Set& (0+255),b
 10440  0113E8  6BCD               	clrf	(??_Port_Set+1)& (0+255),b
 10441  0113EA  0E0C               	movlw	12
 10442  0113EC                     u9905:
 10443  0113EC  90D8               	bcf	status,0,c
 10444  0113EE  0100               	movlb	0	; () banked
 10445  0113F0  37CC               	rlcf	??_Port_Set& (0+255),f,b
 10446  0113F2  37CD               	rlcf	(??_Port_Set+1)& (0+255),f,b
 10447  0113F4  2EE8               	decfsz	wreg,f,c
 10448  0113F6  D7FA               	goto	u9905
 10449  0113F8  0100               	movlb	0	; () banked
 10450  0113FA  51CC               	movf	??_Port_Set& (0+255),w,b
 10451  0113FC  0100               	movlb	0	; () banked
 10452  0113FE  13DE               	iorwf	Port_Set@TypeActual& (0+255),f,b
 10453  011400  0100               	movlb	0	; () banked
 10454  011402  51CD               	movf	(??_Port_Set+1)& (0+255),w,b
 10455  011404  0100               	movlb	0	; () banked
 10456  011406  13DF               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
 10457                           
 10458                           ; BSR set to: 0
 10459                           ;Port.c: 581: TypeActual |= (ePinType)Word_GetPair(&pInput->mType, 7) << 14;
 10460  011408  0E08               	movlw	8
 10461  01140A  0100               	movlb	0	; () banked
 10462  01140C  25C9               	addwf	Port_Set@pInput& (0+255),w,b
 10463  01140E  0100               	movlb	0	; () banked
 10464  011410  6FC6               	movwf	Word_GetPair@pInput& (0+255),b
 10465  011412  0E00               	movlw	0
 10466  011414  0100               	movlb	0	; () banked
 10467  011416  21CA               	addwfc	(Port_Set@pInput+1)& (0+255),w,b
 10468  011418  0100               	movlb	0	; () banked
 10469  01141A  6FC7               	movwf	(Word_GetPair@pInput+1)& (0+255),b
 10470  01141C  0E07               	movlw	7
 10471  01141E  0100               	movlb	0	; () banked
 10472  011420  6FC8               	movwf	Word_GetPair@pPair& (0+255),b
 10473  011422  ECAE  F0A3         	call	_Word_GetPair	;wreg free
 10474  011426  0100               	movlb	0	; () banked
 10475  011428  6FCC               	movwf	??_Port_Set& (0+255),b
 10476  01142A  6BCD               	clrf	(??_Port_Set+1)& (0+255),b
 10477  01142C  0E0E               	movlw	14
 10478  01142E                     u9915:
 10479  01142E  90D8               	bcf	status,0,c
 10480  011430  0100               	movlb	0	; () banked
 10481  011432  37CC               	rlcf	??_Port_Set& (0+255),f,b
 10482  011434  37CD               	rlcf	(??_Port_Set+1)& (0+255),f,b
 10483  011436  2EE8               	decfsz	wreg,f,c
 10484  011438  D7FA               	goto	u9915
 10485  01143A  0100               	movlb	0	; () banked
 10486  01143C  51CC               	movf	??_Port_Set& (0+255),w,b
 10487  01143E  0100               	movlb	0	; () banked
 10488  011440  13DE               	iorwf	Port_Set@TypeActual& (0+255),f,b
 10489  011442  0100               	movlb	0	; () banked
 10490  011444  51CD               	movf	(??_Port_Set+1)& (0+255),w,b
 10491  011446  0100               	movlb	0	; () banked
 10492  011448  13DF               	iorwf	(Port_Set@TypeActual+1)& (0+255),f,b
 10493                           
 10494                           ;Port.c: 584: if (TypeRequired == TypeActual)
 10495  01144A  0100               	movlb	0	; () banked
 10496  01144C  51DE               	movf	Port_Set@TypeActual& (0+255),w,b
 10497  01144E  0100               	movlb	0	; () banked
 10498  011450  19DC               	xorwf	Port_Set@TypeRequired& (0+255),w,b
 10499  011452  E148               	bnz	l528
 10500  011454  0100               	movlb	0	; () banked
 10501  011456  51DF               	movf	(Port_Set@TypeActual+1)& (0+255),w,b
 10502  011458  0100               	movlb	0	; () banked
 10503  01145A  19DD               	xorwf	(Port_Set@TypeRequired+1)& (0+255),w,b
 10504  01145C  A4D8               	btfss	status,2,c
 10505  01145E  0012               	return	
 10506  011460  D032               	goto	l526
 10507  011462                     
 10508                           ; BSR set to: 0
 10509                           ;Port.c: 593: Byte_SetByte(pInput->mDirection, pValue);
 10510                           
 10511                           ; BSR set to: 0
 10512  011462  0100               	movlb	0	; () banked
 10513  011464  EE20 F002          	lfsr	2,2
 10514  011468  51C9               	movf	Port_Set@pInput& (0+255),w,b
 10515  01146A  26D9               	addwf	fsr2l,f,c
 10516  01146C  51CA               	movf	(Port_Set@pInput+1)& (0+255),w,b
 10517  01146E  22DA               	addwfc	fsr2h,f,c
 10518  011470  CFDE F0BA          	movff	postinc2,Byte_SetByte@pInput
 10519  011474  CFDD F0BB          	movff	postdec2,Byte_SetByte@pInput+1
 10520  011478  C0CB  F0BC         	movff	Port_Set@pValue,Byte_SetByte@pValue
 10521  01147C  ECA8  F0A5         	call	_Byte_SetByte	;wreg free
 10522                           
 10523                           ;Port.c: 594: break;
 10524  011480  0012               	return	
 10525  011482                     
 10526                           ;Port.c: 597: pValue = ~pValue;
 10527  011482  0100               	movlb	0	; () banked
 10528  011484  1FCB               	comf	Port_Set@pValue& (0+255),f,b
 10529                           
 10530                           ; BSR set to: 0
 10531                           ;Port.c: 598: Byte_SetByte(pInput->mDirection, pValue);
 10532  011486  0100               	movlb	0	; () banked
 10533  011488  EE20 F002          	lfsr	2,2
 10534  01148C  51C9               	movf	Port_Set@pInput& (0+255),w,b
 10535  01148E  26D9               	addwf	fsr2l,f,c
 10536  011490  51CA               	movf	(Port_Set@pInput+1)& (0+255),w,b
 10537  011492  22DA               	addwfc	fsr2h,f,c
 10538  011494  CFDE F0BA          	movff	postinc2,Byte_SetByte@pInput
 10539  011498  CFDD F0BB          	movff	postdec2,Byte_SetByte@pInput+1
 10540  01149C  C0CB  F0BC         	movff	Port_Set@pValue,Byte_SetByte@pValue
 10541  0114A0  ECA8  F0A5         	call	_Byte_SetByte	;wreg free
 10542                           
 10543                           ;Port.c: 599: break;
 10544  0114A4  0012               	return	
 10545  0114A6                     
 10546                           ;Port.c: 602: Byte_SetByte(pInput->mOutput, pValue);
 10547  0114A6  0100               	movlb	0	; () banked
 10548  0114A8  EE20 F004          	lfsr	2,4
 10549  0114AC  51C9               	movf	Port_Set@pInput& (0+255),w,b
 10550  0114AE  26D9               	addwf	fsr2l,f,c
 10551  0114B0  51CA               	movf	(Port_Set@pInput+1)& (0+255),w,b
 10552  0114B2  22DA               	addwfc	fsr2h,f,c
 10553  0114B4  CFDE F0BA          	movff	postinc2,Byte_SetByte@pInput
 10554  0114B8  CFDD F0BB          	movff	postdec2,Byte_SetByte@pInput+1
 10555  0114BC  C0CB  F0BC         	movff	Port_Set@pValue,Byte_SetByte@pValue
 10556  0114C0  ECA8  F0A5         	call	_Byte_SetByte	;wreg free
 10557                           
 10558                           ;Port.c: 606: }
 10559                           
 10560                           ;Port.c: 605: break;
 10561                           
 10562                           ;Port.c: 604: default:
 10563                           
 10564                           ;Port.c: 603: break;
 10565  0114C4  0012               	return	
 10566  0114C6                     l526:
 10567  0114C6  0100               	movlb	0	; () banked
 10568  0114C8  51E0               	movf	Port_Set@Type& (0+255),w,b
 10569                           
 10570                           ; Switch size 1, requested type "space"
 10571                           ; Number of cases is 4, Range of values is 0 to 3
 10572                           ; switch strategies available:
 10573                           ; Name         Instructions Cycles
 10574                           ; simple_byte           13     7 (average)
 10575                           ;	Chosen strategy is simple_byte
 10576  0114CA  0A00               	xorlw	0	; case 0
 10577  0114CC  B4D8               	btfsc	status,2,c
 10578  0114CE  0012               	return	
 10579  0114D0  0A01               	xorlw	1	; case 1
 10580  0114D2  B4D8               	btfsc	status,2,c
 10581  0114D4  D7C6               	goto	l529
 10582  0114D6  0A03               	xorlw	3	; case 2
 10583  0114D8  B4D8               	btfsc	status,2,c
 10584  0114DA  D7D3               	goto	l531
 10585  0114DC  0A01               	xorlw	1	; case 3
 10586  0114DE  A4D8               	btfss	status,2,c
 10587                           
 10588                           ; BSR set to: 0
 10589                           
 10590                           ; BSR set to: 0
 10591                           ;Port.c: 607: }
 10592  0114E0  0012               	return	
 10593  0114E2  D7E1               	goto	l532
 10594  0114E4                     l528:
 10595  0114E4  0012               	return		;funcret
 10596  0114E6                     __end_of_Port_Set:
 10597                           	opt stack 0
 10598                           tblptru	equ	0xFF8
 10599                           tblptrh	equ	0xFF7
 10600                           tblptrl	equ	0xFF6
 10601                           tablat	equ	0xFF5
 10602                           prodh	equ	0xFF4
 10603                           prodl	equ	0xFF3
 10604                           intcon	equ	0xFF2
 10605                           postinc0	equ	0xFEE
 10606                           wreg	equ	0xFE8
 10607                           indf1	equ	0xFE7
 10608                           postdec1	equ	0xFE5
 10609                           fsr1h	equ	0xFE2
 10610                           fsr1l	equ	0xFE1
 10611                           indf2	equ	0xFDF
 10612                           postinc2	equ	0xFDE
 10613                           postdec2	equ	0xFDD
 10614                           plusw2	equ	0xFDB
 10615                           fsr2h	equ	0xFDA
 10616                           fsr2l	equ	0xFD9
 10617                           status	equ	0xFD8
 10618                           
 10619 ;; *************** function _Byte_SetByte *****************
 10620 ;; Defined at:
 10621 ;;		line 110 in file "Library/Types.c"
 10622 ;; Parameters:    Size  Location     Type
 10623 ;;  pInput          2    0[BANK0 ] PTR struct Byte
 10624 ;;		 -> SSP2CON2(1), SSP1CON2(1), TRISG(1), TRISF(1), 
 10625 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
 10626 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
 10627 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
 10628 ;;		 -> NULL(0), 
 10629 ;;  pValue          1    2[BANK0 ] unsigned char 
 10630 ;; Auto vars:     Size  Location     Type
 10631 ;;		None
 10632 ;; Return value:  Size  Location     Type
 10633 ;;                  1    wreg      void 
 10634 ;; Registers used:
 10635 ;;		fsr2l, fsr2h
 10636 ;; Tracked objects:
 10637 ;;		On entry : 0/0
 10638 ;;		On exit  : 0/0
 10639 ;;		Unchanged: 0/0
 10640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10641 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10644 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10645 ;;Total ram usage:        3 bytes
 10646 ;; Hardware stack levels used:    1
 10647 ;; Hardware stack levels required when called:    7
 10648 ;; This function calls:
 10649 ;;		Nothing
 10650 ;; This function is called by:
 10651 ;;		_Port_Set
 10652 ;;		_I2C_Init
 10653 ;; This function uses a non-reentrant model
 10654 ;;
 10655                           
 10656                           	psect	text32
 10657  014B50                     __ptext32:
 10658                           	opt stack 0
 10659  014B50                     _Byte_SetByte:
 10660                           	opt stack 19
 10661                           
 10662                           ;Types.c: 112: pInput->mBits = (pValue & 0xFF);
 10663                           
 10664                           ;incstack = 0
 10665  014B50  C0BA  FFD9         	movff	Byte_SetByte@pInput,fsr2l
 10666  014B54  C0BB  FFDA         	movff	Byte_SetByte@pInput+1,fsr2h
 10667  014B58  C0BC  FFDF         	movff	Byte_SetByte@pValue,indf2
 10668  014B5C  0012               	return		;funcret
 10669  014B5E                     __end_of_Byte_SetByte:
 10670                           	opt stack 0
 10671                           tblptru	equ	0xFF8
 10672                           tblptrh	equ	0xFF7
 10673                           tblptrl	equ	0xFF6
 10674                           tablat	equ	0xFF5
 10675                           prodh	equ	0xFF4
 10676                           prodl	equ	0xFF3
 10677                           intcon	equ	0xFF2
 10678                           postinc0	equ	0xFEE
 10679                           wreg	equ	0xFE8
 10680                           indf1	equ	0xFE7
 10681                           postdec1	equ	0xFE5
 10682                           fsr1h	equ	0xFE2
 10683                           fsr1l	equ	0xFE1
 10684                           indf2	equ	0xFDF
 10685                           postinc2	equ	0xFDE
 10686                           postdec2	equ	0xFDD
 10687                           plusw2	equ	0xFDB
 10688                           fsr2h	equ	0xFDA
 10689                           fsr2l	equ	0xFD9
 10690                           status	equ	0xFD8
 10691                           
 10692 ;; *************** function _GetPortTRIS *****************
 10693 ;; Defined at:
 10694 ;;		line 67 in file "Library/Port.c"
 10695 ;; Parameters:    Size  Location     Type
 10696 ;;  pInput          1    wreg     enum E6786
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  pInput          1    2[BANK0 ] enum E6786
 10699 ;; Return value:  Size  Location     Type
 10700 ;;                  2    0[BANK0 ] PTR struct Byte
 10701 ;; Registers used:
 10702 ;;		wreg, status,2, status,0
 10703 ;; Tracked objects:
 10704 ;;		On entry : 0/0
 10705 ;;		On exit  : 0/0
 10706 ;;		Unchanged: 0/0
 10707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10708 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10709 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;Total ram usage:        3 bytes
 10713 ;; Hardware stack levels used:    1
 10714 ;; Hardware stack levels required when called:    7
 10715 ;; This function calls:
 10716 ;;		Nothing
 10717 ;; This function is called by:
 10718 ;;		_Port_Init
 10719 ;; This function uses a non-reentrant model
 10720 ;;
 10721                           
 10722                           	psect	text33
 10723  0136EC                     __ptext33:
 10724                           	opt stack 0
 10725  0136EC                     _GetPortTRIS:
 10726                           	opt stack 20
 10727                           
 10728                           ;incstack = 0
 10729                           ;GetPortTRIS@pInput stored from wreg
 10730  0136EC  0100               	movlb	0	; () banked
 10731  0136EE  6FBC               	movwf	GetPortTRIS@pInput& (0+255),b
 10732                           
 10733                           ;Port.c: 69: switch (pInput)
 10734  0136F0  D038               	goto	l363
 10735  0136F2                     
 10736                           ;Port.c: 72: return (BytePtr)&TRISA;
 10737  0136F2  0E92               	movlw	146
 10738  0136F4  0100               	movlb	0	; () banked
 10739  0136F6  6FBA               	movwf	?_GetPortTRIS& (0+255),b
 10740  0136F8  0E0F               	movlw	15
 10741  0136FA  0100               	movlb	0	; () banked
 10742  0136FC  6FBB               	movwf	(?_GetPortTRIS+1)& (0+255),b
 10743                           
 10744                           ; BSR set to: 0
 10745  0136FE  0012               	return	
 10746  013700                     
 10747                           ; BSR set to: 0
 10748                           ;Port.c: 74: return (BytePtr)&TRISB;
 10749                           
 10750                           ; BSR set to: 0
 10751  013700  0E93               	movlw	147
 10752  013702  0100               	movlb	0	; () banked
 10753  013704  6FBA               	movwf	?_GetPortTRIS& (0+255),b
 10754  013706  0E0F               	movlw	15
 10755  013708  0100               	movlb	0	; () banked
 10756  01370A  6FBB               	movwf	(?_GetPortTRIS+1)& (0+255),b
 10757                           
 10758                           ; BSR set to: 0
 10759  01370C  0012               	return	
 10760  01370E                     
 10761                           ; BSR set to: 0
 10762                           ;Port.c: 76: return (BytePtr)&TRISC;
 10763                           
 10764                           ; BSR set to: 0
 10765  01370E  0E94               	movlw	148
 10766  013710  0100               	movlb	0	; () banked
 10767  013712  6FBA               	movwf	?_GetPortTRIS& (0+255),b
 10768  013714  0E0F               	movlw	15
 10769  013716  0100               	movlb	0	; () banked
 10770  013718  6FBB               	movwf	(?_GetPortTRIS+1)& (0+255),b
 10771                           
 10772                           ; BSR set to: 0
 10773  01371A  0012               	return	
 10774  01371C                     
 10775                           ; BSR set to: 0
 10776                           ;Port.c: 78: return (BytePtr)&TRISD;
 10777                           
 10778                           ; BSR set to: 0
 10779  01371C  0E95               	movlw	149
 10780  01371E  0100               	movlb	0	; () banked
 10781  013720  6FBA               	movwf	?_GetPortTRIS& (0+255),b
 10782  013722  0E0F               	movlw	15
 10783  013724  0100               	movlb	0	; () banked
 10784  013726  6FBB               	movwf	(?_GetPortTRIS+1)& (0+255),b
 10785                           
 10786                           ; BSR set to: 0
 10787  013728  0012               	return	
 10788  01372A                     
 10789                           ; BSR set to: 0
 10790                           ;Port.c: 80: return (BytePtr)&TRISE;
 10791                           
 10792                           ; BSR set to: 0
 10793  01372A  0E96               	movlw	150
 10794  01372C  0100               	movlb	0	; () banked
 10795  01372E  6FBA               	movwf	?_GetPortTRIS& (0+255),b
 10796  013730  0E0F               	movlw	15
 10797  013732  0100               	movlb	0	; () banked
 10798  013734  6FBB               	movwf	(?_GetPortTRIS+1)& (0+255),b
 10799                           
 10800                           ; BSR set to: 0
 10801  013736  0012               	return	
 10802  013738                     
 10803                           ; BSR set to: 0
 10804                           ;Port.c: 82: return (BytePtr)&TRISF;
 10805                           
 10806                           ; BSR set to: 0
 10807  013738  0E97               	movlw	151
 10808  01373A  0100               	movlb	0	; () banked
 10809  01373C  6FBA               	movwf	?_GetPortTRIS& (0+255),b
 10810  01373E  0E0F               	movlw	15
 10811  013740  0100               	movlb	0	; () banked
 10812  013742  6FBB               	movwf	(?_GetPortTRIS+1)& (0+255),b
 10813                           
 10814                           ; BSR set to: 0
 10815  013744  0012               	return	
 10816  013746                     
 10817                           ; BSR set to: 0
 10818                           ;Port.c: 84: return (BytePtr)&TRISG;
 10819                           
 10820                           ; BSR set to: 0
 10821  013746  0E98               	movlw	152
 10822  013748  0100               	movlb	0	; () banked
 10823  01374A  6FBA               	movwf	?_GetPortTRIS& (0+255),b
 10824  01374C  0E0F               	movlw	15
 10825  01374E  0100               	movlb	0	; () banked
 10826  013750  6FBB               	movwf	(?_GetPortTRIS+1)& (0+255),b
 10827                           
 10828                           ; BSR set to: 0
 10829  013752  0012               	return	
 10830  013754                     
 10831                           ; BSR set to: 0
 10832                           ;Port.c: 86: return (void*)0;
 10833                           
 10834                           ; BSR set to: 0
 10835  013754  0E00               	movlw	0
 10836  013756  0100               	movlb	0	; () banked
 10837  013758  6FBA               	movwf	?_GetPortTRIS& (0+255),b
 10838  01375A  0E00               	movlw	0
 10839  01375C  0100               	movlb	0	; () banked
 10840  01375E  6FBB               	movwf	(?_GetPortTRIS+1)& (0+255),b
 10841                           
 10842                           ; BSR set to: 0
 10843                           ;Port.c: 87: }
 10844                           
 10845                           ; BSR set to: 0
 10846  013760  0012               	return	
 10847  013762                     l363:
 10848                           
 10849                           ; BSR set to: 0
 10850  013762  0100               	movlb	0	; () banked
 10851  013764  51BC               	movf	GetPortTRIS@pInput& (0+255),w,b
 10852                           
 10853                           ; Switch size 1, requested type "space"
 10854                           ; Number of cases is 7, Range of values is 0 to 6
 10855                           ; switch strategies available:
 10856                           ; Name         Instructions Cycles
 10857                           ; simple_byte           22    12 (average)
 10858                           ;	Chosen strategy is simple_byte
 10859  013766  0A00               	xorlw	0	; case 0
 10860  013768  B4D8               	btfsc	status,2,c
 10861  01376A  D7C3               	goto	l364
 10862  01376C  0A01               	xorlw	1	; case 1
 10863  01376E  B4D8               	btfsc	status,2,c
 10864  013770  D7C7               	goto	l366
 10865  013772  0A03               	xorlw	3	; case 2
 10866  013774  B4D8               	btfsc	status,2,c
 10867  013776  D7CB               	goto	l367
 10868  013778  0A01               	xorlw	1	; case 3
 10869  01377A  B4D8               	btfsc	status,2,c
 10870  01377C  D7CF               	goto	l368
 10871  01377E  0A07               	xorlw	7	; case 4
 10872  013780  B4D8               	btfsc	status,2,c
 10873  013782  D7D3               	goto	l369
 10874  013784  0A01               	xorlw	1	; case 5
 10875  013786  B4D8               	btfsc	status,2,c
 10876  013788  D7D7               	goto	l370
 10877  01378A  0A03               	xorlw	3	; case 6
 10878  01378C  B4D8               	btfsc	status,2,c
 10879  01378E  D7DB               	goto	l371
 10880  013790  D7E1               	goto	l372
 10881  013792                     __end_of_GetPortTRIS:
 10882                           	opt stack 0
 10883                           tblptru	equ	0xFF8
 10884                           tblptrh	equ	0xFF7
 10885                           tblptrl	equ	0xFF6
 10886                           tablat	equ	0xFF5
 10887                           prodh	equ	0xFF4
 10888                           prodl	equ	0xFF3
 10889                           intcon	equ	0xFF2
 10890                           postinc0	equ	0xFEE
 10891                           wreg	equ	0xFE8
 10892                           indf1	equ	0xFE7
 10893                           postdec1	equ	0xFE5
 10894                           fsr1h	equ	0xFE2
 10895                           fsr1l	equ	0xFE1
 10896                           indf2	equ	0xFDF
 10897                           postinc2	equ	0xFDE
 10898                           postdec2	equ	0xFDD
 10899                           plusw2	equ	0xFDB
 10900                           fsr2h	equ	0xFDA
 10901                           fsr2l	equ	0xFD9
 10902                           status	equ	0xFD8
 10903                           
 10904 ;; *************** function _GetPortProperties *****************
 10905 ;; Defined at:
 10906 ;;		line 21 in file "Library/Port.c"
 10907 ;; Parameters:    Size  Location     Type
 10908 ;;  pInput          1    wreg     enum E6786
 10909 ;; Auto vars:     Size  Location     Type
 10910 ;;  pInput          1    2[BANK0 ] enum E6786
 10911 ;; Return value:  Size  Location     Type
 10912 ;;                  2    0[BANK0 ] PTR struct PortProperty
 10913 ;; Registers used:
 10914 ;;		wreg, status,2, status,0
 10915 ;; Tracked objects:
 10916 ;;		On entry : 0/0
 10917 ;;		On exit  : 0/0
 10918 ;;		Unchanged: 0/0
 10919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10923 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10924 ;;Total ram usage:        3 bytes
 10925 ;; Hardware stack levels used:    1
 10926 ;; Hardware stack levels required when called:    7
 10927 ;; This function calls:
 10928 ;;		Nothing
 10929 ;; This function is called by:
 10930 ;;		_Port_Init
 10931 ;; This function uses a non-reentrant model
 10932 ;;
 10933                           
 10934                           	psect	text34
 10935  013792                     __ptext34:
 10936                           	opt stack 0
 10937  013792                     _GetPortProperties:
 10938                           	opt stack 20
 10939                           
 10940                           ; BSR set to: 0
 10941                           ;incstack = 0
 10942                           ;GetPortProperties@pInput stored from wreg
 10943  013792  0100               	movlb	0	; () banked
 10944  013794  6FBC               	movwf	GetPortProperties@pInput& (0+255),b
 10945                           
 10946                           ;Port.c: 23: switch (pInput)
 10947  013796  D038               	goto	l337
 10948  013798                     
 10949                           ;Port.c: 26: return (PortPropertyPtr)&PortA_Property;
 10950  013798  0EEF               	movlw	low _PortA_Property
 10951  01379A  0100               	movlb	0	; () banked
 10952  01379C  6FBA               	movwf	?_GetPortProperties& (0+255),b
 10953  01379E  0EFF               	movlw	high _PortA_Property
 10954  0137A0  0100               	movlb	0	; () banked
 10955  0137A2  6FBB               	movwf	(?_GetPortProperties+1)& (0+255),b
 10956                           
 10957                           ; BSR set to: 0
 10958  0137A4  0012               	return	
 10959  0137A6                     
 10960                           ; BSR set to: 0
 10961                           ;Port.c: 28: return (PortPropertyPtr)&PortB_Property;
 10962                           
 10963                           ; BSR set to: 0
 10964  0137A6  0EED               	movlw	low _PortB_Property
 10965  0137A8  0100               	movlb	0	; () banked
 10966  0137AA  6FBA               	movwf	?_GetPortProperties& (0+255),b
 10967  0137AC  0EFF               	movlw	high _PortB_Property
 10968  0137AE  0100               	movlb	0	; () banked
 10969  0137B0  6FBB               	movwf	(?_GetPortProperties+1)& (0+255),b
 10970                           
 10971                           ; BSR set to: 0
 10972  0137B2  0012               	return	
 10973  0137B4                     
 10974                           ; BSR set to: 0
 10975                           ;Port.c: 30: return (PortPropertyPtr)&PortC_Property;
 10976                           
 10977                           ; BSR set to: 0
 10978  0137B4  0EEB               	movlw	low _PortC_Property
 10979  0137B6  0100               	movlb	0	; () banked
 10980  0137B8  6FBA               	movwf	?_GetPortProperties& (0+255),b
 10981  0137BA  0EFF               	movlw	high _PortC_Property
 10982  0137BC  0100               	movlb	0	; () banked
 10983  0137BE  6FBB               	movwf	(?_GetPortProperties+1)& (0+255),b
 10984                           
 10985                           ; BSR set to: 0
 10986  0137C0  0012               	return	
 10987  0137C2                     
 10988                           ; BSR set to: 0
 10989                           ;Port.c: 32: return (PortPropertyPtr)&PortD_Property;
 10990                           
 10991                           ; BSR set to: 0
 10992  0137C2  0EE9               	movlw	low _PortD_Property
 10993  0137C4  0100               	movlb	0	; () banked
 10994  0137C6  6FBA               	movwf	?_GetPortProperties& (0+255),b
 10995  0137C8  0EFF               	movlw	high _PortD_Property
 10996  0137CA  0100               	movlb	0	; () banked
 10997  0137CC  6FBB               	movwf	(?_GetPortProperties+1)& (0+255),b
 10998                           
 10999                           ; BSR set to: 0
 11000  0137CE  0012               	return	
 11001  0137D0                     
 11002                           ; BSR set to: 0
 11003                           ;Port.c: 34: return (PortPropertyPtr)&PortE_Property;
 11004                           
 11005                           ; BSR set to: 0
 11006  0137D0  0EE7               	movlw	low _PortE_Property
 11007  0137D2  0100               	movlb	0	; () banked
 11008  0137D4  6FBA               	movwf	?_GetPortProperties& (0+255),b
 11009  0137D6  0EFF               	movlw	high _PortE_Property
 11010  0137D8  0100               	movlb	0	; () banked
 11011  0137DA  6FBB               	movwf	(?_GetPortProperties+1)& (0+255),b
 11012                           
 11013                           ; BSR set to: 0
 11014  0137DC  0012               	return	
 11015  0137DE                     
 11016                           ; BSR set to: 0
 11017                           ;Port.c: 36: return (PortPropertyPtr)&PortF_Property;
 11018                           
 11019                           ; BSR set to: 0
 11020  0137DE  0EE5               	movlw	low _PortF_Property
 11021  0137E0  0100               	movlb	0	; () banked
 11022  0137E2  6FBA               	movwf	?_GetPortProperties& (0+255),b
 11023  0137E4  0EFF               	movlw	high _PortF_Property
 11024  0137E6  0100               	movlb	0	; () banked
 11025  0137E8  6FBB               	movwf	(?_GetPortProperties+1)& (0+255),b
 11026                           
 11027                           ; BSR set to: 0
 11028  0137EA  0012               	return	
 11029  0137EC                     
 11030                           ; BSR set to: 0
 11031                           ;Port.c: 38: return (PortPropertyPtr)&PortG_Property;
 11032                           
 11033                           ; BSR set to: 0
 11034  0137EC  0EE3               	movlw	low _PortG_Property
 11035  0137EE  0100               	movlb	0	; () banked
 11036  0137F0  6FBA               	movwf	?_GetPortProperties& (0+255),b
 11037  0137F2  0EFF               	movlw	high _PortG_Property
 11038  0137F4  0100               	movlb	0	; () banked
 11039  0137F6  6FBB               	movwf	(?_GetPortProperties+1)& (0+255),b
 11040                           
 11041                           ; BSR set to: 0
 11042  0137F8  0012               	return	
 11043  0137FA                     
 11044                           ; BSR set to: 0
 11045                           ;Port.c: 40: return (void*)0;
 11046                           
 11047                           ; BSR set to: 0
 11048  0137FA  0E00               	movlw	0
 11049  0137FC  0100               	movlb	0	; () banked
 11050  0137FE  6FBA               	movwf	?_GetPortProperties& (0+255),b
 11051  013800  0E00               	movlw	0
 11052  013802  0100               	movlb	0	; () banked
 11053  013804  6FBB               	movwf	(?_GetPortProperties+1)& (0+255),b
 11054                           
 11055                           ; BSR set to: 0
 11056                           ;Port.c: 41: }
 11057                           
 11058                           ; BSR set to: 0
 11059  013806  0012               	return	
 11060  013808                     l337:
 11061                           
 11062                           ; BSR set to: 0
 11063  013808  0100               	movlb	0	; () banked
 11064  01380A  51BC               	movf	GetPortProperties@pInput& (0+255),w,b
 11065                           
 11066                           ; Switch size 1, requested type "space"
 11067                           ; Number of cases is 7, Range of values is 0 to 6
 11068                           ; switch strategies available:
 11069                           ; Name         Instructions Cycles
 11070                           ; simple_byte           22    12 (average)
 11071                           ;	Chosen strategy is simple_byte
 11072  01380C  0A00               	xorlw	0	; case 0
 11073  01380E  B4D8               	btfsc	status,2,c
 11074  013810  D7C3               	goto	l338
 11075  013812  0A01               	xorlw	1	; case 1
 11076  013814  B4D8               	btfsc	status,2,c
 11077  013816  D7C7               	goto	l340
 11078  013818  0A03               	xorlw	3	; case 2
 11079  01381A  B4D8               	btfsc	status,2,c
 11080  01381C  D7CB               	goto	l341
 11081  01381E  0A01               	xorlw	1	; case 3
 11082  013820  B4D8               	btfsc	status,2,c
 11083  013822  D7CF               	goto	l342
 11084  013824  0A07               	xorlw	7	; case 4
 11085  013826  B4D8               	btfsc	status,2,c
 11086  013828  D7D3               	goto	l343
 11087  01382A  0A01               	xorlw	1	; case 5
 11088  01382C  B4D8               	btfsc	status,2,c
 11089  01382E  D7D7               	goto	l344
 11090  013830  0A03               	xorlw	3	; case 6
 11091  013832  B4D8               	btfsc	status,2,c
 11092  013834  D7DB               	goto	l345
 11093  013836  D7E1               	goto	l346
 11094  013838                     __end_of_GetPortProperties:
 11095                           	opt stack 0
 11096                           tblptru	equ	0xFF8
 11097                           tblptrh	equ	0xFF7
 11098                           tblptrl	equ	0xFF6
 11099                           tablat	equ	0xFF5
 11100                           prodh	equ	0xFF4
 11101                           prodl	equ	0xFF3
 11102                           intcon	equ	0xFF2
 11103                           postinc0	equ	0xFEE
 11104                           wreg	equ	0xFE8
 11105                           indf1	equ	0xFE7
 11106                           postdec1	equ	0xFE5
 11107                           fsr1h	equ	0xFE2
 11108                           fsr1l	equ	0xFE1
 11109                           indf2	equ	0xFDF
 11110                           postinc2	equ	0xFDE
 11111                           postdec2	equ	0xFDD
 11112                           plusw2	equ	0xFDB
 11113                           fsr2h	equ	0xFDA
 11114                           fsr2l	equ	0xFD9
 11115                           status	equ	0xFD8
 11116                           
 11117 ;; *************** function _GetPortPORT *****************
 11118 ;; Defined at:
 11119 ;;		line 44 in file "Library/Port.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;  pInput          1    wreg     enum E6786
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  pInput          1    2[BANK0 ] enum E6786
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  2    0[BANK0 ] PTR struct Byte
 11126 ;; Registers used:
 11127 ;;		wreg, status,2, status,0
 11128 ;; Tracked objects:
 11129 ;;		On entry : 0/0
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11134 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11136 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11137 ;;Total ram usage:        3 bytes
 11138 ;; Hardware stack levels used:    1
 11139 ;; Hardware stack levels required when called:    7
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_Port_Init
 11144 ;; This function uses a non-reentrant model
 11145 ;;
 11146                           
 11147                           	psect	text35
 11148  013838                     __ptext35:
 11149                           	opt stack 0
 11150  013838                     _GetPortPORT:
 11151                           	opt stack 20
 11152                           
 11153                           ; BSR set to: 0
 11154                           ;incstack = 0
 11155                           ;GetPortPORT@pInput stored from wreg
 11156  013838  0100               	movlb	0	; () banked
 11157  01383A  6FBC               	movwf	GetPortPORT@pInput& (0+255),b
 11158                           
 11159                           ;Port.c: 46: switch (pInput)
 11160  01383C  D038               	goto	l350
 11161  01383E                     
 11162                           ;Port.c: 49: return (BytePtr)&PORTA;
 11163  01383E  0E80               	movlw	128
 11164  013840  0100               	movlb	0	; () banked
 11165  013842  6FBA               	movwf	?_GetPortPORT& (0+255),b
 11166  013844  0E0F               	movlw	15
 11167  013846  0100               	movlb	0	; () banked
 11168  013848  6FBB               	movwf	(?_GetPortPORT+1)& (0+255),b
 11169                           
 11170                           ; BSR set to: 0
 11171  01384A  0012               	return	
 11172  01384C                     
 11173                           ; BSR set to: 0
 11174                           ;Port.c: 51: return (BytePtr)&PORTB;
 11175                           
 11176                           ; BSR set to: 0
 11177  01384C  0E81               	movlw	129
 11178  01384E  0100               	movlb	0	; () banked
 11179  013850  6FBA               	movwf	?_GetPortPORT& (0+255),b
 11180  013852  0E0F               	movlw	15
 11181  013854  0100               	movlb	0	; () banked
 11182  013856  6FBB               	movwf	(?_GetPortPORT+1)& (0+255),b
 11183                           
 11184                           ; BSR set to: 0
 11185  013858  0012               	return	
 11186  01385A                     
 11187                           ; BSR set to: 0
 11188                           ;Port.c: 53: return (BytePtr)&PORTC;
 11189                           
 11190                           ; BSR set to: 0
 11191  01385A  0E82               	movlw	130
 11192  01385C  0100               	movlb	0	; () banked
 11193  01385E  6FBA               	movwf	?_GetPortPORT& (0+255),b
 11194  013860  0E0F               	movlw	15
 11195  013862  0100               	movlb	0	; () banked
 11196  013864  6FBB               	movwf	(?_GetPortPORT+1)& (0+255),b
 11197                           
 11198                           ; BSR set to: 0
 11199  013866  0012               	return	
 11200  013868                     
 11201                           ; BSR set to: 0
 11202                           ;Port.c: 55: return (BytePtr)&PORTD;
 11203                           
 11204                           ; BSR set to: 0
 11205  013868  0E83               	movlw	131
 11206  01386A  0100               	movlb	0	; () banked
 11207  01386C  6FBA               	movwf	?_GetPortPORT& (0+255),b
 11208  01386E  0E0F               	movlw	15
 11209  013870  0100               	movlb	0	; () banked
 11210  013872  6FBB               	movwf	(?_GetPortPORT+1)& (0+255),b
 11211                           
 11212                           ; BSR set to: 0
 11213  013874  0012               	return	
 11214  013876                     
 11215                           ; BSR set to: 0
 11216                           ;Port.c: 57: return (BytePtr)&PORTE;
 11217                           
 11218                           ; BSR set to: 0
 11219  013876  0E84               	movlw	132
 11220  013878  0100               	movlb	0	; () banked
 11221  01387A  6FBA               	movwf	?_GetPortPORT& (0+255),b
 11222  01387C  0E0F               	movlw	15
 11223  01387E  0100               	movlb	0	; () banked
 11224  013880  6FBB               	movwf	(?_GetPortPORT+1)& (0+255),b
 11225                           
 11226                           ; BSR set to: 0
 11227  013882  0012               	return	
 11228  013884                     
 11229                           ; BSR set to: 0
 11230                           ;Port.c: 59: return (BytePtr)&PORTF;
 11231                           
 11232                           ; BSR set to: 0
 11233  013884  0E85               	movlw	133
 11234  013886  0100               	movlb	0	; () banked
 11235  013888  6FBA               	movwf	?_GetPortPORT& (0+255),b
 11236  01388A  0E0F               	movlw	15
 11237  01388C  0100               	movlb	0	; () banked
 11238  01388E  6FBB               	movwf	(?_GetPortPORT+1)& (0+255),b
 11239                           
 11240                           ; BSR set to: 0
 11241  013890  0012               	return	
 11242  013892                     
 11243                           ; BSR set to: 0
 11244                           ;Port.c: 61: return (BytePtr)&PORTG;
 11245                           
 11246                           ; BSR set to: 0
 11247  013892  0E86               	movlw	134
 11248  013894  0100               	movlb	0	; () banked
 11249  013896  6FBA               	movwf	?_GetPortPORT& (0+255),b
 11250  013898  0E0F               	movlw	15
 11251  01389A  0100               	movlb	0	; () banked
 11252  01389C  6FBB               	movwf	(?_GetPortPORT+1)& (0+255),b
 11253                           
 11254                           ; BSR set to: 0
 11255  01389E  0012               	return	
 11256  0138A0                     
 11257                           ; BSR set to: 0
 11258                           ;Port.c: 63: return (void*)0;
 11259                           
 11260                           ; BSR set to: 0
 11261  0138A0  0E00               	movlw	0
 11262  0138A2  0100               	movlb	0	; () banked
 11263  0138A4  6FBA               	movwf	?_GetPortPORT& (0+255),b
 11264  0138A6  0E00               	movlw	0
 11265  0138A8  0100               	movlb	0	; () banked
 11266  0138AA  6FBB               	movwf	(?_GetPortPORT+1)& (0+255),b
 11267                           
 11268                           ; BSR set to: 0
 11269                           ;Port.c: 64: }
 11270                           
 11271                           ; BSR set to: 0
 11272  0138AC  0012               	return	
 11273  0138AE                     l350:
 11274                           
 11275                           ; BSR set to: 0
 11276  0138AE  0100               	movlb	0	; () banked
 11277  0138B0  51BC               	movf	GetPortPORT@pInput& (0+255),w,b
 11278                           
 11279                           ; Switch size 1, requested type "space"
 11280                           ; Number of cases is 7, Range of values is 0 to 6
 11281                           ; switch strategies available:
 11282                           ; Name         Instructions Cycles
 11283                           ; simple_byte           22    12 (average)
 11284                           ;	Chosen strategy is simple_byte
 11285  0138B2  0A00               	xorlw	0	; case 0
 11286  0138B4  B4D8               	btfsc	status,2,c
 11287  0138B6  D7C3               	goto	l351
 11288  0138B8  0A01               	xorlw	1	; case 1
 11289  0138BA  B4D8               	btfsc	status,2,c
 11290  0138BC  D7C7               	goto	l353
 11291  0138BE  0A03               	xorlw	3	; case 2
 11292  0138C0  B4D8               	btfsc	status,2,c
 11293  0138C2  D7CB               	goto	l354
 11294  0138C4  0A01               	xorlw	1	; case 3
 11295  0138C6  B4D8               	btfsc	status,2,c
 11296  0138C8  D7CF               	goto	l355
 11297  0138CA  0A07               	xorlw	7	; case 4
 11298  0138CC  B4D8               	btfsc	status,2,c
 11299  0138CE  D7D3               	goto	l356
 11300  0138D0  0A01               	xorlw	1	; case 5
 11301  0138D2  B4D8               	btfsc	status,2,c
 11302  0138D4  D7D7               	goto	l357
 11303  0138D6  0A03               	xorlw	3	; case 6
 11304  0138D8  B4D8               	btfsc	status,2,c
 11305  0138DA  D7DB               	goto	l358
 11306  0138DC  D7E1               	goto	l359
 11307  0138DE                     __end_of_GetPortPORT:
 11308                           	opt stack 0
 11309                           tblptru	equ	0xFF8
 11310                           tblptrh	equ	0xFF7
 11311                           tblptrl	equ	0xFF6
 11312                           tablat	equ	0xFF5
 11313                           prodh	equ	0xFF4
 11314                           prodl	equ	0xFF3
 11315                           intcon	equ	0xFF2
 11316                           postinc0	equ	0xFEE
 11317                           wreg	equ	0xFE8
 11318                           indf1	equ	0xFE7
 11319                           postdec1	equ	0xFE5
 11320                           fsr1h	equ	0xFE2
 11321                           fsr1l	equ	0xFE1
 11322                           indf2	equ	0xFDF
 11323                           postinc2	equ	0xFDE
 11324                           postdec2	equ	0xFDD
 11325                           plusw2	equ	0xFDB
 11326                           fsr2h	equ	0xFDA
 11327                           fsr2l	equ	0xFD9
 11328                           status	equ	0xFD8
 11329                           
 11330 ;; *************** function _LED_Init *****************
 11331 ;; Defined at:
 11332 ;;		line 15 in file "Library/LED.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;  pLED            1    wreg     enum E6739
 11335 ;; Auto vars:     Size  Location     Type
 11336 ;;  pLED            1   45[BANK0 ] enum E6739
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  1    wreg      void 
 11339 ;; Registers used:
 11340 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11349 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11350 ;;Total ram usage:        1 bytes
 11351 ;; Hardware stack levels used:    1
 11352 ;; Hardware stack levels required when called:   12
 11353 ;; This function calls:
 11354 ;;		_LED_Set
 11355 ;;		_Port_SetPinType
 11356 ;; This function is called by:
 11357 ;;		_MXK_Init
 11358 ;; This function uses a non-reentrant model
 11359 ;;
 11360                           
 11361                           	psect	text36
 11362  01426A                     __ptext36:
 11363                           	opt stack 0
 11364  01426A                     _LED_Init:
 11365                           	opt stack 16
 11366                           
 11367                           ; BSR set to: 0
 11368                           ;incstack = 0
 11369                           ;LED_Init@pLED stored from wreg
 11370  01426A  0100               	movlb	0	; () banked
 11371  01426C  6FE7               	movwf	LED_Init@pLED& (0+255),b
 11372                           
 11373                           ;LED.c: 17: switch (pLED)
 11374  01426E  D01E               	goto	l220
 11375  014270                     
 11376                           ;LED.c: 20: Port_SetPinType(&PortC, eP0, eTypeOutputPushPull);
 11377  014270  0EA4               	movlw	low _PortC
 11378  014272  0100               	movlb	0	; () banked
 11379  014274  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 11380  014276  0E00               	movlw	high _PortC
 11381  014278  0100               	movlb	0	; () banked
 11382  01427A  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 11383  01427C  0E00               	movlw	0
 11384  01427E  0100               	movlb	0	; () banked
 11385  014280  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 11386  014282  0E03               	movlw	3
 11387  014284  0100               	movlb	0	; () banked
 11388  014286  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 11389  014288  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 11390                           
 11391                           ;LED.c: 21: break;
 11392  01428C  D017               	goto	l222
 11393  01428E                     
 11394                           ;LED.c: 23: Port_SetPinType(&PortC, eP1, eTypeOutputPushPull);
 11395  01428E  0EA4               	movlw	low _PortC
 11396  014290  0100               	movlb	0	; () banked
 11397  014292  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 11398  014294  0E00               	movlw	high _PortC
 11399  014296  0100               	movlb	0	; () banked
 11400  014298  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 11401  01429A  0E01               	movlw	1
 11402  01429C  0100               	movlb	0	; () banked
 11403  01429E  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 11404  0142A0  0E03               	movlw	3
 11405  0142A2  0100               	movlb	0	; () banked
 11406  0142A4  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 11407  0142A6  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 11408                           
 11409                           ;LED.c: 25: }
 11410                           
 11411                           ;LED.c: 24: break;
 11412  0142AA  D008               	goto	l222
 11413  0142AC                     l220:
 11414  0142AC  0100               	movlb	0	; () banked
 11415  0142AE  51E7               	movf	LED_Init@pLED& (0+255),w,b
 11416                           
 11417                           ; Switch size 1, requested type "space"
 11418                           ; Number of cases is 2, Range of values is 0 to 1
 11419                           ; switch strategies available:
 11420                           ; Name         Instructions Cycles
 11421                           ; simple_byte            7     4 (average)
 11422                           ;	Chosen strategy is simple_byte
 11423  0142B0  0A00               	xorlw	0	; case 0
 11424  0142B2  B4D8               	btfsc	status,2,c
 11425  0142B4  D7DD               	goto	l221
 11426  0142B6  0A01               	xorlw	1	; case 1
 11427  0142B8  B4D8               	btfsc	status,2,c
 11428  0142BA  D7E9               	goto	l223
 11429  0142BC                     l222:
 11430                           
 11431                           ;LED.c: 26: LED_Set(pLED, 0);
 11432                           
 11433                           ; BSR set to: 0
 11434  0142BC  0E00               	movlw	0
 11435  0142BE  0100               	movlb	0	; () banked
 11436  0142C0  6FCE               	movwf	LED_Set@pValue& (0+255),b
 11437  0142C2  0100               	movlb	0	; () banked
 11438  0142C4  51E7               	movf	LED_Init@pLED& (0+255),w,b
 11439  0142C6  ECE8  F0A1         	call	_LED_Set
 11440  0142CA  0012               	return		;funcret
 11441  0142CC                     __end_of_LED_Init:
 11442                           	opt stack 0
 11443                           tblptru	equ	0xFF8
 11444                           tblptrh	equ	0xFF7
 11445                           tblptrl	equ	0xFF6
 11446                           tablat	equ	0xFF5
 11447                           prodh	equ	0xFF4
 11448                           prodl	equ	0xFF3
 11449                           intcon	equ	0xFF2
 11450                           postinc0	equ	0xFEE
 11451                           wreg	equ	0xFE8
 11452                           indf1	equ	0xFE7
 11453                           postdec1	equ	0xFE5
 11454                           fsr1h	equ	0xFE2
 11455                           fsr1l	equ	0xFE1
 11456                           indf2	equ	0xFDF
 11457                           postinc2	equ	0xFDE
 11458                           postdec2	equ	0xFDD
 11459                           plusw2	equ	0xFDB
 11460                           fsr2h	equ	0xFDA
 11461                           fsr2l	equ	0xFD9
 11462                           status	equ	0xFD8
 11463                           
 11464 ;; *************** function _LED_Set *****************
 11465 ;; Defined at:
 11466 ;;		line 33 in file "Library/LED.c"
 11467 ;; Parameters:    Size  Location     Type
 11468 ;;  pLED            1    wreg     enum E6739
 11469 ;;  pValue          1   20[BANK0 ] unsigned char 
 11470 ;; Auto vars:     Size  Location     Type
 11471 ;;  pLED            1   21[BANK0 ] enum E6739
 11472 ;; Return value:  Size  Location     Type
 11473 ;;                  1    wreg      void 
 11474 ;; Registers used:
 11475 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11476 ;; Tracked objects:
 11477 ;;		On entry : 0/0
 11478 ;;		On exit  : 0/0
 11479 ;;		Unchanged: 0/0
 11480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11481 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11482 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11484 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11485 ;;Total ram usage:        2 bytes
 11486 ;; Hardware stack levels used:    1
 11487 ;; Hardware stack levels required when called:   11
 11488 ;; This function calls:
 11489 ;;		_Port_SetPin
 11490 ;; This function is called by:
 11491 ;;		_LED_Init
 11492 ;;		_SYSTEM_Initialize
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496                           	psect	text37
 11497  0143D0                     __ptext37:
 11498                           	opt stack 0
 11499  0143D0                     _LED_Set:
 11500                           	opt stack 16
 11501                           
 11502                           ;incstack = 0
 11503                           ;LED_Set@pLED stored from wreg
 11504  0143D0  0100               	movlb	0	; () banked
 11505  0143D2  6FCF               	movwf	LED_Set@pLED& (0+255),b
 11506                           
 11507                           ;LED.c: 35: switch (pLED)
 11508  0143D4  D01C               	goto	l227
 11509  0143D6                     
 11510                           ;LED.c: 38: Port_SetPin(&PortC, eP0, pValue);
 11511  0143D6  0EA4               	movlw	low _PortC
 11512  0143D8  0100               	movlb	0	; () banked
 11513  0143DA  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
 11514  0143DC  0E00               	movlw	high _PortC
 11515  0143DE  0100               	movlb	0	; () banked
 11516  0143E0  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
 11517  0143E2  0E00               	movlw	0
 11518  0143E4  0100               	movlb	0	; () banked
 11519  0143E6  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
 11520  0143E8  C0CE  F0CC         	movff	LED_Set@pValue,Port_SetPin@pValue
 11521  0143EC  ECF5  F098         	call	_Port_SetPin	;wreg free
 11522                           
 11523                           ;LED.c: 39: break;
 11524  0143F0  0012               	return	
 11525  0143F2                     
 11526                           ;LED.c: 41: Port_SetPin(&PortC, eP1, pValue);
 11527  0143F2  0EA4               	movlw	low _PortC
 11528  0143F4  0100               	movlb	0	; () banked
 11529  0143F6  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
 11530  0143F8  0E00               	movlw	high _PortC
 11531  0143FA  0100               	movlb	0	; () banked
 11532  0143FC  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
 11533  0143FE  0E01               	movlw	1
 11534  014400  0100               	movlb	0	; () banked
 11535  014402  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
 11536  014404  C0CE  F0CC         	movff	LED_Set@pValue,Port_SetPin@pValue
 11537  014408  ECF5  F098         	call	_Port_SetPin	;wreg free
 11538                           
 11539                           ;LED.c: 43: }
 11540                           
 11541                           ;LED.c: 42: break;
 11542  01440C  0012               	return	
 11543  01440E                     l227:
 11544  01440E  0100               	movlb	0	; () banked
 11545  014410  51CF               	movf	LED_Set@pLED& (0+255),w,b
 11546                           
 11547                           ; Switch size 1, requested type "space"
 11548                           ; Number of cases is 2, Range of values is 0 to 1
 11549                           ; switch strategies available:
 11550                           ; Name         Instructions Cycles
 11551                           ; simple_byte            7     4 (average)
 11552                           ;	Chosen strategy is simple_byte
 11553  014412  0A00               	xorlw	0	; case 0
 11554  014414  B4D8               	btfsc	status,2,c
 11555  014416  D7DF               	goto	l228
 11556  014418  0A01               	xorlw	1	; case 1
 11557  01441A  A4D8               	btfss	status,2,c
 11558  01441C  0012               	return	
 11559  01441E  D7E9               	goto	l230
 11560  014420                     __end_of_LED_Set:
 11561                           	opt stack 0
 11562                           tblptru	equ	0xFF8
 11563                           tblptrh	equ	0xFF7
 11564                           tblptrl	equ	0xFF6
 11565                           tablat	equ	0xFF5
 11566                           prodh	equ	0xFF4
 11567                           prodl	equ	0xFF3
 11568                           intcon	equ	0xFF2
 11569                           postinc0	equ	0xFEE
 11570                           wreg	equ	0xFE8
 11571                           indf1	equ	0xFE7
 11572                           postdec1	equ	0xFE5
 11573                           fsr1h	equ	0xFE2
 11574                           fsr1l	equ	0xFE1
 11575                           indf2	equ	0xFDF
 11576                           postinc2	equ	0xFDE
 11577                           postdec2	equ	0xFDD
 11578                           plusw2	equ	0xFDB
 11579                           fsr2h	equ	0xFDA
 11580                           fsr2l	equ	0xFD9
 11581                           status	equ	0xFD8
 11582                           
 11583 ;; *************** function _MXK_Dequeue *****************
 11584 ;; Defined at:
 11585 ;;		line 153 in file "Library/MXK.c"
 11586 ;; Parameters:    Size  Location     Type
 11587 ;;		None
 11588 ;; Auto vars:     Size  Location     Type
 11589 ;;		None
 11590 ;; Return value:  Size  Location     Type
 11591 ;;                  1    wreg      void 
 11592 ;; Registers used:
 11593 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11594 ;; Tracked objects:
 11595 ;;		On entry : 0/0
 11596 ;;		On exit  : 0/0
 11597 ;;		Unchanged: 0/0
 11598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11603 ;;Total ram usage:        0 bytes
 11604 ;; Hardware stack levels used:    1
 11605 ;; Hardware stack levels required when called:   12
 11606 ;; This function calls:
 11607 ;;		Absolute function
 11608 ;;		_Motor_Step
 11609 ;; This function is called by:
 11610 ;;		_update_SSD
 11611 ;;		_init
 11612 ;;		_update_display1
 11613 ;;		_move_stepper_to
 11614 ;;		_printToConsole
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           	psect	text38
 11619  0146E0                     __ptext38:
 11620                           	opt stack 0
 11621  0146E0                     _MXK_Dequeue:
 11622                           	opt stack 17
 11623                           
 11624                           ;MXK.c: 155: if (lQueue)
 11625                           
 11626                           ;incstack = 0
 11627  0146E0  0100               	movlb	0	; () banked
 11628  0146E2  5163               	movf	_lQueue& (0+255),w,b	;volatile
 11629  0146E4  0100               	movlb	0	; () banked
 11630  0146E6  1164               	iorwf	(_lQueue+1)& (0+255),w,b	;volatile
 11631  0146E8  0100               	movlb	0	; () banked
 11632  0146EA  1165               	iorwf	(_lQueue+2)& (0+255),w,b	;volatile
 11633  0146EC  B4D8               	btfsc	status,2,c
 11634  0146EE  D00D               	goto	u16069
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;MXK.c: 156: lQueue();
 11638  0146F0  D801               	call	u16068
 11639  0146F2  D00B               	goto	u16069
 11640  0146F4                     u16068:
 11641  0146F4  0005               	push	
 11642  0146F6  6EFA               	movwf	pclath,c
 11643  0146F8  0100               	movlb	0	; () banked
 11644  0146FA  5163               	movf	_lQueue& (0+255),w,b	;volatile
 11645  0146FC  6EFD               	movwf	tosl,c
 11646  0146FE  5164               	movf	(_lQueue+1)& (0+255),w,b	;volatile
 11647  014700  6EFE               	movwf	tosh,c
 11648  014702  5165               	movf	(_lQueue+2)& (0+255),w,b	;volatile
 11649  014704  6EFF               	movwf	tosu,c
 11650  014706  50FA               	movf	pclath,w,c
 11651  014708  0012               	return		;indir
 11652  01470A                     u16069:
 11653                           
 11654                           ;MXK.c: 157: lQueue = 0;
 11655  01470A  0E00               	movlw	0
 11656  01470C  0100               	movlb	0	; () banked
 11657  01470E  6F63               	movwf	_lQueue& (0+255),b	;volatile
 11658  014710  0E00               	movlw	0
 11659  014712  0100               	movlb	0	; () banked
 11660  014714  6F64               	movwf	(_lQueue+1)& (0+255),b	;volatile
 11661  014716  0E00               	movlw	0
 11662  014718  0100               	movlb	0	; () banked
 11663  01471A  6F65               	movwf	(_lQueue+2)& (0+255),b	;volatile
 11664                           
 11665                           ; BSR set to: 0
 11666  01471C  0012               	return		;funcret
 11667  01471E                     __end_of_MXK_Dequeue:
 11668                           	opt stack 0
 11669                           tosu	equ	0xFFF
 11670                           tosh	equ	0xFFE
 11671                           tosl	equ	0xFFD
 11672                           pclath	equ	0xFFA
 11673                           tblptru	equ	0xFF8
 11674                           tblptrh	equ	0xFF7
 11675                           tblptrl	equ	0xFF6
 11676                           tablat	equ	0xFF5
 11677                           prodh	equ	0xFF4
 11678                           prodl	equ	0xFF3
 11679                           intcon	equ	0xFF2
 11680                           postinc0	equ	0xFEE
 11681                           wreg	equ	0xFE8
 11682                           indf1	equ	0xFE7
 11683                           postdec1	equ	0xFE5
 11684                           fsr1h	equ	0xFE2
 11685                           fsr1l	equ	0xFE1
 11686                           indf2	equ	0xFDF
 11687                           postinc2	equ	0xFDE
 11688                           postdec2	equ	0xFDD
 11689                           plusw2	equ	0xFDB
 11690                           fsr2h	equ	0xFDA
 11691                           fsr2l	equ	0xFD9
 11692                           status	equ	0xFD8
 11693                           
 11694 ;; *************** function _Motor_Step *****************
 11695 ;; Defined at:
 11696 ;;		line 75 in file "Library/Motor.c"
 11697 ;; Parameters:    Size  Location     Type
 11698 ;;		None
 11699 ;; Auto vars:     Size  Location     Type
 11700 ;;		None
 11701 ;; Return value:  Size  Location     Type
 11702 ;;                  1    wreg      void 
 11703 ;; Registers used:
 11704 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11705 ;; Tracked objects:
 11706 ;;		On entry : 0/0
 11707 ;;		On exit  : 0/0
 11708 ;;		Unchanged: 0/0
 11709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11712 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11713 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11714 ;;Total ram usage:        2 bytes
 11715 ;; Hardware stack levels used:    1
 11716 ;; Hardware stack levels required when called:   11
 11717 ;; This function calls:
 11718 ;;		_MXK_Queue
 11719 ;;		_MXK_Release
 11720 ;;		_MXK_SwitchTo
 11721 ;;		_Port_SetPin
 11722 ;;		_Timer0_Restart
 11723 ;;		_Timer0_Stop
 11724 ;; This function is called by:
 11725 ;;		_Motor_Init
 11726 ;;		_MXK_Dequeue
 11727 ;;		_Timer0_ISR
 11728 ;; This function uses a non-reentrant model
 11729 ;;
 11730                           
 11731                           	psect	text39
 11732  0128BA                     __ptext39:
 11733                           	opt stack 0
 11734  0128BA                     _Motor_Step:
 11735                           	opt stack 0
 11736                           
 11737                           ; BSR set to: 0
 11738                           ;Skip over the trampoline to the duplicate function for level 2
 11739  0128BA  B251               	btfsc	btemp,1,c
 11740  0128BC  EFF8  F095         	goto	i2_Motor_Step
 11741  0128C0                     _Motor_Step$intlevel0:
 11742                           	opt stack 17
 11743                           
 11744                           ;Motor.c: 77: if (MXK_SwitchTo(lMotor->mAddress))
 11745                           
 11746                           ;incstack = 0
 11747  0128C0  0100               	movlb	0	; () banked
 11748  0128C2  EE20 F004          	lfsr	2,4
 11749  0128C6  5177               	movf	_lMotor& (0+255),w,b
 11750  0128C8  26D9               	addwf	fsr2l,f,c
 11751  0128CA  5178               	movf	(_lMotor+1)& (0+255),w,b
 11752  0128CC  22DA               	addwfc	fsr2h,f,c
 11753  0128CE  50DF               	movf	indf2,w,c
 11754  0128D0  EC10  F0A3         	call	_MXK_SwitchTo
 11755  0128D4  0900               	iorlw	0
 11756  0128D6  B4D8               	btfsc	status,2,c
 11757  0128D8  D07A               	goto	l1627
 11758                           
 11759                           ;Motor.c: 78: {
 11760                           ;Motor.c: 79: if (lMotor->mDelta != 0)
 11761  0128DA  C077  FFD9         	movff	_lMotor,fsr2l
 11762  0128DE  C078  FFDA         	movff	_lMotor+1,fsr2h
 11763  0128E2  50DE               	movf	postinc2,w,c
 11764  0128E4  10DE               	iorwf	postinc2,w,c
 11765  0128E6  B4D8               	btfsc	status,2,c
 11766  0128E8  D06D               	goto	l1628
 11767                           
 11768                           ;Motor.c: 80: {
 11769                           ;Motor.c: 82: if (lMotor->mDelta > 0)
 11770  0128EA  C077  FFD9         	movff	_lMotor,fsr2l
 11771  0128EE  C078  FFDA         	movff	_lMotor+1,fsr2h
 11772  0128F2  0E01               	movlw	1
 11773  0128F4  BEDB               	btfsc	plusw2,7,c
 11774  0128F6  D026               	goto	l1629
 11775  0128F8  0E01               	movlw	1
 11776  0128FA  50DB               	movf	plusw2,w,c
 11777  0128FC  E103               	bnz	u10490
 11778  0128FE  04DE               	decf	postinc2,w,c
 11779  012900  A0D8               	btfss	status,0,c
 11780  012902  D020               	goto	l1629
 11781  012904                     u10490:
 11782                           
 11783                           ;Motor.c: 83: {
 11784                           ;Motor.c: 84: if (lMotor->mDelta != 32767)
 11785  012904  C077  FFD9         	movff	_lMotor,fsr2l
 11786  012908  C078  FFDA         	movff	_lMotor+1,fsr2h
 11787  01290C  28DE               	incf	postinc2,w,c
 11788  01290E  E104               	bnz	u10500
 11789  012910  0E7F               	movlw	127
 11790  012912  18DE               	xorwf	postinc2,w,c
 11791  012914  B4D8               	btfsc	status,2,c
 11792  012916  D007               	goto	l1630
 11793  012918                     u10500:
 11794                           
 11795                           ;Motor.c: 85: lMotor->mDelta --;
 11796  012918  C077  FFD9         	movff	_lMotor,fsr2l
 11797  01291C  C078  FFDA         	movff	_lMotor+1,fsr2h
 11798  012920  06DE               	decf	postinc2,f,c
 11799  012922  0E00               	movlw	0
 11800  012924  5ADD               	subwfb	postdec2,f,c
 11801  012926                     l1630:
 11802                           
 11803                           ;Motor.c: 87: Port_SetPin(&PortE, eP0, 1);
 11804  012926  0E90               	movlw	low _PortE
 11805  012928  0100               	movlb	0	; () banked
 11806  01292A  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
 11807  01292C  0E00               	movlw	high _PortE
 11808  01292E  0100               	movlb	0	; () banked
 11809  012930  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
 11810  012932  0E00               	movlw	0
 11811  012934  0100               	movlb	0	; () banked
 11812  012936  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
 11813  012938  0E01               	movlw	1
 11814  01293A  0100               	movlb	0	; () banked
 11815  01293C  6FCC               	movwf	Port_SetPin@pValue& (0+255),b
 11816  01293E  ECF5  F098         	call	_Port_SetPin	;wreg free
 11817                           
 11818                           ;Motor.c: 88: }
 11819  012942  D01F               	goto	l1631
 11820  012944                     l1629:
 11821                           
 11822                           ;Motor.c: 89: else
 11823                           ;Motor.c: 90: {
 11824                           ;Motor.c: 91: if (lMotor->mDelta != -32767)
 11825  012944  C077  FFD9         	movff	_lMotor,fsr2l
 11826  012948  C078  FFDA         	movff	_lMotor+1,fsr2h
 11827  01294C  04DE               	decf	postinc2,w,c
 11828  01294E  E104               	bnz	u10510
 11829  012950  0E80               	movlw	128
 11830  012952  18DE               	xorwf	postinc2,w,c
 11831  012954  B4D8               	btfsc	status,2,c
 11832  012956  D007               	goto	l1632
 11833  012958                     u10510:
 11834                           
 11835                           ;Motor.c: 92: lMotor->mDelta ++;
 11836  012958  C077  FFD9         	movff	_lMotor,fsr2l
 11837  01295C  C078  FFDA         	movff	_lMotor+1,fsr2h
 11838  012960  2ADE               	incf	postinc2,f,c
 11839  012962  0E00               	movlw	0
 11840  012964  22DD               	addwfc	postdec2,f,c
 11841  012966                     l1632:
 11842                           
 11843                           ;Motor.c: 94: Port_SetPin(&PortE, eP0, 0);
 11844  012966  0E90               	movlw	low _PortE
 11845  012968  0100               	movlb	0	; () banked
 11846  01296A  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
 11847  01296C  0E00               	movlw	high _PortE
 11848  01296E  0100               	movlb	0	; () banked
 11849  012970  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
 11850  012972  0E00               	movlw	0
 11851  012974  0100               	movlb	0	; () banked
 11852  012976  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
 11853  012978  0E00               	movlw	0
 11854  01297A  0100               	movlb	0	; () banked
 11855  01297C  6FCC               	movwf	Port_SetPin@pValue& (0+255),b
 11856  01297E  ECF5  F098         	call	_Port_SetPin	;wreg free
 11857  012982                     l1631:
 11858                           
 11859                           ;Motor.c: 95: }
 11860                           ;Motor.c: 98: Port_SetPin(&PortE, eP1, 1);
 11861  012982  0E90               	movlw	low _PortE
 11862  012984  0100               	movlb	0	; () banked
 11863  012986  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
 11864  012988  0E00               	movlw	high _PortE
 11865  01298A  0100               	movlb	0	; () banked
 11866  01298C  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
 11867  01298E  0E01               	movlw	1
 11868  012990  0100               	movlb	0	; () banked
 11869  012992  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
 11870  012994  0E01               	movlw	1
 11871  012996  0100               	movlb	0	; () banked
 11872  012998  6FCC               	movwf	Port_SetPin@pValue& (0+255),b
 11873  01299A  ECF5  F098         	call	_Port_SetPin	;wreg free
 11874                           
 11875                           ;Motor.c: 99: Port_SetPin(&PortE, eP1, 0);
 11876  01299E  0E90               	movlw	low _PortE
 11877  0129A0  0100               	movlb	0	; () banked
 11878  0129A2  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
 11879  0129A4  0E00               	movlw	high _PortE
 11880  0129A6  0100               	movlb	0	; () banked
 11881  0129A8  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
 11882  0129AA  0E01               	movlw	1
 11883  0129AC  0100               	movlb	0	; () banked
 11884  0129AE  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
 11885  0129B0  0E00               	movlw	0
 11886  0129B2  0100               	movlb	0	; () banked
 11887  0129B4  6FCC               	movwf	Port_SetPin@pValue& (0+255),b
 11888  0129B6  ECF5  F098         	call	_Port_SetPin	;wreg free
 11889                           
 11890                           ;Motor.c: 101: MXK_Release();
 11891  0129BA  EC4B  F0A5         	call	_MXK_Release	;wreg free
 11892                           
 11893                           ;Motor.c: 102: Timer0_Restart();
 11894  0129BE  ECC9  F0A5         	call	_Timer0_Restart	;wreg free
 11895                           
 11896                           ;Motor.c: 103: return;
 11897  0129C2  0012               	return	
 11898  0129C4                     l1628:
 11899                           
 11900                           ;Motor.c: 104: }
 11901                           ;Motor.c: 105: MXK_Release();
 11902  0129C4  EC4B  F0A5         	call	_MXK_Release	;wreg free
 11903                           
 11904                           ;Motor.c: 106: Timer0_Stop();
 11905  0129C8  ECE5  F0A5         	call	_Timer0_Stop	;wreg free
 11906                           
 11907                           ;Motor.c: 107: return;
 11908  0129CC  0012               	return	
 11909  0129CE                     l1627:
 11910                           
 11911                           ;Motor.c: 108: }
 11912                           ;Motor.c: 111: MXK_Queue(lStepFunction);
 11913  0129CE  C066  F0BA         	movff	_lStepFunction,MXK_Queue@pCallback
 11914  0129D2  C067  F0BB         	movff	_lStepFunction+1,MXK_Queue@pCallback+1
 11915  0129D6  C068  F0BC         	movff	_lStepFunction+2,MXK_Queue@pCallback+2
 11916  0129DA  ECAF  F0A5         	call	_MXK_Queue	;wreg free
 11917  0129DE  0012               	return		;funcret
 11918  0129E0                     __end_of_Motor_Step:
 11919                           	opt stack 0
 11920                           tosu	equ	0xFFF
 11921                           tosh	equ	0xFFE
 11922                           tosl	equ	0xFFD
 11923                           pclath	equ	0xFFA
 11924                           tblptru	equ	0xFF8
 11925                           tblptrh	equ	0xFF7
 11926                           tblptrl	equ	0xFF6
 11927                           tablat	equ	0xFF5
 11928                           prodh	equ	0xFF4
 11929                           prodl	equ	0xFF3
 11930                           intcon	equ	0xFF2
 11931                           postinc0	equ	0xFEE
 11932                           wreg	equ	0xFE8
 11933                           indf1	equ	0xFE7
 11934                           postdec1	equ	0xFE5
 11935                           fsr1h	equ	0xFE2
 11936                           fsr1l	equ	0xFE1
 11937                           indf2	equ	0xFDF
 11938                           postinc2	equ	0xFDE
 11939                           postdec2	equ	0xFDD
 11940                           plusw2	equ	0xFDB
 11941                           fsr2h	equ	0xFDA
 11942                           fsr2l	equ	0xFD9
 11943                           status	equ	0xFD8
 11944                           
 11945 ;; *************** function _Timer0_Stop *****************
 11946 ;; Defined at:
 11947 ;;		line 89 in file "Library/Timer0.c"
 11948 ;; Parameters:    Size  Location     Type
 11949 ;;		None
 11950 ;; Auto vars:     Size  Location     Type
 11951 ;;		None
 11952 ;; Return value:  Size  Location     Type
 11953 ;;                  1    wreg      void 
 11954 ;; Registers used:
 11955 ;;		None
 11956 ;; Tracked objects:
 11957 ;;		On entry : 0/0
 11958 ;;		On exit  : 0/0
 11959 ;;		Unchanged: 0/0
 11960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11965 ;;Total ram usage:        0 bytes
 11966 ;; Hardware stack levels used:    1
 11967 ;; Hardware stack levels required when called:    7
 11968 ;; This function calls:
 11969 ;;		Nothing
 11970 ;; This function is called by:
 11971 ;;		_Motor_Step
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           	psect	text40
 11976  014BCA                     __ptext40:
 11977                           	opt stack 0
 11978  014BCA                     _Timer0_Stop:
 11979                           	opt stack 20
 11980                           
 11981                           ;Timer0.c: 91: INTCONbits.TMR0IE = 0;
 11982                           
 11983                           ;incstack = 0
 11984  014BCA  9AF2               	bcf	intcon,5,c	;volatile
 11985                           
 11986                           ;Timer0.c: 92: INTCONbits.TMR0IF = 0;
 11987  014BCC  94F2               	bcf	intcon,2,c	;volatile
 11988  014BCE  0012               	return		;funcret
 11989  014BD0                     __end_of_Timer0_Stop:
 11990                           	opt stack 0
 11991                           tosu	equ	0xFFF
 11992                           tosh	equ	0xFFE
 11993                           tosl	equ	0xFFD
 11994                           pclath	equ	0xFFA
 11995                           tblptru	equ	0xFF8
 11996                           tblptrh	equ	0xFF7
 11997                           tblptrl	equ	0xFF6
 11998                           tablat	equ	0xFF5
 11999                           prodh	equ	0xFF4
 12000                           prodl	equ	0xFF3
 12001                           intcon	equ	0xFF2
 12002                           postinc0	equ	0xFEE
 12003                           wreg	equ	0xFE8
 12004                           indf1	equ	0xFE7
 12005                           postdec1	equ	0xFE5
 12006                           fsr1h	equ	0xFE2
 12007                           fsr1l	equ	0xFE1
 12008                           indf2	equ	0xFDF
 12009                           postinc2	equ	0xFDE
 12010                           postdec2	equ	0xFDD
 12011                           plusw2	equ	0xFDB
 12012                           fsr2h	equ	0xFDA
 12013                           fsr2l	equ	0xFD9
 12014                           status	equ	0xFD8
 12015                           
 12016 ;; *************** function _Timer0_Restart *****************
 12017 ;; Defined at:
 12018 ;;		line 83 in file "Library/Timer0.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;		None
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;		None
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  1    wreg      void 
 12025 ;; Registers used:
 12026 ;;		None
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12036 ;;Total ram usage:        0 bytes
 12037 ;; Hardware stack levels used:    1
 12038 ;; Hardware stack levels required when called:    7
 12039 ;; This function calls:
 12040 ;;		Nothing
 12041 ;; This function is called by:
 12042 ;;		_Motor_Step
 12043 ;; This function uses a non-reentrant model
 12044 ;;
 12045                           
 12046                           	psect	text41
 12047  014B92                     __ptext41:
 12048                           	opt stack 0
 12049  014B92                     _Timer0_Restart:
 12050                           	opt stack 20
 12051                           
 12052                           ;Timer0.c: 85: TMR0 = COUNTER;
 12053                           
 12054                           ;incstack = 0
 12055  014B92  C075  FFD6         	movff	_COUNTER,4054	;volatile
 12056  014B96  C076  FFD7         	movff	_COUNTER+1,4055	;volatile
 12057                           
 12058                           ;Timer0.c: 87: INTCONbits.TMR0IE = 1;
 12059  014B9A  8AF2               	bsf	intcon,5,c	;volatile
 12060  014B9C  0012               	return		;funcret
 12061  014B9E                     __end_of_Timer0_Restart:
 12062                           	opt stack 0
 12063                           tosu	equ	0xFFF
 12064                           tosh	equ	0xFFE
 12065                           tosl	equ	0xFFD
 12066                           pclath	equ	0xFFA
 12067                           tblptru	equ	0xFF8
 12068                           tblptrh	equ	0xFF7
 12069                           tblptrl	equ	0xFF6
 12070                           tablat	equ	0xFF5
 12071                           prodh	equ	0xFF4
 12072                           prodl	equ	0xFF3
 12073                           intcon	equ	0xFF2
 12074                           postinc0	equ	0xFEE
 12075                           wreg	equ	0xFE8
 12076                           indf1	equ	0xFE7
 12077                           postdec1	equ	0xFE5
 12078                           fsr1h	equ	0xFE2
 12079                           fsr1l	equ	0xFE1
 12080                           indf2	equ	0xFDF
 12081                           postinc2	equ	0xFDE
 12082                           postdec2	equ	0xFDD
 12083                           plusw2	equ	0xFDB
 12084                           fsr2h	equ	0xFDA
 12085                           fsr2l	equ	0xFD9
 12086                           status	equ	0xFD8
 12087                           
 12088 ;; *************** function _MXK_SwitchTo *****************
 12089 ;; Defined at:
 12090 ;;		line 105 in file "Library/MXK.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;  pModule         1    wreg     enum E6927
 12093 ;; Auto vars:     Size  Location     Type
 12094 ;;  pModule         1    7[BANK0 ] enum E6927
 12095 ;;  CUR             1    6[BANK0 ] unsigned char 
 12096 ;; Return value:  Size  Location     Type
 12097 ;;                  1    wreg      unsigned char 
 12098 ;; Registers used:
 12099 ;;		wreg, status,2, status,0, cstack
 12100 ;; Tracked objects:
 12101 ;;		On entry : 0/0
 12102 ;;		On exit  : 0/0
 12103 ;;		Unchanged: 0/0
 12104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12106 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12108 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12109 ;;Total ram usage:        2 bytes
 12110 ;; Hardware stack levels used:    1
 12111 ;; Hardware stack levels required when called:    8
 12112 ;; This function calls:
 12113 ;;		_delay_us
 12114 ;; This function is called by:
 12115 ;;		_Motor_Step
 12116 ;;		_update_SSD
 12117 ;;		_update_display1
 12118 ;;		_printToConsole
 12119 ;; This function uses a non-reentrant model
 12120 ;;
 12121                           
 12122                           	psect	text42
 12123  014620                     __ptext42:
 12124                           	opt stack 0
 12125  014620                     _MXK_SwitchTo:
 12126                           	opt stack 21
 12127                           
 12128                           ;incstack = 0
 12129                           ;MXK_SwitchTo@pModule stored from wreg
 12130  014620  0100               	movlb	0	; () banked
 12131  014622  6FC1               	movwf	MXK_SwitchTo@pModule& (0+255),b
 12132                           
 12133                           ;MXK.c: 107: UINT8 CUR = 0xF & PORTG;
 12134  014624  5086               	movf	3974,w,c	;volatile
 12135  014626  0B0F               	andlw	15
 12136  014628  0100               	movlb	0	; () banked
 12137  01462A  6FC0               	movwf	MXK_SwitchTo@CUR& (0+255),b
 12138                           
 12139                           ; BSR set to: 0
 12140                           ;MXK.c: 109: if (Bus_State == eMXK_Busy)
 12141  01462C  504C               	movf	_Bus_State,w,c
 12142  01462E  A4D8               	btfss	status,2,c
 12143  014630  D002               	goto	l1730
 12144                           
 12145                           ; BSR set to: 0
 12146                           ;MXK.c: 110: return 0;
 12147  014632  0E00               	movlw	0
 12148                           
 12149                           ; BSR set to: 0
 12150  014634  0012               	return	
 12151  014636                     l1730:
 12152                           
 12153                           ; BSR set to: 0
 12154                           ;MXK.c: 112: Bus_State = eMXK_Busy;
 12155                           
 12156                           ; BSR set to: 0
 12157  014636  0E00               	movlw	0
 12158  014638  6E4C               	movwf	_Bus_State,c
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;MXK.c: 114: if (CUR != pModule)
 12162  01463A  0100               	movlb	0	; () banked
 12163  01463C  51C1               	movf	MXK_SwitchTo@pModule& (0+255),w,b
 12164  01463E  0100               	movlb	0	; () banked
 12165  014640  19C0               	xorwf	MXK_SwitchTo@CUR& (0+255),w,b
 12166  014642  B4D8               	btfsc	status,2,c
 12167  014644  D00C               	goto	l1732
 12168                           
 12169                           ; BSR set to: 0
 12170                           ;MXK.c: 115: {
 12171                           ;MXK.c: 116: PORTG &= ~(0xF);
 12172  014646  0EF0               	movlw	240
 12173  014648  1686               	andwf	3974,f,c	;volatile
 12174                           
 12175                           ;MXK.c: 117: PORTG |= pModule;
 12176  01464A  0100               	movlb	0	; () banked
 12177  01464C  51C1               	movf	MXK_SwitchTo@pModule& (0+255),w,b
 12178  01464E  1286               	iorwf	3974,f,c	;volatile
 12179                           
 12180                           ; BSR set to: 0
 12181                           ;MXK.c: 120: delay_us(10);
 12182  014650  0E00               	movlw	0
 12183  014652  0100               	movlb	0	; () banked
 12184  014654  6FBB               	movwf	(delay_us@us+1)& (0+255),b
 12185  014656  0E0A               	movlw	10
 12186  014658  6FBA               	movwf	delay_us@us& (0+255),b
 12187  01465A  ECBF  F0A1         	call	_delay_us	;wreg free
 12188  01465E                     l1732:
 12189                           
 12190                           ;MXK.c: 121: }
 12191                           ;MXK.c: 122: return 1;
 12192  01465E  0E01               	movlw	1
 12193  014660  0012               	return	
 12194  014662                     __end_of_MXK_SwitchTo:
 12195                           	opt stack 0
 12196                           tosu	equ	0xFFF
 12197                           tosh	equ	0xFFE
 12198                           tosl	equ	0xFFD
 12199                           pclath	equ	0xFFA
 12200                           tblptru	equ	0xFF8
 12201                           tblptrh	equ	0xFF7
 12202                           tblptrl	equ	0xFF6
 12203                           tablat	equ	0xFF5
 12204                           prodh	equ	0xFF4
 12205                           prodl	equ	0xFF3
 12206                           intcon	equ	0xFF2
 12207                           postinc0	equ	0xFEE
 12208                           wreg	equ	0xFE8
 12209                           indf1	equ	0xFE7
 12210                           postdec1	equ	0xFE5
 12211                           fsr1h	equ	0xFE2
 12212                           fsr1l	equ	0xFE1
 12213                           indf2	equ	0xFDF
 12214                           postinc2	equ	0xFDE
 12215                           postdec2	equ	0xFDD
 12216                           plusw2	equ	0xFDB
 12217                           fsr2h	equ	0xFDA
 12218                           fsr2l	equ	0xFD9
 12219                           status	equ	0xFD8
 12220                           
 12221 ;; *************** function _MXK_Release *****************
 12222 ;; Defined at:
 12223 ;;		line 130 in file "Library/MXK.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;		None
 12226 ;; Auto vars:     Size  Location     Type
 12227 ;;		None
 12228 ;; Return value:  Size  Location     Type
 12229 ;;                  1    wreg      unsigned char 
 12230 ;; Registers used:
 12231 ;;		wreg, status,2, status,0
 12232 ;; Tracked objects:
 12233 ;;		On entry : 0/0
 12234 ;;		On exit  : 0/0
 12235 ;;		Unchanged: 0/0
 12236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12237 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12240 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12241 ;;Total ram usage:        0 bytes
 12242 ;; Hardware stack levels used:    1
 12243 ;; Hardware stack levels required when called:    7
 12244 ;; This function calls:
 12245 ;;		Nothing
 12246 ;; This function is called by:
 12247 ;;		_Motor_Step
 12248 ;;		_update_SSD
 12249 ;;		_init
 12250 ;;		_update_display1
 12251 ;;		_move_stepper_to
 12252 ;;		_printToConsole
 12253 ;; This function uses a non-reentrant model
 12254 ;;
 12255                           
 12256                           	psect	text43
 12257  014A96                     __ptext43:
 12258                           	opt stack 0
 12259  014A96                     _MXK_Release:
 12260                           	opt stack 22
 12261                           
 12262                           ;MXK.c: 132: Bus_State = eMXK_Idle;
 12263                           
 12264                           ;incstack = 0
 12265  014A96  0E01               	movlw	1
 12266  014A98  6E4C               	movwf	_Bus_State,c
 12267                           
 12268                           ;MXK.c: 134: if (lQueue != 0)
 12269  014A9A  0100               	movlb	0	; () banked
 12270  014A9C  5163               	movf	_lQueue& (0+255),w,b	;volatile
 12271  014A9E  0100               	movlb	0	; () banked
 12272  014AA0  1164               	iorwf	(_lQueue+1)& (0+255),w,b	;volatile
 12273  014AA2  0100               	movlb	0	; () banked
 12274  014AA4  1165               	iorwf	(_lQueue+2)& (0+255),w,b	;volatile
 12275  014AA6  B4D8               	btfsc	status,2,c
 12276  014AA8  D002               	goto	l1735
 12277                           
 12278                           ; BSR set to: 0
 12279                           ;MXK.c: 135: return 1;
 12280  014AAA  0E01               	movlw	1
 12281                           
 12282                           ; BSR set to: 0
 12283  014AAC  0012               	return	
 12284  014AAE                     l1735:
 12285                           
 12286                           ; BSR set to: 0
 12287                           ;MXK.c: 137: return 0;
 12288                           
 12289                           ; BSR set to: 0
 12290  014AAE  0E00               	movlw	0
 12291  014AB0  0012               	return	
 12292  014AB2                     __end_of_MXK_Release:
 12293                           	opt stack 0
 12294                           tosu	equ	0xFFF
 12295                           tosh	equ	0xFFE
 12296                           tosl	equ	0xFFD
 12297                           pclath	equ	0xFFA
 12298                           tblptru	equ	0xFF8
 12299                           tblptrh	equ	0xFF7
 12300                           tblptrl	equ	0xFF6
 12301                           tablat	equ	0xFF5
 12302                           prodh	equ	0xFF4
 12303                           prodl	equ	0xFF3
 12304                           intcon	equ	0xFF2
 12305                           postinc0	equ	0xFEE
 12306                           wreg	equ	0xFE8
 12307                           indf1	equ	0xFE7
 12308                           postdec1	equ	0xFE5
 12309                           fsr1h	equ	0xFE2
 12310                           fsr1l	equ	0xFE1
 12311                           indf2	equ	0xFDF
 12312                           postinc2	equ	0xFDE
 12313                           postdec2	equ	0xFDD
 12314                           plusw2	equ	0xFDB
 12315                           fsr2h	equ	0xFDA
 12316                           fsr2l	equ	0xFD9
 12317                           status	equ	0xFD8
 12318                           
 12319 ;; *************** function _MXK_Queue *****************
 12320 ;; Defined at:
 12321 ;;		line 144 in file "Library/MXK.c"
 12322 ;; Parameters:    Size  Location     Type
 12323 ;;  pCallback       3    0[BANK0 ] PTR FTN()void 
 12324 ;;		 -> Absolute function(1), Motor_Step(1), 
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;		None
 12327 ;; Return value:  Size  Location     Type
 12328 ;;                  1    wreg      void 
 12329 ;; Registers used:
 12330 ;;		wreg, status,2, status,0
 12331 ;; Tracked objects:
 12332 ;;		On entry : 0/0
 12333 ;;		On exit  : 0/0
 12334 ;;		Unchanged: 0/0
 12335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12336 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12339 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12340 ;;Total ram usage:        3 bytes
 12341 ;; Hardware stack levels used:    1
 12342 ;; Hardware stack levels required when called:    7
 12343 ;; This function calls:
 12344 ;;		Nothing
 12345 ;; This function is called by:
 12346 ;;		_Motor_Step
 12347 ;; This function uses a non-reentrant model
 12348 ;;
 12349                           
 12350                           	psect	text44
 12351  014B5E                     __ptext44:
 12352                           	opt stack 0
 12353  014B5E                     _MXK_Queue:
 12354                           	opt stack 20
 12355                           
 12356                           ;MXK.c: 146: lQueue = pCallback;
 12357                           
 12358                           ; BSR set to: 0
 12359                           ;incstack = 0
 12360  014B5E  C0BA  F063         	movff	MXK_Queue@pCallback,_lQueue	;volatile
 12361  014B62  C0BB  F064         	movff	MXK_Queue@pCallback+1,_lQueue+1	;volatile
 12362  014B66  C0BC  F065         	movff	MXK_Queue@pCallback+2,_lQueue+2	;volatile
 12363  014B6A  0012               	return		;funcret
 12364  014B6C                     __end_of_MXK_Queue:
 12365                           	opt stack 0
 12366                           tosu	equ	0xFFF
 12367                           tosh	equ	0xFFE
 12368                           tosl	equ	0xFFD
 12369                           pclath	equ	0xFFA
 12370                           tblptru	equ	0xFF8
 12371                           tblptrh	equ	0xFF7
 12372                           tblptrl	equ	0xFF6
 12373                           tablat	equ	0xFF5
 12374                           prodh	equ	0xFF4
 12375                           prodl	equ	0xFF3
 12376                           intcon	equ	0xFF2
 12377                           postinc0	equ	0xFEE
 12378                           wreg	equ	0xFE8
 12379                           indf1	equ	0xFE7
 12380                           postdec1	equ	0xFE5
 12381                           fsr1h	equ	0xFE2
 12382                           fsr1l	equ	0xFE1
 12383                           indf2	equ	0xFDF
 12384                           postinc2	equ	0xFDE
 12385                           postdec2	equ	0xFDD
 12386                           plusw2	equ	0xFDB
 12387                           fsr2h	equ	0xFDA
 12388                           fsr2l	equ	0xFD9
 12389                           status	equ	0xFD8
 12390                           
 12391 ;; *************** function _MXK_BlockSwitchTo *****************
 12392 ;; Defined at:
 12393 ;;		line 82 in file "Library/MXK.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;  pModule         1    wreg     enum E6927
 12396 ;; Auto vars:     Size  Location     Type
 12397 ;;  pModule         1    7[BANK0 ] enum E6927
 12398 ;;  CUR             1    6[BANK0 ] unsigned char 
 12399 ;; Return value:  Size  Location     Type
 12400 ;;                  1    wreg      unsigned char 
 12401 ;; Registers used:
 12402 ;;		wreg, status,2, status,0, cstack
 12403 ;; Tracked objects:
 12404 ;;		On entry : 0/0
 12405 ;;		On exit  : 0/0
 12406 ;;		Unchanged: 0/0
 12407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12409 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12411 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;Total ram usage:        2 bytes
 12413 ;; Hardware stack levels used:    1
 12414 ;; Hardware stack levels required when called:    8
 12415 ;; This function calls:
 12416 ;;		_delay_us
 12417 ;; This function is called by:
 12418 ;;		_init
 12419 ;;		_move_stepper_to
 12420 ;; This function uses a non-reentrant model
 12421 ;;
 12422                           
 12423                           	psect	text45
 12424  01471E                     __ptext45:
 12425                           	opt stack 0
 12426  01471E                     _MXK_BlockSwitchTo:
 12427                           	opt stack 21
 12428                           
 12429                           ;incstack = 0
 12430                           ;MXK_BlockSwitchTo@pModule stored from wreg
 12431  01471E  0100               	movlb	0	; () banked
 12432  014720  6FC1               	movwf	MXK_BlockSwitchTo@pModule& (0+255),b
 12433                           
 12434                           ;MXK.c: 85: UINT8 CUR = 0xF & PORTG;
 12435  014722  5086               	movf	3974,w,c	;volatile
 12436  014724  0B0F               	andlw	15
 12437  014726  0100               	movlb	0	; () banked
 12438  014728  6FC0               	movwf	MXK_BlockSwitchTo@CUR& (0+255),b
 12439  01472A                     
 12440                           ; BSR set to: 0
 12441                           
 12442                           ; BSR set to: 0
 12443  01472A  504C               	movf	_Bus_State,w,c
 12444  01472C  B4D8               	btfsc	status,2,c
 12445  01472E  D7FD               	goto	l1724
 12446                           
 12447                           ;MXK.c: 88: Bus_State = eMXK_Busy;
 12448  014730  0E00               	movlw	0
 12449  014732  6E4C               	movwf	_Bus_State,c
 12450                           
 12451                           ;MXK.c: 90: if (CUR != pModule)
 12452  014734  0100               	movlb	0	; () banked
 12453  014736  51C1               	movf	MXK_BlockSwitchTo@pModule& (0+255),w,b
 12454  014738  0100               	movlb	0	; () banked
 12455  01473A  19C0               	xorwf	MXK_BlockSwitchTo@CUR& (0+255),w,b
 12456  01473C  B4D8               	btfsc	status,2,c
 12457  01473E  D00C               	goto	l1726
 12458                           
 12459                           ; BSR set to: 0
 12460                           ;MXK.c: 91: {
 12461                           ;MXK.c: 92: PORTG &= ~(0xF);
 12462  014740  0EF0               	movlw	240
 12463  014742  1686               	andwf	3974,f,c	;volatile
 12464                           
 12465                           ;MXK.c: 93: PORTG |= pModule;
 12466  014744  0100               	movlb	0	; () banked
 12467  014746  51C1               	movf	MXK_BlockSwitchTo@pModule& (0+255),w,b
 12468  014748  1286               	iorwf	3974,f,c	;volatile
 12469                           
 12470                           ; BSR set to: 0
 12471                           ;MXK.c: 96: delay_us(10);
 12472  01474A  0E00               	movlw	0
 12473  01474C  0100               	movlb	0	; () banked
 12474  01474E  6FBB               	movwf	(delay_us@us+1)& (0+255),b
 12475  014750  0E0A               	movlw	10
 12476  014752  6FBA               	movwf	delay_us@us& (0+255),b
 12477  014754  ECBF  F0A1         	call	_delay_us	;wreg free
 12478  014758                     l1726:
 12479                           
 12480                           ;MXK.c: 97: }
 12481                           ;MXK.c: 98: return 1;
 12482  014758  0E01               	movlw	1
 12483  01475A  0012               	return	
 12484  01475C                     __end_of_MXK_BlockSwitchTo:
 12485                           	opt stack 0
 12486                           tosu	equ	0xFFF
 12487                           tosh	equ	0xFFE
 12488                           tosl	equ	0xFFD
 12489                           pclath	equ	0xFFA
 12490                           tblptru	equ	0xFF8
 12491                           tblptrh	equ	0xFF7
 12492                           tblptrl	equ	0xFF6
 12493                           tablat	equ	0xFF5
 12494                           prodh	equ	0xFF4
 12495                           prodl	equ	0xFF3
 12496                           intcon	equ	0xFF2
 12497                           postinc0	equ	0xFEE
 12498                           wreg	equ	0xFE8
 12499                           indf1	equ	0xFE7
 12500                           postdec1	equ	0xFE5
 12501                           fsr1h	equ	0xFE2
 12502                           fsr1l	equ	0xFE1
 12503                           indf2	equ	0xFDF
 12504                           postinc2	equ	0xFDE
 12505                           postdec2	equ	0xFDD
 12506                           plusw2	equ	0xFDB
 12507                           fsr2h	equ	0xFDA
 12508                           fsr2l	equ	0xFD9
 12509                           status	equ	0xFD8
 12510                           
 12511 ;; *************** function _delay_us *****************
 12512 ;; Defined at:
 12513 ;;		line 255 in file "Library/Types.c"
 12514 ;; Parameters:    Size  Location     Type
 12515 ;;  us              2    0[BANK0 ] unsigned short 
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;  u               4    2[BANK0 ] unsigned long 
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  1    wreg      void 
 12520 ;; Registers used:
 12521 ;;		wreg, status,2, status,0
 12522 ;; Tracked objects:
 12523 ;;		On entry : 0/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12527 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12528 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12530 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12531 ;;Total ram usage:        6 bytes
 12532 ;; Hardware stack levels used:    1
 12533 ;; Hardware stack levels required when called:    7
 12534 ;; This function calls:
 12535 ;;		Nothing
 12536 ;; This function is called by:
 12537 ;;		_MXK_BlockSwitchTo
 12538 ;;		_MXK_SwitchTo
 12539 ;; This function uses a non-reentrant model
 12540 ;;
 12541                           
 12542                           	psect	text46
 12543  01437E                     __ptext46:
 12544                           	opt stack 0
 12545  01437E                     _delay_us:
 12546                           	opt stack 21
 12547                           
 12548                           ;Types.c: 256: unsigned long u;
 12549                           ;Types.c: 257: while (us--) {
 12550                           
 12551                           ;incstack = 0
 12552  01437E  D01C               	goto	u9790
 12553  014380                     l12826:
 12554                           
 12555                           ;Types.c: 259: for (u = 0; u < ((((48*1000000L) / 4000UL) / 10UL)/1000UL); u++) {
 12556  014380  0E00               	movlw	0
 12557  014382  0100               	movlb	0	; () banked
 12558  014384  6FBC               	movwf	delay_us@u& (0+255),b
 12559  014386  0E00               	movlw	0
 12560  014388  6FBD               	movwf	(delay_us@u+1)& (0+255),b
 12561  01438A  0E00               	movlw	0
 12562  01438C  6FBE               	movwf	(delay_us@u+2)& (0+255),b
 12563  01438E  0E00               	movlw	0
 12564  014390  6FBF               	movwf	(delay_us@u+3)& (0+255),b
 12565  014392                     l12828:
 12566                           
 12567                           ; BSR set to: 0
 12568  014392  0100               	movlb	0	; () banked
 12569  014394  51BC               	movf	delay_us@u& (0+255),w,b
 12570  014396  0100               	movlb	0	; () banked
 12571  014398  11BD               	iorwf	(delay_us@u+1)& (0+255),w,b
 12572  01439A  0100               	movlb	0	; () banked
 12573  01439C  11BE               	iorwf	(delay_us@u+2)& (0+255),w,b
 12574  01439E  0100               	movlb	0	; () banked
 12575  0143A0  11BF               	iorwf	(delay_us@u+3)& (0+255),w,b
 12576  0143A2  A4D8               	btfss	status,2,c
 12577  0143A4  D009               	goto	u9790
 12578                           
 12579                           ; BSR set to: 0
 12580                           
 12581                           ; BSR set to: 0
 12582  0143A6  F000               	nop		; ;# 
 12583  0143A8  0E01               	movlw	1
 12584  0143AA  0100               	movlb	0	; () banked
 12585  0143AC  27BC               	addwf	delay_us@u& (0+255),f,b
 12586  0143AE  0E00               	movlw	0
 12587  0143B0  23BD               	addwfc	(delay_us@u+1)& (0+255),f,b
 12588  0143B2  23BE               	addwfc	(delay_us@u+2)& (0+255),f,b
 12589  0143B4  23BF               	addwfc	(delay_us@u+3)& (0+255),f,b
 12590  0143B6  D7ED               	goto	l12828
 12591  0143B8                     u9790:
 12592                           
 12593                           ; BSR set to: 0
 12594                           
 12595                           ; BSR set to: 0
 12596  0143B8  0100               	movlb	0	; () banked
 12597  0143BA  07BA               	decf	delay_us@us& (0+255),f,b
 12598  0143BC  A0D8               	btfss	status,0,c
 12599  0143BE  07BB               	decf	(delay_us@us+1)& (0+255),f,b
 12600  0143C0  0100               	movlb	0	; () banked
 12601  0143C2  29BA               	incf	delay_us@us& (0+255),w,b
 12602  0143C4  E1DD               	bnz	l12826
 12603  0143C6  0100               	movlb	0	; () banked
 12604  0143C8  29BB               	incf	(delay_us@us+1)& (0+255),w,b
 12605  0143CA  B4D8               	btfsc	status,2,c
 12606  0143CC  0012               	return	
 12607  0143CE  D7D8               	goto	l832
 12608  0143D0                     __end_of_delay_us:
 12609                           	opt stack 0
 12610                           tosu	equ	0xFFF
 12611                           tosh	equ	0xFFE
 12612                           tosl	equ	0xFFD
 12613                           pclath	equ	0xFFA
 12614                           tblptru	equ	0xFF8
 12615                           tblptrh	equ	0xFF7
 12616                           tblptrl	equ	0xFF6
 12617                           tablat	equ	0xFF5
 12618                           prodh	equ	0xFF4
 12619                           prodl	equ	0xFF3
 12620                           intcon	equ	0xFF2
 12621                           postinc0	equ	0xFEE
 12622                           wreg	equ	0xFE8
 12623                           indf1	equ	0xFE7
 12624                           postdec1	equ	0xFE5
 12625                           fsr1h	equ	0xFE2
 12626                           fsr1l	equ	0xFE1
 12627                           indf2	equ	0xFDF
 12628                           postinc2	equ	0xFDE
 12629                           postdec2	equ	0xFDD
 12630                           plusw2	equ	0xFDB
 12631                           fsr2h	equ	0xFDA
 12632                           fsr2l	equ	0xFD9
 12633                           status	equ	0xFD8
 12634                           
 12635 ;; *************** function _LCD_Init *****************
 12636 ;; Defined at:
 12637 ;;		line 172 in file "Library/LCD.c"
 12638 ;; Parameters:    Size  Location     Type
 12639 ;;		None
 12640 ;; Auto vars:     Size  Location     Type
 12641 ;;  i               2   55[BANK0 ] unsigned short 
 12642 ;; Return value:  Size  Location     Type
 12643 ;;                  1    wreg      void 
 12644 ;; Registers used:
 12645 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12646 ;; Tracked objects:
 12647 ;;		On entry : 0/0
 12648 ;;		On exit  : 0/0
 12649 ;;		Unchanged: 0/0
 12650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12653 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12654 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12655 ;;Total ram usage:        4 bytes
 12656 ;; Hardware stack levels used:    1
 12657 ;; Hardware stack levels required when called:   15
 12658 ;; This function calls:
 12659 ;;		_Configure_GPIOs
 12660 ;;		_LCD_Fill
 12661 ;;		_LCD_Write
 12662 ;;		_Set_Rotation
 12663 ;;		_delay_ms
 12664 ;; This function is called by:
 12665 ;;		_init
 12666 ;; This function uses a non-reentrant model
 12667 ;;
 12668                           
 12669                           	psect	text47
 12670  012484                     __ptext47:
 12671                           	opt stack 0
 12672  012484                     _LCD_Init:
 12673                           	opt stack 14
 12674                           
 12675                           ;LCD.c: 174: UINT16 i;
 12676                           ;LCD.c: 175: Configure_GPIOs();
 12677                           
 12678                           ; BSR set to: 0
 12679                           ;incstack = 0
 12680  012484  ECC4  F09F         	call	_Configure_GPIOs	;wreg free
 12681                           
 12682                           ;LCD.c: 177: for (i = 0; i < (sizeof(InitList)/sizeof(InitList[0])); i++)
 12683  012488  0E00               	movlw	0
 12684  01248A  0100               	movlb	0	; () banked
 12685  01248C  6FF2               	movwf	(LCD_Init@i+1)& (0+255),b
 12686  01248E  0E00               	movlw	0
 12687  012490  6FF1               	movwf	LCD_Init@i& (0+255),b
 12688                           
 12689                           ; BSR set to: 0
 12690  012492  0100               	movlb	0	; () banked
 12691  012494  51F2               	movf	(LCD_Init@i+1)& (0+255),w,b
 12692  012496  E106               	bnz	u11140
 12693  012498  0E59               	movlw	89
 12694  01249A  0100               	movlb	0	; () banked
 12695  01249C  5DF1               	subwf	LCD_Init@i& (0+255),w,b
 12696  01249E  B0D8               	btfsc	status,0,c
 12697  0124A0  D08B               	goto	u11180
 12698  0124A2  D001               	goto	l85
 12699  0124A4                     u11140:
 12700                           
 12701                           ; BSR set to: 0
 12702  0124A4  D089               	goto	u11180
 12703  0124A6                     l85:
 12704                           
 12705                           ; BSR set to: 0
 12706                           ;LCD.c: 178: {
 12707                           ;LCD.c: 179: if (0x80 == InitList[i] && (i < ((sizeof(InitList)/sizeof(InitList[0])) - 1
      +                          )))
 12708                           
 12709                           ; BSR set to: 0
 12710  0124A6  90D8               	bcf	status,0,c
 12711  0124A8  0100               	movlb	0	; () banked
 12712  0124AA  35F1               	rlcf	LCD_Init@i& (0+255),w,b
 12713  0124AC  6EF6               	movwf	tblptrl,c
 12714  0124AE  0100               	movlb	0	; () banked
 12715  0124B0  35F2               	rlcf	(LCD_Init@i+1)& (0+255),w,b
 12716  0124B2  6EF7               	movwf	tblptrh,c
 12717  0124B4  0EF3               	movlw	low _InitList
 12718  0124B6  26F6               	addwf	tblptrl,f,c
 12719  0124B8  0EFC               	movlw	high _InitList
 12720  0124BA  22F7               	addwfc	tblptrh,f,c
 12721  0124BC                     	if	1	;There are 3 active tblptr bytes
 12722  0124BC  6AF8               	clrf	tblptru,c
 12723  0124BE  0E00               	movlw	low (__mediumconst shr (0+16))
 12724  0124C0  22F8               	addwfc	tblptru,f,c
 12725  0124C2                     	endif
 12726  0124C2  0009               	tblrd		*+
 12727  0124C4  0E80               	movlw	128
 12728  0124C6  18F5               	xorwf	tablat,w,c
 12729  0124C8  0009               	tblrd		*+
 12730  0124CA  10F5               	iorwf	tablat,w,c
 12731  0124CC  A4D8               	btfss	status,2,c
 12732  0124CE  D022               	goto	l87
 12733                           
 12734                           ; BSR set to: 0
 12735  0124D0  0100               	movlb	0	; () banked
 12736  0124D2  51F2               	movf	(LCD_Init@i+1)& (0+255),w,b
 12737  0124D4  E11F               	bnz	l14330
 12738  0124D6  0E58               	movlw	88
 12739  0124D8  0100               	movlb	0	; () banked
 12740  0124DA  5DF1               	subwf	LCD_Init@i& (0+255),w,b
 12741  0124DC  B0D8               	btfsc	status,0,c
 12742  0124DE  D01A               	goto	l87
 12743                           
 12744                           ; BSR set to: 0
 12745                           ;LCD.c: 180: delay_ms(InitList[++i]);
 12746  0124E0  0100               	movlb	0	; () banked
 12747  0124E2  4BF1               	infsnz	LCD_Init@i& (0+255),f,b
 12748  0124E4  2BF2               	incf	(LCD_Init@i+1)& (0+255),f,b
 12749  0124E6  90D8               	bcf	status,0,c
 12750  0124E8  0100               	movlb	0	; () banked
 12751  0124EA  35F1               	rlcf	LCD_Init@i& (0+255),w,b
 12752  0124EC  6EF6               	movwf	tblptrl,c
 12753  0124EE  0100               	movlb	0	; () banked
 12754  0124F0  35F2               	rlcf	(LCD_Init@i+1)& (0+255),w,b
 12755  0124F2  6EF7               	movwf	tblptrh,c
 12756  0124F4  0EF3               	movlw	low _InitList
 12757  0124F6  26F6               	addwf	tblptrl,f,c
 12758  0124F8  0EFC               	movlw	high _InitList
 12759  0124FA  22F7               	addwfc	tblptrh,f,c
 12760  0124FC                     	if	1	;There are 3 active tblptr bytes
 12761  0124FC  6AF8               	clrf	tblptru,c
 12762  0124FE  0E00               	movlw	low (__mediumconst shr (0+16))
 12763  012500  22F8               	addwfc	tblptru,f,c
 12764  012502                     	endif
 12765  012502  0009               	tblrd		*+
 12766  012504  CFF5 F0BA          	movff	tablat,delay_ms@ms
 12767  012508  000A               	tblrd		*-
 12768  01250A  CFF5 F0BB          	movff	tablat,delay_ms@ms+1
 12769  01250E  EC68  F0A0         	call	_delay_ms	;wreg free
 12770  012512  D04B               	goto	l90
 12771  012514                     l87:
 12772  012514                     l14330:
 12773                           
 12774                           ;LCD.c: 181: else
 12775                           ;LCD.c: 182: {
 12776                           ;LCD.c: 183: if (InitList[i] > 0xFF) LCD_Write((InitList[i]>>8), eCommand);
 12777  012514  90D8               	bcf	status,0,c
 12778  012516  0100               	movlb	0	; () banked
 12779  012518  35F1               	rlcf	LCD_Init@i& (0+255),w,b
 12780  01251A  6EF6               	movwf	tblptrl,c
 12781  01251C  0100               	movlb	0	; () banked
 12782  01251E  35F2               	rlcf	(LCD_Init@i+1)& (0+255),w,b
 12783  012520  6EF7               	movwf	tblptrh,c
 12784  012522  0EF3               	movlw	low _InitList
 12785  012524  26F6               	addwf	tblptrl,f,c
 12786  012526  0EFC               	movlw	high _InitList
 12787  012528  22F7               	addwfc	tblptrh,f,c
 12788  01252A                     	if	1	;There are 3 active tblptr bytes
 12789  01252A  6AF8               	clrf	tblptru,c
 12790  01252C  0E00               	movlw	low (__mediumconst shr (0+16))
 12791  01252E  22F8               	addwfc	tblptru,f,c
 12792  012530                     	endif
 12793  012530  0009               	tblrd		*+
 12794  012532  0E00               	movlw	0
 12795  012534  5EF5               	subwf	tablat,f,c
 12796  012536  0009               	tblrd		*+
 12797  012538  0E01               	movlw	1
 12798  01253A  5AF5               	subwfb	tablat,f,c
 12799  01253C  A0D8               	btfss	status,0,c
 12800  01253E  D020               	goto	l89
 12801                           
 12802                           ; BSR set to: 0
 12803  012540  0E00               	movlw	0
 12804  012542  0100               	movlb	0	; () banked
 12805  012544  6FBD               	movwf	LCD_Write@mode& (0+255),b
 12806  012546  90D8               	bcf	status,0,c
 12807  012548  0100               	movlb	0	; () banked
 12808  01254A  35F1               	rlcf	LCD_Init@i& (0+255),w,b
 12809  01254C  6EF6               	movwf	tblptrl,c
 12810  01254E  0100               	movlb	0	; () banked
 12811  012550  35F2               	rlcf	(LCD_Init@i+1)& (0+255),w,b
 12812  012552  6EF7               	movwf	tblptrh,c
 12813  012554  0EF3               	movlw	low _InitList
 12814  012556  26F6               	addwf	tblptrl,f,c
 12815  012558  0EFC               	movlw	high _InitList
 12816  01255A  22F7               	addwfc	tblptrh,f,c
 12817  01255C                     	if	1	;There are 3 active tblptr bytes
 12818  01255C  6AF8               	clrf	tblptru,c
 12819  01255E  0E00               	movlw	low (__mediumconst shr (0+16))
 12820  012560  22F8               	addwfc	tblptru,f,c
 12821  012562                     	endif
 12822  012562  0009               	tblrd		*+
 12823  012564  CFF5 F0EF          	movff	tablat,??_LCD_Init
 12824  012568  0009               	tblrd		*+
 12825  01256A  CFF5 F0F0          	movff	tablat,??_LCD_Init+1
 12826  01256E  C0F0  F0EF         	movff	??_LCD_Init+1,??_LCD_Init
 12827  012572  0100               	movlb	0	; () banked
 12828  012574  6BF0               	clrf	(??_LCD_Init+1)& (0+255),b
 12829  012576  0100               	movlb	0	; () banked
 12830  012578  51EF               	movf	??_LCD_Init& (0+255),w,b
 12831  01257A  EC9F  F0A4         	call	_LCD_Write
 12832  01257E  D015               	goto	l90
 12833  012580                     l89:
 12834                           
 12835                           ;LCD.c: 184: else LCD_Write(InitList[i], eData);
 12836  012580  0E01               	movlw	1
 12837  012582  0100               	movlb	0	; () banked
 12838  012584  6FBD               	movwf	LCD_Write@mode& (0+255),b
 12839  012586  90D8               	bcf	status,0,c
 12840  012588  0100               	movlb	0	; () banked
 12841  01258A  35F1               	rlcf	LCD_Init@i& (0+255),w,b
 12842  01258C  6EF6               	movwf	tblptrl,c
 12843  01258E  0100               	movlb	0	; () banked
 12844  012590  35F2               	rlcf	(LCD_Init@i+1)& (0+255),w,b
 12845  012592  6EF7               	movwf	tblptrh,c
 12846  012594  0EF3               	movlw	low _InitList
 12847  012596  26F6               	addwf	tblptrl,f,c
 12848  012598  0EFC               	movlw	high _InitList
 12849  01259A  22F7               	addwfc	tblptrh,f,c
 12850  01259C                     	if	1	;There are 3 active tblptr bytes
 12851  01259C  6AF8               	clrf	tblptru,c
 12852  01259E  0E00               	movlw	low (__mediumconst shr (0+16))
 12853  0125A0  22F8               	addwfc	tblptru,f,c
 12854  0125A2                     	endif
 12855  0125A2  0008               	tblrd		*
 12856  0125A4  50F5               	movf	tablat,w,c
 12857  0125A6  EC9F  F0A4         	call	_LCD_Write
 12858  0125AA                     l90:
 12859  0125AA  0100               	movlb	0	; () banked
 12860  0125AC  4BF1               	infsnz	LCD_Init@i& (0+255),f,b
 12861  0125AE  2BF2               	incf	(LCD_Init@i+1)& (0+255),f,b
 12862                           
 12863                           ; BSR set to: 0
 12864  0125B0  0100               	movlb	0	; () banked
 12865  0125B2  51F2               	movf	(LCD_Init@i+1)& (0+255),w,b
 12866  0125B4  E101               	bnz	l14340
 12867  0125B6  D770               	goto	L11
 12868  0125B8                     u11180:
 12869  0125B8                     l14340:
 12870                           
 12871                           ; BSR set to: 0
 12872                           ;LCD.c: 185: }
 12873                           ;LCD.c: 186: }
 12874                           ;LCD.c: 187: delay_ms(100);
 12875  0125B8  0E00               	movlw	0
 12876  0125BA  0100               	movlb	0	; () banked
 12877  0125BC  6FBB               	movwf	(delay_ms@ms+1)& (0+255),b
 12878  0125BE  0E64               	movlw	100
 12879  0125C0  6FBA               	movwf	delay_ms@ms& (0+255),b
 12880  0125C2  EC68  F0A0         	call	_delay_ms	;wreg free
 12881                           
 12882                           ;LCD.c: 188: LCD_Write(0x29, eCommand);
 12883  0125C6  0E00               	movlw	0
 12884  0125C8  0100               	movlb	0	; () banked
 12885  0125CA  6FBD               	movwf	LCD_Write@mode& (0+255),b
 12886  0125CC  0E29               	movlw	41
 12887  0125CE  EC9F  F0A4         	call	_LCD_Write
 12888                           
 12889                           ;LCD.c: 189: Set_Rotation(1);
 12890  0125D2  0E01               	movlw	1
 12891  0125D4  ECBD  F09C         	call	_Set_Rotation
 12892                           
 12893                           ;LCD.c: 191: delay_ms(100);
 12894  0125D8  0E00               	movlw	0
 12895  0125DA  0100               	movlb	0	; () banked
 12896  0125DC  6FBB               	movwf	(delay_ms@ms+1)& (0+255),b
 12897  0125DE  0E64               	movlw	100
 12898  0125E0  6FBA               	movwf	delay_ms@ms& (0+255),b
 12899  0125E2  EC68  F0A0         	call	_delay_ms	;wreg free
 12900                           
 12901                           ;LCD.c: 192: LCD_Fill(0x0000);
 12902  0125E6  0E00               	movlw	0
 12903  0125E8  0100               	movlb	0	; () banked
 12904  0125EA  6FC4               	movwf	(LCD_Fill@pColour+1)& (0+255),b
 12905  0125EC  0E00               	movlw	0
 12906  0125EE  6FC3               	movwf	LCD_Fill@pColour& (0+255),b
 12907  0125F0  EC93  F0A1         	call	_LCD_Fill	;wreg free
 12908  0125F4  0012               	return		;funcret
 12909  0125F6                     __end_of_LCD_Init:
 12910                           	opt stack 0
 12911                           tosu	equ	0xFFF
 12912                           tosh	equ	0xFFE
 12913                           tosl	equ	0xFFD
 12914                           pclath	equ	0xFFA
 12915                           tblptru	equ	0xFF8
 12916                           tblptrh	equ	0xFF7
 12917                           tblptrl	equ	0xFF6
 12918                           tablat	equ	0xFF5
 12919                           prodh	equ	0xFF4
 12920                           prodl	equ	0xFF3
 12921                           intcon	equ	0xFF2
 12922                           postinc0	equ	0xFEE
 12923                           wreg	equ	0xFE8
 12924                           indf1	equ	0xFE7
 12925                           postdec1	equ	0xFE5
 12926                           fsr1h	equ	0xFE2
 12927                           fsr1l	equ	0xFE1
 12928                           indf2	equ	0xFDF
 12929                           postinc2	equ	0xFDE
 12930                           postdec2	equ	0xFDD
 12931                           plusw2	equ	0xFDB
 12932                           fsr2h	equ	0xFDA
 12933                           fsr2l	equ	0xFD9
 12934                           status	equ	0xFD8
 12935                           
 12936 ;; *************** function _Set_Rotation *****************
 12937 ;; Defined at:
 12938 ;;		line 248 in file "Library/LCD.c"
 12939 ;; Parameters:    Size  Location     Type
 12940 ;;  m               1    wreg     unsigned char 
 12941 ;; Auto vars:     Size  Location     Type
 12942 ;;  m               1    5[BANK0 ] unsigned char 
 12943 ;;  rotation        1    6[BANK0 ] unsigned char 
 12944 ;; Return value:  Size  Location     Type
 12945 ;;                  1    wreg      void 
 12946 ;; Registers used:
 12947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12948 ;; Tracked objects:
 12949 ;;		On entry : 0/0
 12950 ;;		On exit  : 0/0
 12951 ;;		Unchanged: 0/0
 12952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12954 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12957 ;;Total ram usage:        2 bytes
 12958 ;; Hardware stack levels used:    1
 12959 ;; Hardware stack levels required when called:    9
 12960 ;; This function calls:
 12961 ;;		_LCD_Write
 12962 ;; This function is called by:
 12963 ;;		_LCD_Init
 12964 ;; This function uses a non-reentrant model
 12965 ;;
 12966                           
 12967                           	psect	text48
 12968  01397A                     __ptext48:
 12969                           	opt stack 0
 12970  01397A                     _Set_Rotation:
 12971                           	opt stack 19
 12972                           
 12973                           ;incstack = 0
 12974                           ;Set_Rotation@m stored from wreg
 12975  01397A  0100               	movlb	0	; () banked
 12976  01397C  6FBF               	movwf	Set_Rotation@m& (0+255),b
 12977                           
 12978                           ;LCD.c: 250: UINT8 rotation = 0x00;
 12979  01397E  0E00               	movlw	0
 12980  013980  0100               	movlb	0	; () banked
 12981  013982  6FC0               	movwf	Set_Rotation@rotation& (0+255),b
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;LCD.c: 252: LCD_Write(0x36, 0x0);
 12985  013984  0E00               	movlw	0
 12986  013986  0100               	movlb	0	; () banked
 12987  013988  6FBD               	movwf	LCD_Write@mode& (0+255),b
 12988  01398A  0E36               	movlw	54
 12989  01398C  EC9F  F0A4         	call	_LCD_Write
 12990                           
 12991                           ;LCD.c: 253: rotation = (m % 4);
 12992  013990  0100               	movlb	0	; () banked
 12993  013992  51BF               	movf	Set_Rotation@m& (0+255),w,b
 12994  013994  0B03               	andlw	3
 12995  013996  0100               	movlb	0	; () banked
 12996  013998  6FC0               	movwf	Set_Rotation@rotation& (0+255),b
 12997                           
 12998                           ;LCD.c: 255: switch(rotation)
 12999  01399A  D02C               	goto	l117
 13000  01399C                     
 13001                           ; BSR set to: 0
 13002                           ;LCD.c: 258: {
 13003                           ;LCD.c: 259: LCD_Write((0x40 | 0x80 | 0x08), 0x1);
 13004                           
 13005                           ; BSR set to: 0
 13006  01399C  0E01               	movlw	1
 13007  01399E  0100               	movlb	0	; () banked
 13008  0139A0  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13009  0139A2  0EC8               	movlw	200
 13010  0139A4  EC9F  F0A4         	call	_LCD_Write
 13011                           
 13012                           ;LCD.c: 260: w = 128;
 13013  0139A8  0E80               	movlw	128
 13014  0139AA  6E50               	movwf	_w,c
 13015                           
 13016                           ;LCD.c: 261: l = 128;
 13017  0139AC  0E80               	movlw	128
 13018  0139AE  6E4F               	movwf	_l,c
 13019                           
 13020                           ;LCD.c: 262: break;
 13021  0139B0  0012               	return	
 13022  0139B2                     
 13023                           ;LCD.c: 265: {
 13024                           ;LCD.c: 266: LCD_Write((0x80 | 0x20 | 0x08), 0x1);
 13025  0139B2  0E01               	movlw	1
 13026  0139B4  0100               	movlb	0	; () banked
 13027  0139B6  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13028  0139B8  0EA8               	movlw	168
 13029  0139BA  EC9F  F0A4         	call	_LCD_Write
 13030                           
 13031                           ;LCD.c: 267: w = 128;
 13032  0139BE  0E80               	movlw	128
 13033  0139C0  6E50               	movwf	_w,c
 13034                           
 13035                           ;LCD.c: 268: l = 128;
 13036  0139C2  0E80               	movlw	128
 13037  0139C4  6E4F               	movwf	_l,c
 13038                           
 13039                           ;LCD.c: 269: break;
 13040  0139C6  0012               	return	
 13041  0139C8                     
 13042                           ;LCD.c: 272: {
 13043                           ;LCD.c: 273: LCD_Write((0x08), 0x1);
 13044  0139C8  0E01               	movlw	1
 13045  0139CA  0100               	movlb	0	; () banked
 13046  0139CC  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13047  0139CE  0E08               	movlw	8
 13048  0139D0  EC9F  F0A4         	call	_LCD_Write
 13049                           
 13050                           ;LCD.c: 274: w = 128;
 13051  0139D4  0E80               	movlw	128
 13052  0139D6  6E50               	movwf	_w,c
 13053                           
 13054                           ;LCD.c: 275: l = 128;
 13055  0139D8  0E80               	movlw	128
 13056  0139DA  6E4F               	movwf	_l,c
 13057                           
 13058                           ;LCD.c: 276: break;
 13059  0139DC  0012               	return	
 13060  0139DE                     
 13061                           ;LCD.c: 279: {
 13062                           ;LCD.c: 280: LCD_Write((0x40 | 0x20 | 0x08), 0x1);
 13063  0139DE  0E01               	movlw	1
 13064  0139E0  0100               	movlb	0	; () banked
 13065  0139E2  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13066  0139E4  0E68               	movlw	104
 13067  0139E6  EC9F  F0A4         	call	_LCD_Write
 13068                           
 13069                           ;LCD.c: 281: w = 128;
 13070  0139EA  0E80               	movlw	128
 13071  0139EC  6E50               	movwf	_w,c
 13072                           
 13073                           ;LCD.c: 282: l = 128;
 13074  0139EE  0E80               	movlw	128
 13075  0139F0  6E4F               	movwf	_l,c
 13076                           
 13077                           ;LCD.c: 284: }
 13078                           ;LCD.c: 285: }
 13079                           
 13080                           ;LCD.c: 283: break;
 13081  0139F2  0012               	return	
 13082  0139F4                     l117:
 13083  0139F4  0100               	movlb	0	; () banked
 13084  0139F6  51C0               	movf	Set_Rotation@rotation& (0+255),w,b
 13085                           
 13086                           ; Switch size 1, requested type "space"
 13087                           ; Number of cases is 4, Range of values is 0 to 3
 13088                           ; switch strategies available:
 13089                           ; Name         Instructions Cycles
 13090                           ; simple_byte           13     7 (average)
 13091                           ;	Chosen strategy is simple_byte
 13092  0139F8  0A00               	xorlw	0	; case 0
 13093  0139FA  B4D8               	btfsc	status,2,c
 13094  0139FC  D7CF               	goto	l118
 13095  0139FE  0A01               	xorlw	1	; case 1
 13096  013A00  B4D8               	btfsc	status,2,c
 13097  013A02  D7D7               	goto	l120
 13098  013A04  0A03               	xorlw	3	; case 2
 13099  013A06  B4D8               	btfsc	status,2,c
 13100  013A08  D7DF               	goto	l121
 13101  013A0A  0A01               	xorlw	1	; case 3
 13102  013A0C  A4D8               	btfss	status,2,c
 13103  013A0E  0012               	return	
 13104  013A10  D7E6               	goto	l122
 13105  013A12                     __end_of_Set_Rotation:
 13106                           	opt stack 0
 13107                           tosu	equ	0xFFF
 13108                           tosh	equ	0xFFE
 13109                           tosl	equ	0xFFD
 13110                           pclath	equ	0xFFA
 13111                           tblptru	equ	0xFF8
 13112                           tblptrh	equ	0xFF7
 13113                           tblptrl	equ	0xFF6
 13114                           tablat	equ	0xFF5
 13115                           prodh	equ	0xFF4
 13116                           prodl	equ	0xFF3
 13117                           intcon	equ	0xFF2
 13118                           postinc0	equ	0xFEE
 13119                           wreg	equ	0xFE8
 13120                           indf1	equ	0xFE7
 13121                           postdec1	equ	0xFE5
 13122                           fsr1h	equ	0xFE2
 13123                           fsr1l	equ	0xFE1
 13124                           indf2	equ	0xFDF
 13125                           postinc2	equ	0xFDE
 13126                           postdec2	equ	0xFDD
 13127                           plusw2	equ	0xFDB
 13128                           fsr2h	equ	0xFDA
 13129                           fsr2l	equ	0xFD9
 13130                           status	equ	0xFD8
 13131                           
 13132 ;; *************** function _LCD_Fill *****************
 13133 ;; Defined at:
 13134 ;;		line 287 in file "Library/LCD.c"
 13135 ;; Parameters:    Size  Location     Type
 13136 ;;  pColour         2    9[BANK0 ] unsigned short 
 13137 ;; Auto vars:     Size  Location     Type
 13138 ;;  j               1   12[BANK0 ] unsigned char 
 13139 ;;  i               1   11[BANK0 ] unsigned char 
 13140 ;; Return value:  Size  Location     Type
 13141 ;;                  1    wreg      void 
 13142 ;; Registers used:
 13143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13144 ;; Tracked objects:
 13145 ;;		On entry : 0/0
 13146 ;;		On exit  : 0/0
 13147 ;;		Unchanged: 0/0
 13148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13149 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13150 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13152 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13153 ;;Total ram usage:        4 bytes
 13154 ;; Hardware stack levels used:    1
 13155 ;; Hardware stack levels required when called:   10
 13156 ;; This function calls:
 13157 ;;		_LCD_Word_Write
 13158 ;;		_Set_Addr_Window
 13159 ;; This function is called by:
 13160 ;;		_LCD_Init
 13161 ;; This function uses a non-reentrant model
 13162 ;;
 13163                           
 13164                           	psect	text49
 13165  014326                     __ptext49:
 13166                           	opt stack 0
 13167  014326                     _LCD_Fill:
 13168                           	opt stack 18
 13169                           
 13170                           ;LCD.c: 296: UINT8 i = 0x00;
 13171                           
 13172                           ;incstack = 0
 13173  014326  0E00               	movlw	0
 13174  014328  0100               	movlb	0	; () banked
 13175  01432A  6FC5               	movwf	LCD_Fill@i& (0+255),b
 13176                           
 13177                           ;LCD.c: 297: UINT8 j = 0x00;
 13178  01432C  0E00               	movlw	0
 13179  01432E  0100               	movlb	0	; () banked
 13180  014330  6FC6               	movwf	LCD_Fill@j& (0+255),b
 13181                           
 13182                           ; BSR set to: 0
 13183                           ;LCD.c: 298: Set_Addr_Window(0, 0, (w - 1), (l - 1));
 13184  014332  0E00               	movlw	0
 13185  014334  0100               	movlb	0	; () banked
 13186  014336  6FBF               	movwf	Set_Addr_Window@ys& (0+255),b
 13187  014338  0450               	decf	_w,w,c
 13188  01433A  0100               	movlb	0	; () banked
 13189  01433C  6FC0               	movwf	Set_Addr_Window@xe& (0+255),b
 13190  01433E  044F               	decf	_l,w,c
 13191  014340  0100               	movlb	0	; () banked
 13192  014342  6FC1               	movwf	Set_Addr_Window@ye& (0+255),b
 13193  014344  0E00               	movlw	0
 13194  014346  ECCC  F09A         	call	_Set_Addr_Window
 13195                           
 13196                           ;LCD.c: 299: for (j = l; j > 0; j--)
 13197  01434A  C04F  F0C6         	movff	_l,LCD_Fill@j
 13198  01434E                     l13644:
 13199  01434E  0100               	movlb	0	; () banked
 13200  014350  51C6               	movf	LCD_Fill@j& (0+255),w,b
 13201  014352  0100               	movlb	0	; () banked
 13202  014354  B4D8               	btfsc	status,2,c
 13203  014356  0012               	return	
 13204                           
 13205                           ; BSR set to: 0
 13206                           ;LCD.c: 300: for (i = w; i > 0; i--)
 13207                           
 13208                           ; BSR set to: 0
 13209  014358  C050  F0C5         	movff	_w,LCD_Fill@i
 13210  01435C                     l13648:
 13211                           
 13212                           ; BSR set to: 0
 13213  01435C  0100               	movlb	0	; () banked
 13214  01435E  51C5               	movf	LCD_Fill@i& (0+255),w,b
 13215  014360  0100               	movlb	0	; () banked
 13216  014362  B4D8               	btfsc	status,2,c
 13217  014364  D009               	goto	u10200
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;LCD.c: 301: LCD_Word_Write(pColour);
 13221                           
 13222                           ; BSR set to: 0
 13223                           
 13224                           ; BSR set to: 0
 13225  014366  C0C3  F0BF         	movff	LCD_Fill@pColour,LCD_Word_Write@value
 13226  01436A  C0C4  F0C0         	movff	LCD_Fill@pColour+1,LCD_Word_Write@value+1
 13227  01436E  ECF1  F0A4         	call	_LCD_Word_Write	;wreg free
 13228  014372  0100               	movlb	0	; () banked
 13229  014374  07C5               	decf	LCD_Fill@i& (0+255),f,b
 13230  014376  D7F2               	goto	l13648
 13231  014378                     u10200:
 13232                           
 13233                           ; BSR set to: 0
 13234                           
 13235                           ; BSR set to: 0
 13236  014378  0100               	movlb	0	; () banked
 13237  01437A  07C6               	decf	LCD_Fill@j& (0+255),f,b
 13238  01437C  D7E8               	goto	l13644
 13239  01437E                     __end_of_LCD_Fill:
 13240                           	opt stack 0
 13241                           tosu	equ	0xFFF
 13242                           tosh	equ	0xFFE
 13243                           tosl	equ	0xFFD
 13244                           pclath	equ	0xFFA
 13245                           tblptru	equ	0xFF8
 13246                           tblptrh	equ	0xFF7
 13247                           tblptrl	equ	0xFF6
 13248                           tablat	equ	0xFF5
 13249                           prodh	equ	0xFF4
 13250                           prodl	equ	0xFF3
 13251                           intcon	equ	0xFF2
 13252                           postinc0	equ	0xFEE
 13253                           wreg	equ	0xFE8
 13254                           indf1	equ	0xFE7
 13255                           postdec1	equ	0xFE5
 13256                           fsr1h	equ	0xFE2
 13257                           fsr1l	equ	0xFE1
 13258                           indf2	equ	0xFDF
 13259                           postinc2	equ	0xFDE
 13260                           postdec2	equ	0xFDD
 13261                           plusw2	equ	0xFDB
 13262                           fsr2h	equ	0xFDA
 13263                           fsr2l	equ	0xFD9
 13264                           status	equ	0xFD8
 13265                           
 13266 ;; *************** function _Set_Addr_Window *****************
 13267 ;; Defined at:
 13268 ;;		line 214 in file "Library/LCD.c"
 13269 ;; Parameters:    Size  Location     Type
 13270 ;;  xs              1    wreg     unsigned char 
 13271 ;;  ys              1    5[BANK0 ] unsigned char 
 13272 ;;  xe              1    6[BANK0 ] unsigned char 
 13273 ;;  ye              1    7[BANK0 ] unsigned char 
 13274 ;; Auto vars:     Size  Location     Type
 13275 ;;  xs              1    8[BANK0 ] unsigned char 
 13276 ;; Return value:  Size  Location     Type
 13277 ;;                  1    wreg      void 
 13278 ;; Registers used:
 13279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13280 ;; Tracked objects:
 13281 ;;		On entry : 0/0
 13282 ;;		On exit  : 0/0
 13283 ;;		Unchanged: 0/0
 13284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13285 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13288 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13289 ;;Total ram usage:        4 bytes
 13290 ;; Hardware stack levels used:    1
 13291 ;; Hardware stack levels required when called:    9
 13292 ;; This function calls:
 13293 ;;		_LCD_Write
 13294 ;; This function is called by:
 13295 ;;		_LCD_Fill
 13296 ;;		_RAM_Address_Set
 13297 ;;		_LCD_FillRectangle
 13298 ;;		_LCD_DrawPixel
 13299 ;;		_LCD_DrawField
 13300 ;; This function uses a non-reentrant model
 13301 ;;
 13302                           
 13303                           	psect	text50
 13304  013598                     __ptext50:
 13305                           	opt stack 0
 13306  013598                     _Set_Addr_Window:
 13307                           	opt stack 18
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;incstack = 0
 13311                           ;Set_Addr_Window@xs stored from wreg
 13312  013598  0100               	movlb	0	; () banked
 13313  01359A  6FC2               	movwf	Set_Addr_Window@xs& (0+255),b
 13314                           
 13315                           ;LCD.c: 216: ys+=2;
 13316  01359C  0E02               	movlw	2
 13317  01359E  0100               	movlb	0	; () banked
 13318  0135A0  27BF               	addwf	Set_Addr_Window@ys& (0+255),f,b
 13319                           
 13320                           ;LCD.c: 217: ye+=2;
 13321  0135A2  0E02               	movlw	2
 13322  0135A4  0100               	movlb	0	; () banked
 13323  0135A6  27C1               	addwf	Set_Addr_Window@ye& (0+255),f,b
 13324                           
 13325                           ;LCD.c: 218: xs+=3;
 13326  0135A8  0E03               	movlw	3
 13327  0135AA  0100               	movlb	0	; () banked
 13328  0135AC  27C2               	addwf	Set_Addr_Window@xs& (0+255),f,b
 13329                           
 13330                           ;LCD.c: 219: xe+=3;
 13331  0135AE  0E03               	movlw	3
 13332  0135B0  0100               	movlb	0	; () banked
 13333  0135B2  27C0               	addwf	Set_Addr_Window@xe& (0+255),f,b
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;LCD.c: 221: LCD_Write(0x2A, 0x0);
 13337  0135B4  0E00               	movlw	0
 13338  0135B6  0100               	movlb	0	; () banked
 13339  0135B8  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13340  0135BA  0E2A               	movlw	42
 13341  0135BC  EC9F  F0A4         	call	_LCD_Write
 13342                           
 13343                           ;LCD.c: 222: LCD_Write(0x00, 0x1);
 13344  0135C0  0E01               	movlw	1
 13345  0135C2  0100               	movlb	0	; () banked
 13346  0135C4  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13347  0135C6  0E00               	movlw	0
 13348  0135C8  EC9F  F0A4         	call	_LCD_Write
 13349                           
 13350                           ;LCD.c: 223: LCD_Write(xs, 0x1);
 13351  0135CC  0E01               	movlw	1
 13352  0135CE  0100               	movlb	0	; () banked
 13353  0135D0  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13354  0135D2  0100               	movlb	0	; () banked
 13355  0135D4  51C2               	movf	Set_Addr_Window@xs& (0+255),w,b
 13356  0135D6  EC9F  F0A4         	call	_LCD_Write
 13357                           
 13358                           ;LCD.c: 224: LCD_Write(0x00, 0x1);
 13359  0135DA  0E01               	movlw	1
 13360  0135DC  0100               	movlb	0	; () banked
 13361  0135DE  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13362  0135E0  0E00               	movlw	0
 13363  0135E2  EC9F  F0A4         	call	_LCD_Write
 13364                           
 13365                           ;LCD.c: 225: LCD_Write(xe, 0x1);
 13366  0135E6  0E01               	movlw	1
 13367  0135E8  0100               	movlb	0	; () banked
 13368  0135EA  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13369  0135EC  0100               	movlb	0	; () banked
 13370  0135EE  51C0               	movf	Set_Addr_Window@xe& (0+255),w,b
 13371  0135F0  EC9F  F0A4         	call	_LCD_Write
 13372                           
 13373                           ;LCD.c: 226: LCD_Write(0x2B, 0x0);
 13374  0135F4  0E00               	movlw	0
 13375  0135F6  0100               	movlb	0	; () banked
 13376  0135F8  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13377  0135FA  0E2B               	movlw	43
 13378  0135FC  EC9F  F0A4         	call	_LCD_Write
 13379                           
 13380                           ;LCD.c: 227: LCD_Write(0x00, 0x1);
 13381  013600  0E01               	movlw	1
 13382  013602  0100               	movlb	0	; () banked
 13383  013604  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13384  013606  0E00               	movlw	0
 13385  013608  EC9F  F0A4         	call	_LCD_Write
 13386                           
 13387                           ;LCD.c: 228: LCD_Write(ys, 0x1);
 13388  01360C  0E01               	movlw	1
 13389  01360E  0100               	movlb	0	; () banked
 13390  013610  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13391  013612  0100               	movlb	0	; () banked
 13392  013614  51BF               	movf	Set_Addr_Window@ys& (0+255),w,b
 13393  013616  EC9F  F0A4         	call	_LCD_Write
 13394                           
 13395                           ;LCD.c: 229: LCD_Write(0x00, 0x1);
 13396  01361A  0E01               	movlw	1
 13397  01361C  0100               	movlb	0	; () banked
 13398  01361E  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13399  013620  0E00               	movlw	0
 13400  013622  EC9F  F0A4         	call	_LCD_Write
 13401                           
 13402                           ;LCD.c: 230: LCD_Write(ye, 0x1);
 13403  013626  0E01               	movlw	1
 13404  013628  0100               	movlb	0	; () banked
 13405  01362A  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13406  01362C  0100               	movlb	0	; () banked
 13407  01362E  51C1               	movf	Set_Addr_Window@ye& (0+255),w,b
 13408  013630  EC9F  F0A4         	call	_LCD_Write
 13409                           
 13410                           ;LCD.c: 231: LCD_Write(0x2C, 0x0);
 13411  013634  0E00               	movlw	0
 13412  013636  0100               	movlb	0	; () banked
 13413  013638  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13414  01363A  0E2C               	movlw	44
 13415  01363C  EC9F  F0A4         	call	_LCD_Write
 13416  013640  0012               	return		;funcret
 13417  013642                     __end_of_Set_Addr_Window:
 13418                           	opt stack 0
 13419                           tosu	equ	0xFFF
 13420                           tosh	equ	0xFFE
 13421                           tosl	equ	0xFFD
 13422                           pclath	equ	0xFFA
 13423                           tblptru	equ	0xFF8
 13424                           tblptrh	equ	0xFF7
 13425                           tblptrl	equ	0xFF6
 13426                           tablat	equ	0xFF5
 13427                           prodh	equ	0xFF4
 13428                           prodl	equ	0xFF3
 13429                           intcon	equ	0xFF2
 13430                           postinc0	equ	0xFEE
 13431                           wreg	equ	0xFE8
 13432                           indf1	equ	0xFE7
 13433                           postdec1	equ	0xFE5
 13434                           fsr1h	equ	0xFE2
 13435                           fsr1l	equ	0xFE1
 13436                           indf2	equ	0xFDF
 13437                           postinc2	equ	0xFDE
 13438                           postdec2	equ	0xFDD
 13439                           plusw2	equ	0xFDB
 13440                           fsr2h	equ	0xFDA
 13441                           fsr2l	equ	0xFD9
 13442                           status	equ	0xFD8
 13443                           
 13444 ;; *************** function _LCD_Word_Write *****************
 13445 ;; Defined at:
 13446 ;;		line 198 in file "Library/LCD.c"
 13447 ;; Parameters:    Size  Location     Type
 13448 ;;  value           2    5[BANK0 ] unsigned short 
 13449 ;; Auto vars:     Size  Location     Type
 13450 ;;		None
 13451 ;; Return value:  Size  Location     Type
 13452 ;;                  1    wreg      void 
 13453 ;; Registers used:
 13454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13455 ;; Tracked objects:
 13456 ;;		On entry : 0/0
 13457 ;;		On exit  : 0/0
 13458 ;;		Unchanged: 0/0
 13459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13460 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13463 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13464 ;;Total ram usage:        2 bytes
 13465 ;; Hardware stack levels used:    1
 13466 ;; Hardware stack levels required when called:    9
 13467 ;; This function calls:
 13468 ;;		_LCD_Write
 13469 ;; This function is called by:
 13470 ;;		_LCD_Fill
 13471 ;;		_LCD_FillRectangle
 13472 ;;		_LCD_DrawPixel
 13473 ;;		_LCD_DrawField
 13474 ;; This function uses a non-reentrant model
 13475 ;;
 13476                           
 13477                           	psect	text51
 13478  0149E2                     __ptext51:
 13479                           	opt stack 0
 13480  0149E2                     _LCD_Word_Write:
 13481                           	opt stack 18
 13482                           
 13483                           ;LCD.c: 200: LCD_Write(((value & 0xFF00) >> 0x08), 0x1);
 13484                           
 13485                           ;incstack = 0
 13486  0149E2  0E01               	movlw	1
 13487  0149E4  0100               	movlb	0	; () banked
 13488  0149E6  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13489  0149E8  0100               	movlb	0	; () banked
 13490  0149EA  51C0               	movf	(LCD_Word_Write@value+1)& (0+255),w,b
 13491  0149EC  EC9F  F0A4         	call	_LCD_Write
 13492                           
 13493                           ;LCD.c: 201: LCD_Write((value & 0x00FF), 0x1);
 13494  0149F0  0E01               	movlw	1
 13495  0149F2  0100               	movlb	0	; () banked
 13496  0149F4  6FBD               	movwf	LCD_Write@mode& (0+255),b
 13497  0149F6  0100               	movlb	0	; () banked
 13498  0149F8  51BF               	movf	LCD_Word_Write@value& (0+255),w,b
 13499  0149FA  EC9F  F0A4         	call	_LCD_Write
 13500  0149FE  0012               	return		;funcret
 13501  014A00                     __end_of_LCD_Word_Write:
 13502                           	opt stack 0
 13503                           tosu	equ	0xFFF
 13504                           tosh	equ	0xFFE
 13505                           tosl	equ	0xFFD
 13506                           pclath	equ	0xFFA
 13507                           tblptru	equ	0xFF8
 13508                           tblptrh	equ	0xFF7
 13509                           tblptrl	equ	0xFF6
 13510                           tablat	equ	0xFF5
 13511                           prodh	equ	0xFF4
 13512                           prodl	equ	0xFF3
 13513                           intcon	equ	0xFF2
 13514                           postinc0	equ	0xFEE
 13515                           wreg	equ	0xFE8
 13516                           indf1	equ	0xFE7
 13517                           postdec1	equ	0xFE5
 13518                           fsr1h	equ	0xFE2
 13519                           fsr1l	equ	0xFE1
 13520                           indf2	equ	0xFDF
 13521                           postinc2	equ	0xFDE
 13522                           postdec2	equ	0xFDD
 13523                           plusw2	equ	0xFDB
 13524                           fsr2h	equ	0xFDA
 13525                           fsr2l	equ	0xFD9
 13526                           status	equ	0xFD8
 13527                           
 13528 ;; *************** function _LCD_Write *****************
 13529 ;; Defined at:
 13530 ;;		line 67 in file "Library/LCD.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;  value           1    wreg     unsigned char 
 13533 ;;  mode            1    3[BANK0 ] enum E6761
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;  value           1    4[BANK0 ] unsigned char 
 13536 ;; Return value:  Size  Location     Type
 13537 ;;                  1    wreg      void 
 13538 ;; Registers used:
 13539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13540 ;; Tracked objects:
 13541 ;;		On entry : 0/0
 13542 ;;		On exit  : 0/0
 13543 ;;		Unchanged: 0/0
 13544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13545 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13548 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13549 ;;Total ram usage:        2 bytes
 13550 ;; Hardware stack levels used:    1
 13551 ;; Hardware stack levels required when called:    8
 13552 ;; This function calls:
 13553 ;;		_Mode_Set
 13554 ;;		_SPI_Send
 13555 ;; This function is called by:
 13556 ;;		_LCD_Init
 13557 ;;		_LCD_Word_Write
 13558 ;;		_Set_Addr_Window
 13559 ;;		_Set_Rotation
 13560 ;;		_LCD_WriteCMD
 13561 ;;		_LCD_WriteData
 13562 ;;		_LCD_Data_Write
 13563 ;;		_LCD_Data_Write_4k
 13564 ;;		_Invert_Display
 13565 ;; This function uses a non-reentrant model
 13566 ;;
 13567                           
 13568                           	psect	text52
 13569  01493E                     __ptext52:
 13570                           	opt stack 0
 13571  01493E                     _LCD_Write:
 13572                           	opt stack 19
 13573                           
 13574                           ;incstack = 0
 13575                           ;LCD_Write@value stored from wreg
 13576  01493E  0100               	movlb	0	; () banked
 13577  014940  6FBE               	movwf	LCD_Write@value& (0+255),b
 13578                           
 13579                           ;LCD.c: 89: Mode_Set(mode);
 13580  014942  0100               	movlb	0	; () banked
 13581  014944  51BD               	movf	LCD_Write@mode& (0+255),w,b
 13582  014946  EC89  F0A5         	call	_Mode_Set
 13583                           
 13584                           ;LCD.c: 90: SPI_Send(&SPI2, value);
 13585  01494A  0E85               	movlw	low _SPI2
 13586  01494C  0100               	movlb	0	; () banked
 13587  01494E  6FBA               	movwf	SPI_Send@pInput& (0+255),b
 13588  014950  0E01               	movlw	high _SPI2
 13589  014952  0100               	movlb	0	; () banked
 13590  014954  6FBB               	movwf	(SPI_Send@pInput+1)& (0+255),b
 13591  014956  C0BE  F0BC         	movff	LCD_Write@value,SPI_Send@pData
 13592  01495A  EC32  F0A0         	call	_SPI_Send	;wreg free
 13593  01495E  0012               	return		;funcret
 13594  014960                     __end_of_LCD_Write:
 13595                           	opt stack 0
 13596                           tosu	equ	0xFFF
 13597                           tosh	equ	0xFFE
 13598                           tosl	equ	0xFFD
 13599                           pclath	equ	0xFFA
 13600                           tblptru	equ	0xFF8
 13601                           tblptrh	equ	0xFF7
 13602                           tblptrl	equ	0xFF6
 13603                           tablat	equ	0xFF5
 13604                           prodh	equ	0xFF4
 13605                           prodl	equ	0xFF3
 13606                           intcon	equ	0xFF2
 13607                           postinc0	equ	0xFEE
 13608                           wreg	equ	0xFE8
 13609                           indf1	equ	0xFE7
 13610                           postdec1	equ	0xFE5
 13611                           fsr1h	equ	0xFE2
 13612                           fsr1l	equ	0xFE1
 13613                           indf2	equ	0xFDF
 13614                           postinc2	equ	0xFDE
 13615                           postdec2	equ	0xFDD
 13616                           plusw2	equ	0xFDB
 13617                           fsr2h	equ	0xFDA
 13618                           fsr2l	equ	0xFD9
 13619                           status	equ	0xFD8
 13620                           
 13621 ;; *************** function _SPI_Send *****************
 13622 ;; Defined at:
 13623 ;;		line 226 in file "Library/SPI.c"
 13624 ;; Parameters:    Size  Location     Type
 13625 ;;  pInput          2    0[BANK0 ] PTR struct SPI
 13626 ;;		 -> SPI1(11), SPI2(11), 
 13627 ;;  pData           1    2[BANK0 ] unsigned char 
 13628 ;; Auto vars:     Size  Location     Type
 13629 ;;		None
 13630 ;; Return value:  Size  Location     Type
 13631 ;;                  1    wreg      unsigned char 
 13632 ;; Registers used:
 13633 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13634 ;; Tracked objects:
 13635 ;;		On entry : 0/0
 13636 ;;		On exit  : 0/0
 13637 ;;		Unchanged: 0/0
 13638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13639 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13640 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13642 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13643 ;;Total ram usage:        3 bytes
 13644 ;; Hardware stack levels used:    1
 13645 ;; Hardware stack levels required when called:    7
 13646 ;; This function calls:
 13647 ;;		Nothing
 13648 ;; This function is called by:
 13649 ;;		_LCD_Write
 13650 ;;		_OutSeg
 13651 ;; This function uses a non-reentrant model
 13652 ;;
 13653                           
 13654                           	psect	text53
 13655  014064                     __ptext53:
 13656                           	opt stack 0
 13657  014064                     _SPI_Send:
 13658                           	opt stack 20
 13659                           
 13660                           ;SPI.c: 253: switch (pInput->mChannel)
 13661                           
 13662                           ;incstack = 0
 13663  014064  D026               	goto	l678
 13664  014066                     
 13665                           ;SPI.c: 256: PortC.mOutput->mBit2 = 0;
 13666  014066  C0A8  FFD9         	movff	_PortC+4,fsr2l
 13667  01406A  C0A9  FFDA         	movff	_PortC+5,fsr2h
 13668  01406E  0100               	movlb	0	; () banked
 13669  014070  94DF               	bcf	indf2,2,c
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;SPI.c: 257: SSP1BUF = pData;
 13673  014072  C0BC  FFC9         	movff	SPI_Send@pData,4041	;volatile
 13674  014076                     
 13675                           ; BSR set to: 0
 13676  014076  A0C7               	btfss	4039,0,c	;volatile
 13677  014078  D7FE               	goto	l681
 13678                           
 13679                           ;SPI.c: 259: pData = SSP1BUF;
 13680  01407A  CFC9 F0BC          	movff	4041,SPI_Send@pData	;volatile
 13681                           
 13682                           ;SPI.c: 260: PortC.mOutput->mBit2 = 1;
 13683  01407E  C0A8  FFD9         	movff	_PortC+4,fsr2l
 13684  014082  C0A9  FFDA         	movff	_PortC+5,fsr2h
 13685  014086  0100               	movlb	0	; () banked
 13686  014088  84DF               	bsf	indf2,2,c
 13687                           
 13688                           ; BSR set to: 0
 13689                           ;SPI.c: 261: return pData;
 13690                           ;	Return value of _SPI_Send is never used
 13691  01408A  0012               	return	
 13692  01408C                     
 13693                           ; BSR set to: 0
 13694                           ;SPI.c: 263: PortD.mOutput->mBit7 = 0;
 13695                           
 13696                           ; BSR set to: 0
 13697  01408C  C09E  FFD9         	movff	_PortD+4,fsr2l
 13698  014090  C09F  FFDA         	movff	_PortD+5,fsr2h
 13699  014094  0100               	movlb	0	; () banked
 13700  014096  9EDF               	bcf	indf2,7,c
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;SPI.c: 264: SSP2BUF = pData;
 13704  014098  C0BC  FF6F         	movff	SPI_Send@pData,3951	;volatile
 13705  01409C                     
 13706                           ; BSR set to: 0
 13707  01409C  A06D               	btfss	3949,0,c	;volatile
 13708  01409E  D7FE               	goto	l686
 13709                           
 13710                           ;SPI.c: 266: pData = SSP2BUF;
 13711  0140A0  CF6F F0BC          	movff	3951,SPI_Send@pData	;volatile
 13712                           
 13713                           ;SPI.c: 267: PortD.mOutput->mBit7 = 1;
 13714  0140A4  C09E  FFD9         	movff	_PortD+4,fsr2l
 13715  0140A8  C09F  FFDA         	movff	_PortD+5,fsr2h
 13716  0140AC  0100               	movlb	0	; () banked
 13717  0140AE  8EDF               	bsf	indf2,7,c
 13718                           
 13719                           ; BSR set to: 0
 13720                           ;SPI.c: 269: };
 13721                           
 13722                           ; BSR set to: 0
 13723                           ;SPI.c: 268: return pData;
 13724                           ;	Return value of _SPI_Send is never used
 13725  0140B0  0012               	return	
 13726  0140B2                     l678:
 13727                           
 13728                           ; BSR set to: 0
 13729  0140B2  0100               	movlb	0	; () banked
 13730  0140B4  EE20 F002          	lfsr	2,2
 13731  0140B8  51BA               	movf	SPI_Send@pInput& (0+255),w,b
 13732  0140BA  26D9               	addwf	fsr2l,f,c
 13733  0140BC  51BB               	movf	(SPI_Send@pInput+1)& (0+255),w,b
 13734  0140BE  22DA               	addwfc	fsr2h,f,c
 13735  0140C0  50DF               	movf	indf2,w,c
 13736                           
 13737                           ; Switch size 1, requested type "space"
 13738                           ; Number of cases is 2, Range of values is 0 to 1
 13739                           ; switch strategies available:
 13740                           ; Name         Instructions Cycles
 13741                           ; simple_byte            7     4 (average)
 13742                           ;	Chosen strategy is simple_byte
 13743  0140C2  0A00               	xorlw	0	; case 0
 13744  0140C4  B4D8               	btfsc	status,2,c
 13745  0140C6  D7CF               	goto	l679
 13746  0140C8  0A01               	xorlw	1	; case 1
 13747  0140CA  A4D8               	btfss	status,2,c
 13748  0140CC  0012               	return	
 13749  0140CE  D7DE               	goto	l684
 13750  0140D0                     __end_of_SPI_Send:
 13751                           	opt stack 0
 13752                           tosu	equ	0xFFF
 13753                           tosh	equ	0xFFE
 13754                           tosl	equ	0xFFD
 13755                           pclath	equ	0xFFA
 13756                           tblptru	equ	0xFF8
 13757                           tblptrh	equ	0xFF7
 13758                           tblptrl	equ	0xFF6
 13759                           tablat	equ	0xFF5
 13760                           prodh	equ	0xFF4
 13761                           prodl	equ	0xFF3
 13762                           intcon	equ	0xFF2
 13763                           postinc0	equ	0xFEE
 13764                           wreg	equ	0xFE8
 13765                           indf1	equ	0xFE7
 13766                           postdec1	equ	0xFE5
 13767                           fsr1h	equ	0xFE2
 13768                           fsr1l	equ	0xFE1
 13769                           indf2	equ	0xFDF
 13770                           postinc2	equ	0xFDE
 13771                           postdec2	equ	0xFDD
 13772                           plusw2	equ	0xFDB
 13773                           fsr2h	equ	0xFDA
 13774                           fsr2l	equ	0xFD9
 13775                           status	equ	0xFD8
 13776                           
 13777 ;; *************** function _Mode_Set *****************
 13778 ;; Defined at:
 13779 ;;		line 40 in file "Library/LCD.c"
 13780 ;; Parameters:    Size  Location     Type
 13781 ;;  pMode           1    wreg     enum E6761
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;  pMode           1    0[BANK0 ] enum E6761
 13784 ;; Return value:  Size  Location     Type
 13785 ;;                  1    wreg      void 
 13786 ;; Registers used:
 13787 ;;		wreg
 13788 ;; Tracked objects:
 13789 ;;		On entry : 0/0
 13790 ;;		On exit  : 0/0
 13791 ;;		Unchanged: 0/0
 13792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13796 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13797 ;;Total ram usage:        1 bytes
 13798 ;; Hardware stack levels used:    1
 13799 ;; Hardware stack levels required when called:    7
 13800 ;; This function calls:
 13801 ;;		Nothing
 13802 ;; This function is called by:
 13803 ;;		_LCD_Write
 13804 ;; This function uses a non-reentrant model
 13805 ;;
 13806                           
 13807                           	psect	text54
 13808  014B12                     __ptext54:
 13809                           	opt stack 0
 13810  014B12                     _Mode_Set:
 13811                           	opt stack 19
 13812                           
 13813                           ; BSR set to: 0
 13814                           ;incstack = 0
 13815                           ;Mode_Set@pMode stored from wreg
 13816  014B12  0100               	movlb	0	; () banked
 13817  014B14  6FBA               	movwf	Mode_Set@pMode& (0+255),b
 13818                           
 13819                           ;LCD.c: 42: PORTFbits.RF7 = (UINT8)pMode;
 13820  014B16  0100               	movlb	0	; () banked
 13821  014B18  B1BA               	btfsc	Mode_Set@pMode& (0+255),0,b
 13822  014B1A  D002               	bra	u9565
 13823  014B1C  9E85               	bcf	3973,7,c	;volatile
 13824  014B1E  D001               	bra	u9566
 13825  014B20                     u9565:
 13826  014B20  8E85               	bsf	3973,7,c	;volatile
 13827  014B22                     u9566:
 13828  014B22  0012               	return		;funcret
 13829  014B24                     __end_of_Mode_Set:
 13830                           	opt stack 0
 13831                           tosu	equ	0xFFF
 13832                           tosh	equ	0xFFE
 13833                           tosl	equ	0xFFD
 13834                           pclath	equ	0xFFA
 13835                           tblptru	equ	0xFF8
 13836                           tblptrh	equ	0xFF7
 13837                           tblptrl	equ	0xFF6
 13838                           tablat	equ	0xFF5
 13839                           prodh	equ	0xFF4
 13840                           prodl	equ	0xFF3
 13841                           intcon	equ	0xFF2
 13842                           postinc0	equ	0xFEE
 13843                           wreg	equ	0xFE8
 13844                           indf1	equ	0xFE7
 13845                           postdec1	equ	0xFE5
 13846                           fsr1h	equ	0xFE2
 13847                           fsr1l	equ	0xFE1
 13848                           indf2	equ	0xFDF
 13849                           postinc2	equ	0xFDE
 13850                           postdec2	equ	0xFDD
 13851                           plusw2	equ	0xFDB
 13852                           fsr2h	equ	0xFDA
 13853                           fsr2l	equ	0xFD9
 13854                           status	equ	0xFD8
 13855                           
 13856 ;; *************** function _Configure_GPIOs *****************
 13857 ;; Defined at:
 13858 ;;		line 46 in file "Library/LCD.c"
 13859 ;; Parameters:    Size  Location     Type
 13860 ;;		None
 13861 ;; Auto vars:     Size  Location     Type
 13862 ;;		None
 13863 ;; Return value:  Size  Location     Type
 13864 ;;                  1    wreg      void 
 13865 ;; Registers used:
 13866 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13867 ;; Tracked objects:
 13868 ;;		On entry : 0/0
 13869 ;;		On exit  : 0/0
 13870 ;;		Unchanged: 0/0
 13871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13876 ;;Total ram usage:        0 bytes
 13877 ;; Hardware stack levels used:    1
 13878 ;; Hardware stack levels required when called:   14
 13879 ;; This function calls:
 13880 ;;		_LCD_Reset
 13881 ;;		_Port_SetPinType
 13882 ;;		_SPI_Init
 13883 ;;		_SPI_MaxSpeed
 13884 ;; This function is called by:
 13885 ;;		_LCD_Init
 13886 ;; This function uses a non-reentrant model
 13887 ;;
 13888                           
 13889                           	psect	text55
 13890  013F88                     __ptext55:
 13891                           	opt stack 0
 13892  013F88                     _Configure_GPIOs:
 13893                           	opt stack 14
 13894                           
 13895                           ;LCD.c: 49: Port_SetPinType(&PortF, eP7, eTypeOutputPushPull);
 13896                           
 13897                           ;incstack = 0
 13898  013F88  0EC2               	movlw	low _PortF
 13899  013F8A  0100               	movlb	0	; () banked
 13900  013F8C  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 13901  013F8E  0E01               	movlw	high _PortF
 13902  013F90  0100               	movlb	0	; () banked
 13903  013F92  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 13904  013F94  0E07               	movlw	7
 13905  013F96  0100               	movlb	0	; () banked
 13906  013F98  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 13907  013F9A  0E03               	movlw	3
 13908  013F9C  0100               	movlb	0	; () banked
 13909  013F9E  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 13910  013FA0  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 13911                           
 13912                           ;LCD.c: 52: Port_SetPinType(&PortF, eP6, eTypeOutputPushPull);
 13913  013FA4  0EC2               	movlw	low _PortF
 13914  013FA6  0100               	movlb	0	; () banked
 13915  013FA8  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 13916  013FAA  0E01               	movlw	high _PortF
 13917  013FAC  0100               	movlb	0	; () banked
 13918  013FAE  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 13919  013FB0  0E06               	movlw	6
 13920  013FB2  0100               	movlb	0	; () banked
 13921  013FB4  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 13922  013FB6  0E03               	movlw	3
 13923  013FB8  0100               	movlb	0	; () banked
 13924  013FBA  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 13925  013FBC  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 13926                           
 13927                           ;LCD.c: 55: LCD_Reset();
 13928  013FC0  EC10  F0A2         	call	_LCD_Reset	;wreg free
 13929                           
 13930                           ;LCD.c: 63: SPI_Init((3*1000000L), eSPI2, eSPI_Mode1);
 13931  013FC4  0EC0               	movlw	192
 13932  013FC6  0100               	movlb	0	; () banked
 13933  013FC8  6FE7               	movwf	SPI_Init@pClock& (0+255),b
 13934  013FCA  0EC6               	movlw	198
 13935  013FCC  6FE8               	movwf	(SPI_Init@pClock+1)& (0+255),b
 13936  013FCE  0E2D               	movlw	45
 13937  013FD0  6FE9               	movwf	(SPI_Init@pClock+2)& (0+255),b
 13938  013FD2  0E00               	movlw	0
 13939  013FD4  6FEA               	movwf	(SPI_Init@pClock+3)& (0+255),b
 13940  013FD6  0E01               	movlw	1
 13941  013FD8  0100               	movlb	0	; () banked
 13942  013FDA  6FEB               	movwf	SPI_Init@pChannel& (0+255),b
 13943  013FDC  0E01               	movlw	1
 13944  013FDE  0100               	movlb	0	; () banked
 13945  013FE0  6FEC               	movwf	SPI_Init@pMode& (0+255),b
 13946  013FE2  ECA7  F084         	call	_SPI_Init	;wreg free
 13947                           
 13948                           ;LCD.c: 64: SPI_MaxSpeed(&SPI2);
 13949  013FE6  0E85               	movlw	low _SPI2
 13950  013FE8  0100               	movlb	0	; () banked
 13951  013FEA  6FC9               	movwf	SPI_MaxSpeed@pInput& (0+255),b
 13952  013FEC  0E01               	movlw	high _SPI2
 13953  013FEE  0100               	movlb	0	; () banked
 13954  013FF0  6FCA               	movwf	(SPI_MaxSpeed@pInput+1)& (0+255),b
 13955  013FF2  EC50  F09F         	call	_SPI_MaxSpeed	;wreg free
 13956  013FF6  0012               	return		;funcret
 13957  013FF8                     __end_of_Configure_GPIOs:
 13958                           	opt stack 0
 13959                           tosu	equ	0xFFF
 13960                           tosh	equ	0xFFE
 13961                           tosl	equ	0xFFD
 13962                           pclath	equ	0xFFA
 13963                           tblptru	equ	0xFF8
 13964                           tblptrh	equ	0xFF7
 13965                           tblptrl	equ	0xFF6
 13966                           tablat	equ	0xFF5
 13967                           prodh	equ	0xFF4
 13968                           prodl	equ	0xFF3
 13969                           intcon	equ	0xFF2
 13970                           postinc0	equ	0xFEE
 13971                           wreg	equ	0xFE8
 13972                           indf1	equ	0xFE7
 13973                           postdec1	equ	0xFE5
 13974                           fsr1h	equ	0xFE2
 13975                           fsr1l	equ	0xFE1
 13976                           indf2	equ	0xFDF
 13977                           postinc2	equ	0xFDE
 13978                           postdec2	equ	0xFDD
 13979                           plusw2	equ	0xFDB
 13980                           fsr2h	equ	0xFDA
 13981                           fsr2l	equ	0xFD9
 13982                           status	equ	0xFD8
 13983                           
 13984 ;; *************** function _SPI_MaxSpeed *****************
 13985 ;; Defined at:
 13986 ;;		line 201 in file "Library/SPI.c"
 13987 ;; Parameters:    Size  Location     Type
 13988 ;;  pInput          2   15[BANK0 ] PTR struct SPI
 13989 ;;		 -> SPI2(11), 
 13990 ;; Auto vars:     Size  Location     Type
 13991 ;;		None
 13992 ;; Return value:  Size  Location     Type
 13993 ;;                  1    wreg      void 
 13994 ;; Registers used:
 13995 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13996 ;; Tracked objects:
 13997 ;;		On entry : 0/0
 13998 ;;		On exit  : 0/0
 13999 ;;		Unchanged: 0/0
 14000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14001 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14004 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14005 ;;Total ram usage:        2 bytes
 14006 ;; Hardware stack levels used:    1
 14007 ;; Hardware stack levels required when called:    9
 14008 ;; This function calls:
 14009 ;;		_Byte_SetBit
 14010 ;;		_Byte_SetQuad
 14011 ;; This function is called by:
 14012 ;;		_Configure_GPIOs
 14013 ;; This function uses a non-reentrant model
 14014 ;;
 14015                           
 14016                           	psect	text56
 14017  013EA0                     __ptext56:
 14018                           	opt stack 0
 14019  013EA0                     _SPI_MaxSpeed:
 14020                           	opt stack 18
 14021                           
 14022                           ;SPI.c: 205: Byte_SetBit(pInput->SSPCON1T, (UINT8)5, (UINT8)0);
 14023                           
 14024                           ;incstack = 0
 14025  013EA0  0100               	movlb	0	; () banked
 14026  013EA2  EE20 F006          	lfsr	2,6
 14027  013EA6  51C9               	movf	SPI_MaxSpeed@pInput& (0+255),w,b
 14028  013EA8  26D9               	addwf	fsr2l,f,c
 14029  013EAA  51CA               	movf	(SPI_MaxSpeed@pInput+1)& (0+255),w,b
 14030  013EAC  22DA               	addwfc	fsr2h,f,c
 14031  013EAE  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 14032  013EB2  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 14033  013EB6  0E05               	movlw	5
 14034  013EB8  0100               	movlb	0	; () banked
 14035  013EBA  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 14036  013EBC  0E00               	movlw	0
 14037  013EBE  0100               	movlb	0	; () banked
 14038  013EC0  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 14039  013EC2  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 14040                           
 14041                           ;SPI.c: 208: Byte_SetQuad(pInput->SSPCON1T, (UINT8)0, (UINT8)0);
 14042  013EC6  0100               	movlb	0	; () banked
 14043  013EC8  EE20 F006          	lfsr	2,6
 14044  013ECC  51C9               	movf	SPI_MaxSpeed@pInput& (0+255),w,b
 14045  013ECE  26D9               	addwf	fsr2l,f,c
 14046  013ED0  51CA               	movf	(SPI_MaxSpeed@pInput+1)& (0+255),w,b
 14047  013ED2  22DA               	addwfc	fsr2h,f,c
 14048  013ED4  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 14049  013ED8  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 14050  013EDC  0E00               	movlw	0
 14051  013EDE  0100               	movlb	0	; () banked
 14052  013EE0  6FC7               	movwf	Byte_SetQuad@pQuad& (0+255),b
 14053  013EE2  0E00               	movlw	0
 14054  013EE4  0100               	movlb	0	; () banked
 14055  013EE6  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 14056  013EE8  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 14057                           
 14058                           ;SPI.c: 209: Byte_SetBit(pInput->SSPCON1T, (UINT8)5, (UINT8)1);
 14059  013EEC  0100               	movlb	0	; () banked
 14060  013EEE  EE20 F006          	lfsr	2,6
 14061  013EF2  51C9               	movf	SPI_MaxSpeed@pInput& (0+255),w,b
 14062  013EF4  26D9               	addwf	fsr2l,f,c
 14063  013EF6  51CA               	movf	(SPI_MaxSpeed@pInput+1)& (0+255),w,b
 14064  013EF8  22DA               	addwfc	fsr2h,f,c
 14065  013EFA  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 14066  013EFE  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 14067  013F02  0E05               	movlw	5
 14068  013F04  0100               	movlb	0	; () banked
 14069  013F06  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 14070  013F08  0E01               	movlw	1
 14071  013F0A  0100               	movlb	0	; () banked
 14072  013F0C  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 14073  013F0E  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 14074  013F12  0012               	return		;funcret
 14075  013F14                     __end_of_SPI_MaxSpeed:
 14076                           	opt stack 0
 14077                           tosu	equ	0xFFF
 14078                           tosh	equ	0xFFE
 14079                           tosl	equ	0xFFD
 14080                           pclath	equ	0xFFA
 14081                           tblptru	equ	0xFF8
 14082                           tblptrh	equ	0xFF7
 14083                           tblptrl	equ	0xFF6
 14084                           tablat	equ	0xFF5
 14085                           prodh	equ	0xFF4
 14086                           prodl	equ	0xFF3
 14087                           intcon	equ	0xFF2
 14088                           postinc0	equ	0xFEE
 14089                           wreg	equ	0xFE8
 14090                           indf1	equ	0xFE7
 14091                           postdec1	equ	0xFE5
 14092                           fsr1h	equ	0xFE2
 14093                           fsr1l	equ	0xFE1
 14094                           indf2	equ	0xFDF
 14095                           postinc2	equ	0xFDE
 14096                           postdec2	equ	0xFDD
 14097                           plusw2	equ	0xFDB
 14098                           fsr2h	equ	0xFDA
 14099                           fsr2l	equ	0xFD9
 14100                           status	equ	0xFD8
 14101                           
 14102 ;; *************** function _LCD_Reset *****************
 14103 ;; Defined at:
 14104 ;;		line 95 in file "Library/LCD.c"
 14105 ;; Parameters:    Size  Location     Type
 14106 ;;		None
 14107 ;; Auto vars:     Size  Location     Type
 14108 ;;		None
 14109 ;; Return value:  Size  Location     Type
 14110 ;;                  1    wreg      void 
 14111 ;; Registers used:
 14112 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14113 ;; Tracked objects:
 14114 ;;		On entry : 0/0
 14115 ;;		On exit  : 0/0
 14116 ;;		Unchanged: 0/0
 14117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14122 ;;Total ram usage:        0 bytes
 14123 ;; Hardware stack levels used:    1
 14124 ;; Hardware stack levels required when called:   13
 14125 ;; This function calls:
 14126 ;;		_LED_Toggle
 14127 ;;		_Reset_High
 14128 ;;		_Reset_Low
 14129 ;;		_delay_ms
 14130 ;; This function is called by:
 14131 ;;		_Configure_GPIOs
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           
 14135                           	psect	text57
 14136  014420                     __ptext57:
 14137                           	opt stack 0
 14138  014420                     _LCD_Reset:
 14139                           	opt stack 14
 14140                           
 14141                           ;LCD.c: 97: Reset_High();
 14142                           
 14143                           ;incstack = 0
 14144  014420  EC0F  F0A5         	call	_Reset_High	;wreg free
 14145                           
 14146                           ;LCD.c: 98: LED_Toggle(eLED2);
 14147  014424  0E01               	movlw	1
 14148  014426  EC82  F0A2         	call	_LED_Toggle
 14149                           
 14150                           ;LCD.c: 99: delay_ms(0x80);
 14151  01442A  0E00               	movlw	0
 14152  01442C  0100               	movlb	0	; () banked
 14153  01442E  6FBB               	movwf	(delay_ms@ms+1)& (0+255),b
 14154  014430  0E80               	movlw	128
 14155  014432  6FBA               	movwf	delay_ms@ms& (0+255),b
 14156  014434  EC68  F0A0         	call	_delay_ms	;wreg free
 14157                           
 14158                           ;LCD.c: 100: LED_Toggle(eLED2);
 14159  014438  0E01               	movlw	1
 14160  01443A  EC82  F0A2         	call	_LED_Toggle
 14161                           
 14162                           ;LCD.c: 101: Reset_Low();
 14163  01443E  EC00  F0A5         	call	_Reset_Low	;wreg free
 14164                           
 14165                           ;LCD.c: 102: delay_ms(0x80);
 14166  014442  0E00               	movlw	0
 14167  014444  0100               	movlb	0	; () banked
 14168  014446  6FBB               	movwf	(delay_ms@ms+1)& (0+255),b
 14169  014448  0E80               	movlw	128
 14170  01444A  6FBA               	movwf	delay_ms@ms& (0+255),b
 14171  01444C  EC68  F0A0         	call	_delay_ms	;wreg free
 14172                           
 14173                           ;LCD.c: 103: LED_Toggle(eLED2);
 14174  014450  0E01               	movlw	1
 14175  014452  EC82  F0A2         	call	_LED_Toggle
 14176                           
 14177                           ;LCD.c: 104: Reset_High();
 14178  014456  EC0F  F0A5         	call	_Reset_High	;wreg free
 14179                           
 14180                           ;LCD.c: 105: delay_ms(0x80);
 14181  01445A  0E00               	movlw	0
 14182  01445C  0100               	movlb	0	; () banked
 14183  01445E  6FBB               	movwf	(delay_ms@ms+1)& (0+255),b
 14184  014460  0E80               	movlw	128
 14185  014462  6FBA               	movwf	delay_ms@ms& (0+255),b
 14186  014464  EC68  F0A0         	call	_delay_ms	;wreg free
 14187                           
 14188                           ;LCD.c: 106: LED_Toggle(eLED2);
 14189  014468  0E01               	movlw	1
 14190  01446A  EC82  F0A2         	call	_LED_Toggle
 14191  01446E  0012               	return		;funcret
 14192  014470                     __end_of_LCD_Reset:
 14193                           	opt stack 0
 14194                           tosu	equ	0xFFF
 14195                           tosh	equ	0xFFE
 14196                           tosl	equ	0xFFD
 14197                           pclath	equ	0xFFA
 14198                           tblptru	equ	0xFF8
 14199                           tblptrh	equ	0xFF7
 14200                           tblptrl	equ	0xFF6
 14201                           tablat	equ	0xFF5
 14202                           prodh	equ	0xFF4
 14203                           prodl	equ	0xFF3
 14204                           intcon	equ	0xFF2
 14205                           postinc0	equ	0xFEE
 14206                           wreg	equ	0xFE8
 14207                           indf1	equ	0xFE7
 14208                           postdec1	equ	0xFE5
 14209                           fsr1h	equ	0xFE2
 14210                           fsr1l	equ	0xFE1
 14211                           indf2	equ	0xFDF
 14212                           postinc2	equ	0xFDE
 14213                           postdec2	equ	0xFDD
 14214                           plusw2	equ	0xFDB
 14215                           fsr2h	equ	0xFDA
 14216                           fsr2l	equ	0xFD9
 14217                           status	equ	0xFD8
 14218                           
 14219 ;; *************** function _delay_ms *****************
 14220 ;; Defined at:
 14221 ;;		line 240 in file "Library/Types.c"
 14222 ;; Parameters:    Size  Location     Type
 14223 ;;  ms              2    0[BANK0 ] unsigned short 
 14224 ;; Auto vars:     Size  Location     Type
 14225 ;;  u               4    2[BANK0 ] volatile unsigned long 
 14226 ;; Return value:  Size  Location     Type
 14227 ;;                  1    wreg      void 
 14228 ;; Registers used:
 14229 ;;		wreg, status,2, status,0
 14230 ;; Tracked objects:
 14231 ;;		On entry : 0/0
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14235 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14236 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14238 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14239 ;;Total ram usage:        6 bytes
 14240 ;; Hardware stack levels used:    1
 14241 ;; Hardware stack levels required when called:    7
 14242 ;; This function calls:
 14243 ;;		Nothing
 14244 ;; This function is called by:
 14245 ;;		_LCD_Reset
 14246 ;;		_LCD_Init
 14247 ;;		_MXK_Init
 14248 ;;		_irobot_stop_motion
 14249 ;;		_move_stepper_to
 14250 ;;		_irobot_move_to
 14251 ;;		_rotateCW
 14252 ;;		_rotateCCW
 14253 ;; This function uses a non-reentrant model
 14254 ;;
 14255                           
 14256                           	psect	text58
 14257  0140D0                     __ptext58:
 14258                           	opt stack 0
 14259  0140D0                     _delay_ms:
 14260                           	opt stack 21
 14261                           
 14262                           ;Types.c: 242: volatile unsigned long u;
 14263                           ;Types.c: 243: while (ms--)
 14264                           
 14265                           ;incstack = 0
 14266  0140D0  D01F               	goto	u9680
 14267  0140D2                     l12732:
 14268                           
 14269                           ;Types.c: 244: {
 14270                           ;Types.c: 246: for (u = 0; u < (((48*1000000L) / 4000UL) / 10UL); u++) {
 14271  0140D2  0E00               	movlw	0
 14272  0140D4  0100               	movlb	0	; () banked
 14273  0140D6  6FBC               	movwf	delay_ms@u& (0+255),b	;volatile
 14274  0140D8  0E00               	movlw	0
 14275  0140DA  6FBD               	movwf	(delay_ms@u+1)& (0+255),b	;volatile
 14276  0140DC  0E00               	movlw	0
 14277  0140DE  6FBE               	movwf	(delay_ms@u+2)& (0+255),b	;volatile
 14278  0140E0  0E00               	movlw	0
 14279  0140E2  6FBF               	movwf	(delay_ms@u+3)& (0+255),b	;volatile
 14280  0140E4                     l12734:
 14281                           
 14282                           ; BSR set to: 0
 14283  0140E4  0100               	movlb	0	; () banked
 14284  0140E6  51BF               	movf	(delay_ms@u+3)& (0+255),w,b	;volatile
 14285  0140E8  0100               	movlb	0	; () banked
 14286  0140EA  11BE               	iorwf	(delay_ms@u+2)& (0+255),w,b	;volatile
 14287  0140EC  E111               	bnz	l12740
 14288  0140EE  0EB0               	movlw	176
 14289  0140F0  0100               	movlb	0	; () banked
 14290  0140F2  5DBC               	subwf	delay_ms@u& (0+255),w,b	;volatile
 14291  0140F4  0E04               	movlw	4
 14292  0140F6  0100               	movlb	0	; () banked
 14293  0140F8  59BD               	subwfb	(delay_ms@u+1)& (0+255),w,b	;volatile
 14294  0140FA  B0D8               	btfsc	status,0,c
 14295  0140FC  D009               	goto	u9680
 14296                           
 14297                           ; BSR set to: 0
 14298                           
 14299                           ; BSR set to: 0
 14300  0140FE  F000               	nop		; ;# 
 14301  014100  0E01               	movlw	1
 14302  014102  0100               	movlb	0	; () banked
 14303  014104  27BC               	addwf	delay_ms@u& (0+255),f,b	;volatile
 14304  014106  0E00               	movlw	0
 14305  014108  23BD               	addwfc	(delay_ms@u+1)& (0+255),f,b	;volatile
 14306  01410A  23BE               	addwfc	(delay_ms@u+2)& (0+255),f,b	;volatile
 14307  01410C  23BF               	addwfc	(delay_ms@u+3)& (0+255),f,b	;volatile
 14308  01410E  D7EA               	goto	l12734
 14309  014110                     u9680:
 14310  014110                     l12740:
 14311  014110  0100               	movlb	0	; () banked
 14312  014112  07BA               	decf	delay_ms@ms& (0+255),f,b
 14313  014114  A0D8               	btfss	status,0,c
 14314  014116  07BB               	decf	(delay_ms@ms+1)& (0+255),f,b
 14315  014118  0100               	movlb	0	; () banked
 14316  01411A  29BA               	incf	delay_ms@ms& (0+255),w,b
 14317  01411C  E1DA               	bnz	l12732
 14318  01411E  0100               	movlb	0	; () banked
 14319  014120  29BB               	incf	(delay_ms@ms+1)& (0+255),w,b
 14320  014122  A4D8               	btfss	status,2,c
 14321  014124  D7D6               	goto	l824
 14322                           
 14323                           ; BSR set to: 0
 14324                           ;Types.c: 251: }
 14325                           ;Types.c: 252: }
 14326                           ;Types.c: 253: u = 0x8008;
 14327                           
 14328                           ; BSR set to: 0
 14329  014126  0E08               	movlw	8
 14330  014128  0100               	movlb	0	; () banked
 14331  01412A  6FBC               	movwf	delay_ms@u& (0+255),b	;volatile
 14332  01412C  0E80               	movlw	128
 14333  01412E  6FBD               	movwf	(delay_ms@u+1)& (0+255),b	;volatile
 14334  014130  0E00               	movlw	0
 14335  014132  6FBE               	movwf	(delay_ms@u+2)& (0+255),b	;volatile
 14336  014134  0E00               	movlw	0
 14337  014136  6FBF               	movwf	(delay_ms@u+3)& (0+255),b	;volatile
 14338                           
 14339                           ; BSR set to: 0
 14340  014138  0012               	return		;funcret
 14341  01413A                     __end_of_delay_ms:
 14342                           	opt stack 0
 14343                           tosu	equ	0xFFF
 14344                           tosh	equ	0xFFE
 14345                           tosl	equ	0xFFD
 14346                           pclath	equ	0xFFA
 14347                           tblptru	equ	0xFF8
 14348                           tblptrh	equ	0xFF7
 14349                           tblptrl	equ	0xFF6
 14350                           tablat	equ	0xFF5
 14351                           prodh	equ	0xFF4
 14352                           prodl	equ	0xFF3
 14353                           intcon	equ	0xFF2
 14354                           postinc0	equ	0xFEE
 14355                           wreg	equ	0xFE8
 14356                           indf1	equ	0xFE7
 14357                           postdec1	equ	0xFE5
 14358                           fsr1h	equ	0xFE2
 14359                           fsr1l	equ	0xFE1
 14360                           indf2	equ	0xFDF
 14361                           postinc2	equ	0xFDE
 14362                           postdec2	equ	0xFDD
 14363                           plusw2	equ	0xFDB
 14364                           fsr2h	equ	0xFDA
 14365                           fsr2l	equ	0xFD9
 14366                           status	equ	0xFD8
 14367                           
 14368 ;; *************** function _Reset_Low *****************
 14369 ;; Defined at:
 14370 ;;		line 32 in file "Library/LCD.c"
 14371 ;; Parameters:    Size  Location     Type
 14372 ;;		None
 14373 ;; Auto vars:     Size  Location     Type
 14374 ;;		None
 14375 ;; Return value:  Size  Location     Type
 14376 ;;                  1    wreg      void 
 14377 ;; Registers used:
 14378 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14379 ;; Tracked objects:
 14380 ;;		On entry : 0/0
 14381 ;;		On exit  : 0/0
 14382 ;;		Unchanged: 0/0
 14383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14388 ;;Total ram usage:        0 bytes
 14389 ;; Hardware stack levels used:    1
 14390 ;; Hardware stack levels required when called:   11
 14391 ;; This function calls:
 14392 ;;		_Port_SetPin
 14393 ;; This function is called by:
 14394 ;;		_LCD_Reset
 14395 ;; This function uses a non-reentrant model
 14396 ;;
 14397                           
 14398                           	psect	text59
 14399  014A00                     __ptext59:
 14400                           	opt stack 0
 14401  014A00                     _Reset_Low:
 14402                           	opt stack 15
 14403                           
 14404                           ;LCD.c: 34: Port_SetPin(&PortF, eP6, 1);
 14405                           
 14406                           ; BSR set to: 0
 14407                           ;incstack = 0
 14408  014A00  0EC2               	movlw	low _PortF
 14409  014A02  0100               	movlb	0	; () banked
 14410  014A04  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
 14411  014A06  0E01               	movlw	high _PortF
 14412  014A08  0100               	movlb	0	; () banked
 14413  014A0A  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
 14414  014A0C  0E06               	movlw	6
 14415  014A0E  0100               	movlb	0	; () banked
 14416  014A10  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
 14417  014A12  0E01               	movlw	1
 14418  014A14  0100               	movlb	0	; () banked
 14419  014A16  6FCC               	movwf	Port_SetPin@pValue& (0+255),b
 14420  014A18  ECF5  F098         	call	_Port_SetPin	;wreg free
 14421  014A1C  0012               	return		;funcret
 14422  014A1E                     __end_of_Reset_Low:
 14423                           	opt stack 0
 14424                           tosu	equ	0xFFF
 14425                           tosh	equ	0xFFE
 14426                           tosl	equ	0xFFD
 14427                           pclath	equ	0xFFA
 14428                           tblptru	equ	0xFF8
 14429                           tblptrh	equ	0xFF7
 14430                           tblptrl	equ	0xFF6
 14431                           tablat	equ	0xFF5
 14432                           prodh	equ	0xFF4
 14433                           prodl	equ	0xFF3
 14434                           intcon	equ	0xFF2
 14435                           postinc0	equ	0xFEE
 14436                           wreg	equ	0xFE8
 14437                           indf1	equ	0xFE7
 14438                           postdec1	equ	0xFE5
 14439                           fsr1h	equ	0xFE2
 14440                           fsr1l	equ	0xFE1
 14441                           indf2	equ	0xFDF
 14442                           postinc2	equ	0xFDE
 14443                           postdec2	equ	0xFDD
 14444                           plusw2	equ	0xFDB
 14445                           fsr2h	equ	0xFDA
 14446                           fsr2l	equ	0xFD9
 14447                           status	equ	0xFD8
 14448                           
 14449 ;; *************** function _Reset_High *****************
 14450 ;; Defined at:
 14451 ;;		line 36 in file "Library/LCD.c"
 14452 ;; Parameters:    Size  Location     Type
 14453 ;;		None
 14454 ;; Auto vars:     Size  Location     Type
 14455 ;;		None
 14456 ;; Return value:  Size  Location     Type
 14457 ;;                  1    wreg      void 
 14458 ;; Registers used:
 14459 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14460 ;; Tracked objects:
 14461 ;;		On entry : 0/0
 14462 ;;		On exit  : 0/0
 14463 ;;		Unchanged: 0/0
 14464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14468 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14469 ;;Total ram usage:        0 bytes
 14470 ;; Hardware stack levels used:    1
 14471 ;; Hardware stack levels required when called:   11
 14472 ;; This function calls:
 14473 ;;		_Port_SetPin
 14474 ;; This function is called by:
 14475 ;;		_LCD_Reset
 14476 ;; This function uses a non-reentrant model
 14477 ;;
 14478                           
 14479                           	psect	text60
 14480  014A1E                     __ptext60:
 14481                           	opt stack 0
 14482  014A1E                     _Reset_High:
 14483                           	opt stack 15
 14484                           
 14485                           ;LCD.c: 38: Port_SetPin(&PortF, eP6, 0);
 14486                           
 14487                           ;incstack = 0
 14488  014A1E  0EC2               	movlw	low _PortF
 14489  014A20  0100               	movlb	0	; () banked
 14490  014A22  6FC9               	movwf	Port_SetPin@pInput& (0+255),b
 14491  014A24  0E01               	movlw	high _PortF
 14492  014A26  0100               	movlb	0	; () banked
 14493  014A28  6FCA               	movwf	(Port_SetPin@pInput+1)& (0+255),b
 14494  014A2A  0E06               	movlw	6
 14495  014A2C  0100               	movlb	0	; () banked
 14496  014A2E  6FCB               	movwf	Port_SetPin@pPin& (0+255),b
 14497  014A30  0E00               	movlw	0
 14498  014A32  0100               	movlb	0	; () banked
 14499  014A34  6FCC               	movwf	Port_SetPin@pValue& (0+255),b
 14500  014A36  ECF5  F098         	call	_Port_SetPin	;wreg free
 14501  014A3A  0012               	return		;funcret
 14502  014A3C                     __end_of_Reset_High:
 14503                           	opt stack 0
 14504                           tosu	equ	0xFFF
 14505                           tosh	equ	0xFFE
 14506                           tosl	equ	0xFFD
 14507                           pclath	equ	0xFFA
 14508                           tblptru	equ	0xFF8
 14509                           tblptrh	equ	0xFF7
 14510                           tblptrl	equ	0xFF6
 14511                           tablat	equ	0xFF5
 14512                           prodh	equ	0xFF4
 14513                           prodl	equ	0xFF3
 14514                           intcon	equ	0xFF2
 14515                           postinc0	equ	0xFEE
 14516                           wreg	equ	0xFE8
 14517                           indf1	equ	0xFE7
 14518                           postdec1	equ	0xFE5
 14519                           fsr1h	equ	0xFE2
 14520                           fsr1l	equ	0xFE1
 14521                           indf2	equ	0xFDF
 14522                           postinc2	equ	0xFDE
 14523                           postdec2	equ	0xFDD
 14524                           plusw2	equ	0xFDB
 14525                           fsr2h	equ	0xFDA
 14526                           fsr2l	equ	0xFD9
 14527                           status	equ	0xFD8
 14528                           
 14529 ;; *************** function _LED_Toggle *****************
 14530 ;; Defined at:
 14531 ;;		line 50 in file "Library/LED.c"
 14532 ;; Parameters:    Size  Location     Type
 14533 ;;  pLED            1    wreg     enum E6739
 14534 ;; Auto vars:     Size  Location     Type
 14535 ;;  pLED            1   24[BANK0 ] enum E6739
 14536 ;; Return value:  Size  Location     Type
 14537 ;;                  1    wreg      void 
 14538 ;; Registers used:
 14539 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14540 ;; Tracked objects:
 14541 ;;		On entry : 0/0
 14542 ;;		On exit  : 0/0
 14543 ;;		Unchanged: 0/0
 14544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14546 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14548 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14549 ;;Total ram usage:        1 bytes
 14550 ;; Hardware stack levels used:    1
 14551 ;; Hardware stack levels required when called:   12
 14552 ;; This function calls:
 14553 ;;		_Port_TogglePin
 14554 ;; This function is called by:
 14555 ;;		_LCD_Reset
 14556 ;;		_Event_ADCSequenceComplete
 14557 ;;		_Event_DIPSwitch
 14558 ;;		_Event_HMI_DIPSwitch
 14559 ;;		_Event_TestButton
 14560 ;;		_Event_HMI_LeftButton
 14561 ;;		_Event_HMI_RightButton
 14562 ;;		_Event_HMI_UpButton
 14563 ;;		_Event_HMI_DownButton
 14564 ;; This function uses a non-reentrant model
 14565 ;;
 14566                           
 14567                           	psect	text61
 14568  014504                     __ptext61:
 14569                           	opt stack 0
 14570  014504                     _LED_Toggle:
 14571                           	opt stack 14
 14572                           
 14573                           ;incstack = 0
 14574                           ;LED_Toggle@pLED stored from wreg
 14575  014504  0100               	movlb	0	; () banked
 14576  014506  6FD2               	movwf	LED_Toggle@pLED& (0+255),b
 14577                           
 14578                           ;LED.c: 52: switch (pLED)
 14579  014508  D018               	goto	l234
 14580  01450A                     
 14581                           ;LED.c: 55: Port_TogglePin(&PortC, eP0);
 14582  01450A  0EA4               	movlw	low _PortC
 14583  01450C  0100               	movlb	0	; () banked
 14584  01450E  6FCE               	movwf	Port_TogglePin@pInput& (0+255),b
 14585  014510  0E00               	movlw	high _PortC
 14586  014512  0100               	movlb	0	; () banked
 14587  014514  6FCF               	movwf	(Port_TogglePin@pInput+1)& (0+255),b
 14588  014516  0E00               	movlw	0
 14589  014518  0100               	movlb	0	; () banked
 14590  01451A  6FD0               	movwf	Port_TogglePin@pPin& (0+255),b
 14591  01451C  EC01  F0A4         	call	_Port_TogglePin	;wreg free
 14592                           
 14593                           ;LED.c: 56: break;
 14594  014520  0012               	return	
 14595  014522                     
 14596                           ;LED.c: 58: Port_TogglePin(&PortC, eP1);
 14597  014522  0EA4               	movlw	low _PortC
 14598  014524  0100               	movlb	0	; () banked
 14599  014526  6FCE               	movwf	Port_TogglePin@pInput& (0+255),b
 14600  014528  0E00               	movlw	high _PortC
 14601  01452A  0100               	movlb	0	; () banked
 14602  01452C  6FCF               	movwf	(Port_TogglePin@pInput+1)& (0+255),b
 14603  01452E  0E01               	movlw	1
 14604  014530  0100               	movlb	0	; () banked
 14605  014532  6FD0               	movwf	Port_TogglePin@pPin& (0+255),b
 14606  014534  EC01  F0A4         	call	_Port_TogglePin	;wreg free
 14607                           
 14608                           ;LED.c: 60: }
 14609                           
 14610                           ;LED.c: 59: break;
 14611  014538  0012               	return	
 14612  01453A                     l234:
 14613  01453A  0100               	movlb	0	; () banked
 14614  01453C  51D2               	movf	LED_Toggle@pLED& (0+255),w,b
 14615                           
 14616                           ; Switch size 1, requested type "space"
 14617                           ; Number of cases is 2, Range of values is 0 to 1
 14618                           ; switch strategies available:
 14619                           ; Name         Instructions Cycles
 14620                           ; simple_byte            7     4 (average)
 14621                           ;	Chosen strategy is simple_byte
 14622  01453E  0A00               	xorlw	0	; case 0
 14623  014540  B4D8               	btfsc	status,2,c
 14624  014542  D7E3               	goto	l235
 14625  014544  0A01               	xorlw	1	; case 1
 14626  014546  A4D8               	btfss	status,2,c
 14627  014548  0012               	return	
 14628  01454A  D7EB               	goto	l237
 14629  01454C                     __end_of_LED_Toggle:
 14630                           	opt stack 0
 14631                           tosu	equ	0xFFF
 14632                           tosh	equ	0xFFE
 14633                           tosl	equ	0xFFD
 14634                           pclath	equ	0xFFA
 14635                           tblptru	equ	0xFF8
 14636                           tblptrh	equ	0xFF7
 14637                           tblptrl	equ	0xFF6
 14638                           tablat	equ	0xFF5
 14639                           prodh	equ	0xFF4
 14640                           prodl	equ	0xFF3
 14641                           intcon	equ	0xFF2
 14642                           postinc0	equ	0xFEE
 14643                           wreg	equ	0xFE8
 14644                           indf1	equ	0xFE7
 14645                           postdec1	equ	0xFE5
 14646                           fsr1h	equ	0xFE2
 14647                           fsr1l	equ	0xFE1
 14648                           indf2	equ	0xFDF
 14649                           postinc2	equ	0xFDE
 14650                           postdec2	equ	0xFDD
 14651                           plusw2	equ	0xFDB
 14652                           fsr2h	equ	0xFDA
 14653                           fsr2l	equ	0xFD9
 14654                           status	equ	0xFD8
 14655                           
 14656 ;; *************** function _Port_TogglePin *****************
 14657 ;; Defined at:
 14658 ;;		line 278 in file "Library/Port.c"
 14659 ;; Parameters:    Size  Location     Type
 14660 ;;  pInput          2   20[BANK0 ] const PTR struct Port
 14661 ;;		 -> PortC(10), 
 14662 ;;  pPin            1   22[BANK0 ] enum E6750
 14663 ;; Auto vars:     Size  Location     Type
 14664 ;;  Value           1   23[BANK0 ] unsigned char 
 14665 ;; Return value:  Size  Location     Type
 14666 ;;                  1    wreg      void 
 14667 ;; Registers used:
 14668 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14669 ;; Tracked objects:
 14670 ;;		On entry : 0/0
 14671 ;;		On exit  : 0/0
 14672 ;;		Unchanged: 0/0
 14673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14674 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14675 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14677 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14678 ;;Total ram usage:        4 bytes
 14679 ;; Hardware stack levels used:    1
 14680 ;; Hardware stack levels required when called:   11
 14681 ;; This function calls:
 14682 ;;		_Port_GetPin
 14683 ;;		_Port_SetPin
 14684 ;; This function is called by:
 14685 ;;		_LED_Toggle
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689                           	psect	text62
 14690  014802                     __ptext62:
 14691                           	opt stack 0
 14692  014802                     _Port_TogglePin:
 14693                           	opt stack 14
 14694                           
 14695                           ;Port.c: 280: UINT8 Value;
 14696                           ;Port.c: 281: Value = Port_GetPin(pInput, pPin);
 14697                           
 14698                           ;incstack = 0
 14699  014802  C0CE  F0BA         	movff	Port_TogglePin@pInput,Port_GetPin@pInput
 14700  014806  C0CF  F0BB         	movff	Port_TogglePin@pInput+1,Port_GetPin@pInput+1
 14701  01480A  C0D0  F0BC         	movff	Port_TogglePin@pPin,Port_GetPin@pPin
 14702  01480E  ECCA  F0A2         	call	_Port_GetPin	;wreg free
 14703  014812  0100               	movlb	0	; () banked
 14704  014814  6FD1               	movwf	Port_TogglePin@Value& (0+255),b
 14705                           
 14706                           ; BSR set to: 0
 14707                           ;Port.c: 282: Value ^= 0x01;
 14708  014816  0E01               	movlw	1
 14709  014818  0100               	movlb	0	; () banked
 14710  01481A  1BD1               	xorwf	Port_TogglePin@Value& (0+255),f,b
 14711                           
 14712                           ; BSR set to: 0
 14713                           ;Port.c: 283: Port_SetPin(pInput, pPin, Value);
 14714  01481C  C0CE  F0C9         	movff	Port_TogglePin@pInput,Port_SetPin@pInput
 14715  014820  C0CF  F0CA         	movff	Port_TogglePin@pInput+1,Port_SetPin@pInput+1
 14716  014824  C0D0  F0CB         	movff	Port_TogglePin@pPin,Port_SetPin@pPin
 14717  014828  C0D1  F0CC         	movff	Port_TogglePin@Value,Port_SetPin@pValue
 14718  01482C  ECF5  F098         	call	_Port_SetPin	;wreg free
 14719  014830  0012               	return		;funcret
 14720  014832                     __end_of_Port_TogglePin:
 14721                           	opt stack 0
 14722                           tosu	equ	0xFFF
 14723                           tosh	equ	0xFFE
 14724                           tosl	equ	0xFFD
 14725                           pclath	equ	0xFFA
 14726                           tblptru	equ	0xFF8
 14727                           tblptrh	equ	0xFF7
 14728                           tblptrl	equ	0xFF6
 14729                           tablat	equ	0xFF5
 14730                           prodh	equ	0xFF4
 14731                           prodl	equ	0xFF3
 14732                           intcon	equ	0xFF2
 14733                           postinc0	equ	0xFEE
 14734                           wreg	equ	0xFE8
 14735                           indf1	equ	0xFE7
 14736                           postdec1	equ	0xFE5
 14737                           fsr1h	equ	0xFE2
 14738                           fsr1l	equ	0xFE1
 14739                           indf2	equ	0xFDF
 14740                           postinc2	equ	0xFDE
 14741                           postdec2	equ	0xFDD
 14742                           plusw2	equ	0xFDB
 14743                           fsr2h	equ	0xFDA
 14744                           fsr2l	equ	0xFD9
 14745                           status	equ	0xFD8
 14746                           
 14747 ;; *************** function _Port_SetPin *****************
 14748 ;; Defined at:
 14749 ;;		line 247 in file "Library/Port.c"
 14750 ;; Parameters:    Size  Location     Type
 14751 ;;  pInput          2   15[BANK0 ] const PTR struct Port
 14752 ;;		 -> PortG(10), PortE(10), PortC(10), PortF(10), 
 14753 ;;  pPin            1   17[BANK0 ] enum E6750
 14754 ;;  pValue          1   18[BANK0 ] unsigned char 
 14755 ;; Auto vars:     Size  Location     Type
 14756 ;;  Type            1   19[BANK0 ] enum E6795
 14757 ;; Return value:  Size  Location     Type
 14758 ;;                  1    wreg      void 
 14759 ;; Registers used:
 14760 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14761 ;; Tracked objects:
 14762 ;;		On entry : 0/0
 14763 ;;		On exit  : 0/0
 14764 ;;		Unchanged: 0/0
 14765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14766 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14767 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14769 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14770 ;;Total ram usage:        5 bytes
 14771 ;; Hardware stack levels used:    1
 14772 ;; Hardware stack levels required when called:   10
 14773 ;; This function calls:
 14774 ;;		_Byte_SetBit
 14775 ;;		_Word_GetPair
 14776 ;; This function is called by:
 14777 ;;		_Reset_Low
 14778 ;;		_Reset_High
 14779 ;;		_LED_Set
 14780 ;;		_Port_TogglePin
 14781 ;;		_Motor_Init
 14782 ;;		_Motor_Step
 14783 ;;		_MXK_Init
 14784 ;; This function uses a non-reentrant model
 14785 ;;
 14786                           
 14787                           	psect	text63
 14788  0131EA                     __ptext63:
 14789                           	opt stack 0
 14790  0131EA                     _Port_SetPin:
 14791                           	opt stack 17
 14792                           
 14793                           ;Port.c: 249: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, (UINT8)pPin);
 14794                           
 14795                           ;incstack = 0
 14796  0131EA  0E08               	movlw	8
 14797  0131EC  0100               	movlb	0	; () banked
 14798  0131EE  25C9               	addwf	Port_SetPin@pInput& (0+255),w,b
 14799  0131F0  0100               	movlb	0	; () banked
 14800  0131F2  6FC6               	movwf	Word_GetPair@pInput& (0+255),b
 14801  0131F4  0E00               	movlw	0
 14802  0131F6  0100               	movlb	0	; () banked
 14803  0131F8  21CA               	addwfc	(Port_SetPin@pInput+1)& (0+255),w,b
 14804  0131FA  0100               	movlb	0	; () banked
 14805  0131FC  6FC7               	movwf	(Word_GetPair@pInput+1)& (0+255),b
 14806  0131FE  C0CB  F0C8         	movff	Port_SetPin@pPin,Word_GetPair@pPair
 14807  013202  ECAE  F0A3         	call	_Word_GetPair	;wreg free
 14808  013206  0100               	movlb	0	; () banked
 14809  013208  6FCD               	movwf	Port_SetPin@Type& (0+255),b
 14810                           
 14811                           ;Port.c: 250: switch (Type)
 14812  01320A  D042               	goto	l427
 14813  01320C                     
 14814                           ; BSR set to: 0
 14815                           ;Port.c: 256: pValue &= 1;
 14816                           
 14817                           ; BSR set to: 0
 14818  01320C  0E01               	movlw	1
 14819  01320E  0100               	movlb	0	; () banked
 14820  013210  17CC               	andwf	Port_SetPin@pValue& (0+255),f,b
 14821                           
 14822                           ; BSR set to: 0
 14823                           ;Port.c: 257: Byte_SetBit(pInput->mDirection, pPin, pValue);
 14824  013212  0100               	movlb	0	; () banked
 14825  013214  EE20 F002          	lfsr	2,2
 14826  013218  51C9               	movf	Port_SetPin@pInput& (0+255),w,b
 14827  01321A  26D9               	addwf	fsr2l,f,c
 14828  01321C  51CA               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
 14829  01321E  22DA               	addwfc	fsr2h,f,c
 14830  013220  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 14831  013224  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 14832  013228  C0CB  F0BC         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
 14833  01322C  C0CC  F0BD         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
 14834  013230  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 14835                           
 14836                           ;Port.c: 258: break;
 14837  013234  0012               	return	
 14838  013236                     
 14839                           ;Port.c: 261: pValue &= 1;
 14840  013236  0E01               	movlw	1
 14841  013238  0100               	movlb	0	; () banked
 14842  01323A  17CC               	andwf	Port_SetPin@pValue& (0+255),f,b
 14843                           
 14844                           ;Port.c: 262: pValue ^= 1;
 14845  01323C  0E01               	movlw	1
 14846  01323E  0100               	movlb	0	; () banked
 14847  013240  1BCC               	xorwf	Port_SetPin@pValue& (0+255),f,b
 14848                           
 14849                           ; BSR set to: 0
 14850                           ;Port.c: 263: Byte_SetBit(pInput->mDirection, pPin, pValue);
 14851  013242  0100               	movlb	0	; () banked
 14852  013244  EE20 F002          	lfsr	2,2
 14853  013248  51C9               	movf	Port_SetPin@pInput& (0+255),w,b
 14854  01324A  26D9               	addwf	fsr2l,f,c
 14855  01324C  51CA               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
 14856  01324E  22DA               	addwfc	fsr2h,f,c
 14857  013250  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 14858  013254  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 14859  013258  C0CB  F0BC         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
 14860  01325C  C0CC  F0BD         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
 14861  013260  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 14862                           
 14863                           ;Port.c: 264: break;
 14864  013264  0012               	return	
 14865  013266                     
 14866                           ;Port.c: 266: pValue &= 1;
 14867  013266  0E01               	movlw	1
 14868  013268  0100               	movlb	0	; () banked
 14869  01326A  17CC               	andwf	Port_SetPin@pValue& (0+255),f,b
 14870                           
 14871                           ; BSR set to: 0
 14872                           ;Port.c: 267: Byte_SetBit(pInput->mOutput, pPin, pValue);
 14873  01326C  0100               	movlb	0	; () banked
 14874  01326E  EE20 F004          	lfsr	2,4
 14875  013272  51C9               	movf	Port_SetPin@pInput& (0+255),w,b
 14876  013274  26D9               	addwf	fsr2l,f,c
 14877  013276  51CA               	movf	(Port_SetPin@pInput+1)& (0+255),w,b
 14878  013278  22DA               	addwfc	fsr2h,f,c
 14879  01327A  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 14880  01327E  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 14881  013282  C0CB  F0BC         	movff	Port_SetPin@pPin,Byte_SetBit@pBit
 14882  013286  C0CC  F0BD         	movff	Port_SetPin@pValue,Byte_SetBit@pValue
 14883  01328A  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 14884                           
 14885                           ;Port.c: 269: }
 14886                           
 14887                           ;Port.c: 268: break;
 14888  01328E  0012               	return	
 14889  013290                     l427:
 14890  013290  0100               	movlb	0	; () banked
 14891  013292  51CD               	movf	Port_SetPin@Type& (0+255),w,b
 14892                           
 14893                           ; Switch size 1, requested type "space"
 14894                           ; Number of cases is 4, Range of values is 0 to 3
 14895                           ; switch strategies available:
 14896                           ; Name         Instructions Cycles
 14897                           ; simple_byte           13     7 (average)
 14898                           ;	Chosen strategy is simple_byte
 14899  013294  0A00               	xorlw	0	; case 0
 14900  013296  B4D8               	btfsc	status,2,c
 14901  013298  0012               	return	
 14902  01329A  0A01               	xorlw	1	; case 1
 14903  01329C  B4D8               	btfsc	status,2,c
 14904  01329E  D7B6               	goto	l430
 14905  0132A0  0A03               	xorlw	3	; case 2
 14906  0132A2  B4D8               	btfsc	status,2,c
 14907  0132A4  D7C8               	goto	l432
 14908  0132A6  0A01               	xorlw	1	; case 3
 14909  0132A8  A4D8               	btfss	status,2,c
 14910  0132AA  0012               	return	
 14911  0132AC  D7DC               	goto	l433
 14912  0132AE                     __end_of_Port_SetPin:
 14913                           	opt stack 0
 14914                           tosu	equ	0xFFF
 14915                           tosh	equ	0xFFE
 14916                           tosl	equ	0xFFD
 14917                           pclath	equ	0xFFA
 14918                           tblptru	equ	0xFF8
 14919                           tblptrh	equ	0xFF7
 14920                           tblptrl	equ	0xFF6
 14921                           tablat	equ	0xFF5
 14922                           prodh	equ	0xFF4
 14923                           prodl	equ	0xFF3
 14924                           intcon	equ	0xFF2
 14925                           postinc0	equ	0xFEE
 14926                           wreg	equ	0xFE8
 14927                           indf1	equ	0xFE7
 14928                           postdec1	equ	0xFE5
 14929                           fsr1h	equ	0xFE2
 14930                           fsr1l	equ	0xFE1
 14931                           indf2	equ	0xFDF
 14932                           postinc2	equ	0xFDE
 14933                           postdec2	equ	0xFDD
 14934                           plusw2	equ	0xFDB
 14935                           fsr2h	equ	0xFDA
 14936                           fsr2l	equ	0xFD9
 14937                           status	equ	0xFD8
 14938                           
 14939 ;; *************** function _Port_GetPin *****************
 14940 ;; Defined at:
 14941 ;;		line 271 in file "Library/Port.c"
 14942 ;; Parameters:    Size  Location     Type
 14943 ;;  pInput          2    0[BANK0 ] const PTR struct Port
 14944 ;;		 -> PortB(10), PortE(10), PortC(10), 
 14945 ;;  pPin            1    2[BANK0 ] enum E6750
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;  Output          1    5[BANK0 ] unsigned char 
 14948 ;; Return value:  Size  Location     Type
 14949 ;;                  1    wreg      unsigned char 
 14950 ;; Registers used:
 14951 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14952 ;; Tracked objects:
 14953 ;;		On entry : 0/0
 14954 ;;		On exit  : 0/0
 14955 ;;		Unchanged: 0/0
 14956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14957 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14958 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14959 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14960 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14961 ;;Total ram usage:        6 bytes
 14962 ;; Hardware stack levels used:    1
 14963 ;; Hardware stack levels required when called:    7
 14964 ;; This function calls:
 14965 ;;		Nothing
 14966 ;; This function is called by:
 14967 ;;		_Port_TogglePin
 14968 ;;		_HMI_LeftSwitch
 14969 ;;		_HMI_RightSwitch
 14970 ;;		_HMI_UpSwitch
 14971 ;;		_HMI_DownSwitch
 14972 ;;		_MXK_TestButton
 14973 ;; This function uses a non-reentrant model
 14974 ;;
 14975                           
 14976                           	psect	text64
 14977  014594                     __ptext64:
 14978                           	opt stack 0
 14979  014594                     _Port_GetPin:
 14980                           	opt stack 17
 14981                           
 14982                           ;Port.c: 273: UINT8 Output = pInput->mInput->mBits;
 14983                           
 14984                           ;incstack = 0
 14985  014594  0100               	movlb	0	; () banked
 14986  014596  EE20 F006          	lfsr	2,6
 14987  01459A  51BA               	movf	Port_GetPin@pInput& (0+255),w,b
 14988  01459C  26D9               	addwf	fsr2l,f,c
 14989  01459E  51BB               	movf	(Port_GetPin@pInput+1)& (0+255),w,b
 14990  0145A0  22DA               	addwfc	fsr2h,f,c
 14991  0145A2  CFDE F0BD          	movff	postinc2,??_Port_GetPin
 14992  0145A6  CFDD F0BE          	movff	postdec2,??_Port_GetPin+1
 14993  0145AA  C0BD  FFD9         	movff	??_Port_GetPin,fsr2l
 14994  0145AE  C0BE  FFDA         	movff	??_Port_GetPin+1,fsr2h
 14995  0145B2  50DF               	movf	indf2,w,c
 14996  0145B4  0100               	movlb	0	; () banked
 14997  0145B6  6FBF               	movwf	Port_GetPin@Output& (0+255),b
 14998                           
 14999                           ; BSR set to: 0
 15000                           ;Port.c: 274: Output >>= (UINT8)pPin;
 15001  0145B8  0100               	movlb	0	; () banked
 15002  0145BA  29BC               	incf	Port_GetPin@pPin& (0+255),w,b
 15003  0145BC  0100               	movlb	0	; () banked
 15004  0145BE  6FBD               	movwf	??_Port_GetPin& (0+255),b
 15005  0145C0  D003               	goto	u9550
 15006  0145C2                     u9555:
 15007  0145C2  0100               	movlb	0	; () banked
 15008  0145C4  90D8               	bcf	status,0,c
 15009  0145C6  33BF               	rrcf	Port_GetPin@Output& (0+255),f,b
 15010  0145C8                     u9550:
 15011  0145C8  0100               	movlb	0	; () banked
 15012  0145CA  2FBD               	decfsz	??_Port_GetPin& (0+255),f,b
 15013  0145CC  D7FA               	goto	u9555
 15014                           
 15015                           ;Port.c: 275: Output &= 1;
 15016  0145CE  0E01               	movlw	1
 15017  0145D0  0100               	movlb	0	; () banked
 15018  0145D2  17BF               	andwf	Port_GetPin@Output& (0+255),f,b
 15019                           
 15020                           ; BSR set to: 0
 15021                           ;Port.c: 276: return Output;
 15022  0145D4  0100               	movlb	0	; () banked
 15023  0145D6  51BF               	movf	Port_GetPin@Output& (0+255),w,b
 15024  0145D8  0012               	return	
 15025  0145DA                     __end_of_Port_GetPin:
 15026                           	opt stack 0
 15027                           tosu	equ	0xFFF
 15028                           tosh	equ	0xFFE
 15029                           tosl	equ	0xFFD
 15030                           pclath	equ	0xFFA
 15031                           tblptru	equ	0xFF8
 15032                           tblptrh	equ	0xFF7
 15033                           tblptrl	equ	0xFF6
 15034                           tablat	equ	0xFF5
 15035                           prodh	equ	0xFF4
 15036                           prodl	equ	0xFF3
 15037                           intcon	equ	0xFF2
 15038                           postinc0	equ	0xFEE
 15039                           wreg	equ	0xFE8
 15040                           indf1	equ	0xFE7
 15041                           postdec1	equ	0xFE5
 15042                           fsr1h	equ	0xFE2
 15043                           fsr1l	equ	0xFE1
 15044                           indf2	equ	0xFDF
 15045                           postinc2	equ	0xFDE
 15046                           postdec2	equ	0xFDD
 15047                           plusw2	equ	0xFDB
 15048                           fsr2h	equ	0xFDA
 15049                           fsr2l	equ	0xFD9
 15050                           status	equ	0xFD8
 15051                           
 15052 ;; *************** function _ISR_Enable *****************
 15053 ;; Defined at:
 15054 ;;		line 27 in file "Library/ISR.c"
 15055 ;; Parameters:    Size  Location     Type
 15056 ;;		None
 15057 ;; Auto vars:     Size  Location     Type
 15058 ;;		None
 15059 ;; Return value:  Size  Location     Type
 15060 ;;                  1    wreg      void 
 15061 ;; Registers used:
 15062 ;;		None
 15063 ;; Tracked objects:
 15064 ;;		On entry : 0/0
 15065 ;;		On exit  : 0/0
 15066 ;;		Unchanged: 0/0
 15067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15072 ;;Total ram usage:        0 bytes
 15073 ;; Hardware stack levels used:    1
 15074 ;; Hardware stack levels required when called:    7
 15075 ;; This function calls:
 15076 ;;		Nothing
 15077 ;; This function is called by:
 15078 ;;		_init
 15079 ;; This function uses a non-reentrant model
 15080 ;;
 15081                           
 15082                           	psect	text65
 15083  014BAA                     __ptext65:
 15084                           	opt stack 0
 15085  014BAA                     _ISR_Enable:
 15086                           	opt stack 22
 15087                           
 15088                           ;ISR.c: 29: INTCONbits.PEIE = 1;
 15089                           
 15090                           ; BSR set to: 0
 15091                           ;incstack = 0
 15092  014BAA  8CF2               	bsf	intcon,6,c	;volatile
 15093                           
 15094                           ;ISR.c: 30: INTCONbits.GIE = 1;
 15095  014BAC  8EF2               	bsf	intcon,7,c	;volatile
 15096                           
 15097                           ;ISR.c: 31: INTCONbits.INT0IE = 1;
 15098  014BAE  88F2               	bsf	intcon,4,c	;volatile
 15099                           
 15100                           ;ISR.c: 32: INTCONbits.INT0IF = 0;
 15101  014BB0  92F2               	bcf	intcon,1,c	;volatile
 15102  014BB2  0012               	return		;funcret
 15103  014BB4                     __end_of_ISR_Enable:
 15104                           	opt stack 0
 15105                           tosu	equ	0xFFF
 15106                           tosh	equ	0xFFE
 15107                           tosl	equ	0xFFD
 15108                           pclath	equ	0xFFA
 15109                           tblptru	equ	0xFF8
 15110                           tblptrh	equ	0xFF7
 15111                           tblptrl	equ	0xFF6
 15112                           tablat	equ	0xFF5
 15113                           prodh	equ	0xFF4
 15114                           prodl	equ	0xFF3
 15115                           intcon	equ	0xFF2
 15116                           postinc0	equ	0xFEE
 15117                           wreg	equ	0xFE8
 15118                           indf1	equ	0xFE7
 15119                           postdec1	equ	0xFE5
 15120                           fsr1h	equ	0xFE2
 15121                           fsr1l	equ	0xFE1
 15122                           indf2	equ	0xFDF
 15123                           postinc2	equ	0xFDE
 15124                           postdec2	equ	0xFDD
 15125                           plusw2	equ	0xFDB
 15126                           fsr2h	equ	0xFDA
 15127                           fsr2l	equ	0xFD9
 15128                           status	equ	0xFD8
 15129                           
 15130 ;; *************** function _HMI_Init *****************
 15131 ;; Defined at:
 15132 ;;		line 104 in file "HMI.c"
 15133 ;; Parameters:    Size  Location     Type
 15134 ;;		None
 15135 ;; Auto vars:     Size  Location     Type
 15136 ;;  in              2   59[BANK0 ] unsigned short 
 15137 ;; Return value:  Size  Location     Type
 15138 ;;                  1    wreg      void 
 15139 ;; Registers used:
 15140 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15141 ;; Tracked objects:
 15142 ;;		On entry : 0/0
 15143 ;;		On exit  : 0/0
 15144 ;;		Unchanged: 0/0
 15145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15147 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15149 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15150 ;;Total ram usage:        2 bytes
 15151 ;; Hardware stack levels used:    1
 15152 ;; Hardware stack levels required when called:   16
 15153 ;; This function calls:
 15154 ;;		_Button_Init
 15155 ;;		_SPI_Init
 15156 ;;		_SPI_MinSpeed
 15157 ;; This function is called by:
 15158 ;;		_init
 15159 ;; This function uses a non-reentrant model
 15160 ;;
 15161                           
 15162                           	psect	text66
 15163  011BEA                     __ptext66:
 15164                           	opt stack 0
 15165  011BEA                     _HMI_Init:
 15166                           	opt stack 13
 15167                           
 15168                           ;HMI.c: 107: Button_Init(&(HMIBoard.mDIP), 2,
 15169                           ;HMI.c: 108: HMI_InitButtons, HMI_DIPSwitch, Event_NULL);
 15170                           
 15171                           ;incstack = 0
 15172  011BEA  0E70               	movlw	low (_HMIBoard+48)
 15173  011BEC  0102               	movlb	2	; () banked
 15174  011BEE  6FAA               	movwf	Button_Init@pInput& (0+255),b
 15175  011BF0  0E01               	movlw	high (_HMIBoard+48)
 15176  011BF2  0102               	movlb	2	; () banked
 15177  011BF4  6FAB               	movwf	(Button_Init@pInput+1)& (0+255),b
 15178  011BF6  0E00               	movlw	0
 15179  011BF8  0102               	movlb	2	; () banked
 15180  011BFA  6FAD               	movwf	(Button_Init@pThreshold+1)& (0+255),b
 15181  011BFC  0E02               	movlw	2
 15182  011BFE  6FAC               	movwf	Button_Init@pThreshold& (0+255),b
 15183  011C00  0ED0               	movlw	low _HMI_InitButtons
 15184  011C02  0102               	movlb	2	; () banked
 15185  011C04  6FAE               	movwf	Button_Init@pInitIO& (0+255),b
 15186  011C06  0E4B               	movlw	high _HMI_InitButtons
 15187  011C08  0102               	movlb	2	; () banked
 15188  011C0A  6FAF               	movwf	(Button_Init@pInitIO+1)& (0+255),b
 15189  011C0C  0E01               	movlw	low (_HMI_InitButtons shr (0+16))
 15190  011C0E  0102               	movlb	2	; () banked
 15191  011C10  6FB0               	movwf	(Button_Init@pInitIO+2)& (0+255),b
 15192  011C12  0E00               	movlw	0
 15193  011C14  0102               	movlb	2	; () banked
 15194  011C16  6FB1               	movwf	Button_Init@pGetState& (0+255),b
 15195  011C18  0E00               	movlw	0
 15196  011C1A  0102               	movlb	2	; () banked
 15197  011C1C  6FB2               	movwf	(Button_Init@pGetState+1)& (0+255),b
 15198  011C1E  0E00               	movlw	0
 15199  011C20  0102               	movlb	2	; () banked
 15200  011C22  6FB3               	movwf	(Button_Init@pGetState+2)& (0+255),b
 15201  011C24  0E00               	movlw	0
 15202  011C26  0102               	movlb	2	; () banked
 15203  011C28  6FB4               	movwf	Button_Init@pFunction& (0+255),b
 15204  011C2A  0E00               	movlw	0
 15205  011C2C  0102               	movlb	2	; () banked
 15206  011C2E  6FB5               	movwf	(Button_Init@pFunction+1)& (0+255),b
 15207  011C30  0E00               	movlw	0
 15208  011C32  0102               	movlb	2	; () banked
 15209  011C34  6FB6               	movwf	(Button_Init@pFunction+2)& (0+255),b
 15210  011C36  EC28  F098         	call	_Button_Init	;wreg free
 15211                           
 15212                           ;HMI.c: 110: Button_Init(&(HMIBoard.mLeft), 2,
 15213                           ;HMI.c: 111: HMI_InitButtons, HMI_LeftSwitch, Event_NULL);
 15214  011C3A  0E52               	movlw	low (_HMIBoard+18)
 15215  011C3C  0102               	movlb	2	; () banked
 15216  011C3E  6FAA               	movwf	Button_Init@pInput& (0+255),b
 15217  011C40  0E01               	movlw	high (_HMIBoard+18)
 15218  011C42  0102               	movlb	2	; () banked
 15219  011C44  6FAB               	movwf	(Button_Init@pInput+1)& (0+255),b
 15220  011C46  0E00               	movlw	0
 15221  011C48  0102               	movlb	2	; () banked
 15222  011C4A  6FAD               	movwf	(Button_Init@pThreshold+1)& (0+255),b
 15223  011C4C  0E02               	movlw	2
 15224  011C4E  6FAC               	movwf	Button_Init@pThreshold& (0+255),b
 15225  011C50  0ED0               	movlw	low _HMI_InitButtons
 15226  011C52  0102               	movlb	2	; () banked
 15227  011C54  6FAE               	movwf	Button_Init@pInitIO& (0+255),b
 15228  011C56  0E4B               	movlw	high _HMI_InitButtons
 15229  011C58  0102               	movlb	2	; () banked
 15230  011C5A  6FAF               	movwf	(Button_Init@pInitIO+1)& (0+255),b
 15231  011C5C  0E01               	movlw	low (_HMI_InitButtons shr (0+16))
 15232  011C5E  0102               	movlb	2	; () banked
 15233  011C60  6FB0               	movwf	(Button_Init@pInitIO+2)& (0+255),b
 15234  011C62  0E00               	movlw	0
 15235  011C64  0102               	movlb	2	; () banked
 15236  011C66  6FB1               	movwf	Button_Init@pGetState& (0+255),b
 15237  011C68  0E00               	movlw	0
 15238  011C6A  0102               	movlb	2	; () banked
 15239  011C6C  6FB2               	movwf	(Button_Init@pGetState+1)& (0+255),b
 15240  011C6E  0E00               	movlw	0
 15241  011C70  0102               	movlb	2	; () banked
 15242  011C72  6FB3               	movwf	(Button_Init@pGetState+2)& (0+255),b
 15243  011C74  0E00               	movlw	0
 15244  011C76  0102               	movlb	2	; () banked
 15245  011C78  6FB4               	movwf	Button_Init@pFunction& (0+255),b
 15246  011C7A  0E00               	movlw	0
 15247  011C7C  0102               	movlb	2	; () banked
 15248  011C7E  6FB5               	movwf	(Button_Init@pFunction+1)& (0+255),b
 15249  011C80  0E00               	movlw	0
 15250  011C82  0102               	movlb	2	; () banked
 15251  011C84  6FB6               	movwf	(Button_Init@pFunction+2)& (0+255),b
 15252  011C86  EC28  F098         	call	_Button_Init	;wreg free
 15253                           
 15254                           ;HMI.c: 113: Button_Init(&(HMIBoard.mRight), 2,
 15255                           ;HMI.c: 114: HMI_InitButtons, HMI_RightSwitch, Event_NULL);
 15256  011C8A  0E48               	movlw	low (_HMIBoard+8)
 15257  011C8C  0102               	movlb	2	; () banked
 15258  011C8E  6FAA               	movwf	Button_Init@pInput& (0+255),b
 15259  011C90  0E01               	movlw	high (_HMIBoard+8)
 15260  011C92  0102               	movlb	2	; () banked
 15261  011C94  6FAB               	movwf	(Button_Init@pInput+1)& (0+255),b
 15262  011C96  0E00               	movlw	0
 15263  011C98  0102               	movlb	2	; () banked
 15264  011C9A  6FAD               	movwf	(Button_Init@pThreshold+1)& (0+255),b
 15265  011C9C  0E02               	movlw	2
 15266  011C9E  6FAC               	movwf	Button_Init@pThreshold& (0+255),b
 15267  011CA0  0ED0               	movlw	low _HMI_InitButtons
 15268  011CA2  0102               	movlb	2	; () banked
 15269  011CA4  6FAE               	movwf	Button_Init@pInitIO& (0+255),b
 15270  011CA6  0E4B               	movlw	high _HMI_InitButtons
 15271  011CA8  0102               	movlb	2	; () banked
 15272  011CAA  6FAF               	movwf	(Button_Init@pInitIO+1)& (0+255),b
 15273  011CAC  0E01               	movlw	low (_HMI_InitButtons shr (0+16))
 15274  011CAE  0102               	movlb	2	; () banked
 15275  011CB0  6FB0               	movwf	(Button_Init@pInitIO+2)& (0+255),b
 15276  011CB2  0E00               	movlw	0
 15277  011CB4  0102               	movlb	2	; () banked
 15278  011CB6  6FB1               	movwf	Button_Init@pGetState& (0+255),b
 15279  011CB8  0E00               	movlw	0
 15280  011CBA  0102               	movlb	2	; () banked
 15281  011CBC  6FB2               	movwf	(Button_Init@pGetState+1)& (0+255),b
 15282  011CBE  0E00               	movlw	0
 15283  011CC0  0102               	movlb	2	; () banked
 15284  011CC2  6FB3               	movwf	(Button_Init@pGetState+2)& (0+255),b
 15285  011CC4  0E00               	movlw	0
 15286  011CC6  0102               	movlb	2	; () banked
 15287  011CC8  6FB4               	movwf	Button_Init@pFunction& (0+255),b
 15288  011CCA  0E00               	movlw	0
 15289  011CCC  0102               	movlb	2	; () banked
 15290  011CCE  6FB5               	movwf	(Button_Init@pFunction+1)& (0+255),b
 15291  011CD0  0E00               	movlw	0
 15292  011CD2  0102               	movlb	2	; () banked
 15293  011CD4  6FB6               	movwf	(Button_Init@pFunction+2)& (0+255),b
 15294  011CD6  EC28  F098         	call	_Button_Init	;wreg free
 15295                           
 15296                           ;HMI.c: 116: Button_Init(&(HMIBoard.mUp), 2,
 15297                           ;HMI.c: 117: HMI_InitButtons, HMI_UpSwitch, Event_NULL);
 15298  011CDA  0E5C               	movlw	low (_HMIBoard+28)
 15299  011CDC  0102               	movlb	2	; () banked
 15300  011CDE  6FAA               	movwf	Button_Init@pInput& (0+255),b
 15301  011CE0  0E01               	movlw	high (_HMIBoard+28)
 15302  011CE2  0102               	movlb	2	; () banked
 15303  011CE4  6FAB               	movwf	(Button_Init@pInput+1)& (0+255),b
 15304  011CE6  0E00               	movlw	0
 15305  011CE8  0102               	movlb	2	; () banked
 15306  011CEA  6FAD               	movwf	(Button_Init@pThreshold+1)& (0+255),b
 15307  011CEC  0E02               	movlw	2
 15308  011CEE  6FAC               	movwf	Button_Init@pThreshold& (0+255),b
 15309  011CF0  0ED0               	movlw	low _HMI_InitButtons
 15310  011CF2  0102               	movlb	2	; () banked
 15311  011CF4  6FAE               	movwf	Button_Init@pInitIO& (0+255),b
 15312  011CF6  0E4B               	movlw	high _HMI_InitButtons
 15313  011CF8  0102               	movlb	2	; () banked
 15314  011CFA  6FAF               	movwf	(Button_Init@pInitIO+1)& (0+255),b
 15315  011CFC  0E01               	movlw	low (_HMI_InitButtons shr (0+16))
 15316  011CFE  0102               	movlb	2	; () banked
 15317  011D00  6FB0               	movwf	(Button_Init@pInitIO+2)& (0+255),b
 15318  011D02  0E00               	movlw	0
 15319  011D04  0102               	movlb	2	; () banked
 15320  011D06  6FB1               	movwf	Button_Init@pGetState& (0+255),b
 15321  011D08  0E00               	movlw	0
 15322  011D0A  0102               	movlb	2	; () banked
 15323  011D0C  6FB2               	movwf	(Button_Init@pGetState+1)& (0+255),b
 15324  011D0E  0E00               	movlw	0
 15325  011D10  0102               	movlb	2	; () banked
 15326  011D12  6FB3               	movwf	(Button_Init@pGetState+2)& (0+255),b
 15327  011D14  0E00               	movlw	0
 15328  011D16  0102               	movlb	2	; () banked
 15329  011D18  6FB4               	movwf	Button_Init@pFunction& (0+255),b
 15330  011D1A  0E00               	movlw	0
 15331  011D1C  0102               	movlb	2	; () banked
 15332  011D1E  6FB5               	movwf	(Button_Init@pFunction+1)& (0+255),b
 15333  011D20  0E00               	movlw	0
 15334  011D22  0102               	movlb	2	; () banked
 15335  011D24  6FB6               	movwf	(Button_Init@pFunction+2)& (0+255),b
 15336  011D26  EC28  F098         	call	_Button_Init	;wreg free
 15337                           
 15338                           ;HMI.c: 119: Button_Init(&(HMIBoard.mDown), 2,
 15339                           ;HMI.c: 120: HMI_InitButtons, HMI_DownSwitch, Event_NULL);
 15340  011D2A  0E66               	movlw	low (_HMIBoard+38)
 15341  011D2C  0102               	movlb	2	; () banked
 15342  011D2E  6FAA               	movwf	Button_Init@pInput& (0+255),b
 15343  011D30  0E01               	movlw	high (_HMIBoard+38)
 15344  011D32  0102               	movlb	2	; () banked
 15345  011D34  6FAB               	movwf	(Button_Init@pInput+1)& (0+255),b
 15346  011D36  0E00               	movlw	0
 15347  011D38  0102               	movlb	2	; () banked
 15348  011D3A  6FAD               	movwf	(Button_Init@pThreshold+1)& (0+255),b
 15349  011D3C  0E02               	movlw	2
 15350  011D3E  6FAC               	movwf	Button_Init@pThreshold& (0+255),b
 15351  011D40  0ED0               	movlw	low _HMI_InitButtons
 15352  011D42  0102               	movlb	2	; () banked
 15353  011D44  6FAE               	movwf	Button_Init@pInitIO& (0+255),b
 15354  011D46  0E4B               	movlw	high _HMI_InitButtons
 15355  011D48  0102               	movlb	2	; () banked
 15356  011D4A  6FAF               	movwf	(Button_Init@pInitIO+1)& (0+255),b
 15357  011D4C  0E01               	movlw	low (_HMI_InitButtons shr (0+16))
 15358  011D4E  0102               	movlb	2	; () banked
 15359  011D50  6FB0               	movwf	(Button_Init@pInitIO+2)& (0+255),b
 15360  011D52  0E00               	movlw	0
 15361  011D54  0102               	movlb	2	; () banked
 15362  011D56  6FB1               	movwf	Button_Init@pGetState& (0+255),b
 15363  011D58  0E00               	movlw	0
 15364  011D5A  0102               	movlb	2	; () banked
 15365  011D5C  6FB2               	movwf	(Button_Init@pGetState+1)& (0+255),b
 15366  011D5E  0E00               	movlw	0
 15367  011D60  0102               	movlb	2	; () banked
 15368  011D62  6FB3               	movwf	(Button_Init@pGetState+2)& (0+255),b
 15369  011D64  0E00               	movlw	0
 15370  011D66  0102               	movlb	2	; () banked
 15371  011D68  6FB4               	movwf	Button_Init@pFunction& (0+255),b
 15372  011D6A  0E00               	movlw	0
 15373  011D6C  0102               	movlb	2	; () banked
 15374  011D6E  6FB5               	movwf	(Button_Init@pFunction+1)& (0+255),b
 15375  011D70  0E00               	movlw	0
 15376  011D72  0102               	movlb	2	; () banked
 15377  011D74  6FB6               	movwf	(Button_Init@pFunction+2)& (0+255),b
 15378  011D76  EC28  F098         	call	_Button_Init	;wreg free
 15379                           
 15380                           ;HMI.c: 124: SPI_Init((100*1000L), eSPI1, eSPI_Mode2);
 15381  011D7A  0EA0               	movlw	160
 15382  011D7C  0100               	movlb	0	; () banked
 15383  011D7E  6FE7               	movwf	SPI_Init@pClock& (0+255),b
 15384  011D80  0E86               	movlw	134
 15385  011D82  6FE8               	movwf	(SPI_Init@pClock+1)& (0+255),b
 15386  011D84  0E01               	movlw	1
 15387  011D86  6FE9               	movwf	(SPI_Init@pClock+2)& (0+255),b
 15388  011D88  0E00               	movlw	0
 15389  011D8A  6FEA               	movwf	(SPI_Init@pClock+3)& (0+255),b
 15390  011D8C  0E00               	movlw	0
 15391  011D8E  0100               	movlb	0	; () banked
 15392  011D90  6FEB               	movwf	SPI_Init@pChannel& (0+255),b
 15393  011D92  0E02               	movlw	2
 15394  011D94  0100               	movlb	0	; () banked
 15395  011D96  6FEC               	movwf	SPI_Init@pMode& (0+255),b
 15396  011D98  ECA7  F084         	call	_SPI_Init	;wreg free
 15397                           
 15398                           ;HMI.c: 125: SPI_MinSpeed(&SPI1);
 15399  011D9C  0E7A               	movlw	low _SPI1
 15400  011D9E  0100               	movlb	0	; () banked
 15401  011DA0  6FC9               	movwf	SPI_MinSpeed@pInput& (0+255),b
 15402  011DA2  0E01               	movlw	high _SPI1
 15403  011DA4  0100               	movlb	0	; () banked
 15404  011DA6  6FCA               	movwf	(SPI_MinSpeed@pInput+1)& (0+255),b
 15405  011DA8  EC8A  F09F         	call	_SPI_MinSpeed	;wreg free
 15406                           
 15407                           ;HMI.c: 127: for (UINT16 in = 0; in<sizeof(HMIBoard.Bytes); in++)
 15408  011DAC  0E00               	movlw	0
 15409  011DAE  0100               	movlb	0	; () banked
 15410  011DB0  6FF6               	movwf	(HMI_Init@in+1)& (0+255),b
 15411  011DB2  0E00               	movlw	0
 15412  011DB4  6FF5               	movwf	HMI_Init@in& (0+255),b
 15413  011DB6                     l14470:
 15414                           
 15415                           ; BSR set to: 0
 15416  011DB6  0100               	movlb	0	; () banked
 15417  011DB8  51F6               	movf	(HMI_Init@in+1)& (0+255),w,b
 15418  011DBA  E113               	bnz	l1153
 15419  011DBC  0E08               	movlw	8
 15420  011DBE  0100               	movlb	0	; () banked
 15421  011DC0  5DF5               	subwf	HMI_Init@in& (0+255),w,b
 15422  011DC2  B0D8               	btfsc	status,0,c
 15423  011DC4  0012               	return	
 15424                           
 15425                           ; BSR set to: 0
 15426                           ;HMI.c: 128: HMIBoard.Bytes[in] = 0;
 15427                           
 15428                           ; BSR set to: 0
 15429                           
 15430                           ; BSR set to: 0
 15431  011DC6  0E40               	movlw	low _HMIBoard
 15432  011DC8  0100               	movlb	0	; () banked
 15433  011DCA  25F5               	addwf	HMI_Init@in& (0+255),w,b
 15434  011DCC  6ED9               	movwf	fsr2l,c
 15435  011DCE  0E01               	movlw	high _HMIBoard
 15436  011DD0  0100               	movlb	0	; () banked
 15437  011DD2  21F6               	addwfc	(HMI_Init@in+1)& (0+255),w,b
 15438  011DD4  6EDA               	movwf	fsr2h,c
 15439  011DD6  0E00               	movlw	0
 15440  011DD8  6EDF               	movwf	indf2,c
 15441                           
 15442                           ; BSR set to: 0
 15443  011DDA  0100               	movlb	0	; () banked
 15444  011DDC  4BF5               	infsnz	HMI_Init@in& (0+255),f,b
 15445  011DDE  2BF6               	incf	(HMI_Init@in+1)& (0+255),f,b
 15446  011DE0  D7EA               	goto	l14470
 15447  011DE2                     l1153:
 15448                           
 15449                           ; BSR set to: 0
 15450  011DE2  0012               	return		;funcret
 15451  011DE4                     __end_of_HMI_Init:
 15452                           	opt stack 0
 15453                           tosu	equ	0xFFF
 15454                           tosh	equ	0xFFE
 15455                           tosl	equ	0xFFD
 15456                           pclath	equ	0xFFA
 15457                           tblptru	equ	0xFF8
 15458                           tblptrh	equ	0xFF7
 15459                           tblptrl	equ	0xFF6
 15460                           tablat	equ	0xFF5
 15461                           prodh	equ	0xFF4
 15462                           prodl	equ	0xFF3
 15463                           intcon	equ	0xFF2
 15464                           postinc0	equ	0xFEE
 15465                           wreg	equ	0xFE8
 15466                           indf1	equ	0xFE7
 15467                           postdec1	equ	0xFE5
 15468                           fsr1h	equ	0xFE2
 15469                           fsr1l	equ	0xFE1
 15470                           indf2	equ	0xFDF
 15471                           postinc2	equ	0xFDE
 15472                           postdec2	equ	0xFDD
 15473                           plusw2	equ	0xFDB
 15474                           fsr2h	equ	0xFDA
 15475                           fsr2l	equ	0xFD9
 15476                           status	equ	0xFD8
 15477                           
 15478 ;; *************** function _SPI_MinSpeed *****************
 15479 ;; Defined at:
 15480 ;;		line 190 in file "Library/SPI.c"
 15481 ;; Parameters:    Size  Location     Type
 15482 ;;  pInput          2   15[BANK0 ] PTR struct SPI
 15483 ;;		 -> SPI1(11), 
 15484 ;; Auto vars:     Size  Location     Type
 15485 ;;		None
 15486 ;; Return value:  Size  Location     Type
 15487 ;;                  1    wreg      void 
 15488 ;; Registers used:
 15489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15490 ;; Tracked objects:
 15491 ;;		On entry : 0/0
 15492 ;;		On exit  : 0/0
 15493 ;;		Unchanged: 0/0
 15494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15495 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15498 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15499 ;;Total ram usage:        2 bytes
 15500 ;; Hardware stack levels used:    1
 15501 ;; Hardware stack levels required when called:    9
 15502 ;; This function calls:
 15503 ;;		_Byte_SetBit
 15504 ;;		_Byte_SetQuad
 15505 ;; This function is called by:
 15506 ;;		_HMI_Init
 15507 ;; This function uses a non-reentrant model
 15508 ;;
 15509                           
 15510                           	psect	text67
 15511  013F14                     __ptext67:
 15512                           	opt stack 0
 15513  013F14                     _SPI_MinSpeed:
 15514                           	opt stack 19
 15515                           
 15516                           ;SPI.c: 194: Byte_SetBit(pInput->SSPCON1T, (UINT8)5, (UINT8)0);
 15517                           
 15518                           ; BSR set to: 0
 15519                           ;incstack = 0
 15520  013F14  0100               	movlb	0	; () banked
 15521  013F16  EE20 F006          	lfsr	2,6
 15522  013F1A  51C9               	movf	SPI_MinSpeed@pInput& (0+255),w,b
 15523  013F1C  26D9               	addwf	fsr2l,f,c
 15524  013F1E  51CA               	movf	(SPI_MinSpeed@pInput+1)& (0+255),w,b
 15525  013F20  22DA               	addwfc	fsr2h,f,c
 15526  013F22  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 15527  013F26  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 15528  013F2A  0E05               	movlw	5
 15529  013F2C  0100               	movlb	0	; () banked
 15530  013F2E  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 15531  013F30  0E00               	movlw	0
 15532  013F32  0100               	movlb	0	; () banked
 15533  013F34  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 15534  013F36  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 15535                           
 15536                           ;SPI.c: 197: Byte_SetQuad(pInput->SSPCON1T, (UINT8)0, (UINT8)2);
 15537  013F3A  0100               	movlb	0	; () banked
 15538  013F3C  EE20 F006          	lfsr	2,6
 15539  013F40  51C9               	movf	SPI_MinSpeed@pInput& (0+255),w,b
 15540  013F42  26D9               	addwf	fsr2l,f,c
 15541  013F44  51CA               	movf	(SPI_MinSpeed@pInput+1)& (0+255),w,b
 15542  013F46  22DA               	addwfc	fsr2h,f,c
 15543  013F48  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 15544  013F4C  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 15545  013F50  0E00               	movlw	0
 15546  013F52  0100               	movlb	0	; () banked
 15547  013F54  6FC7               	movwf	Byte_SetQuad@pQuad& (0+255),b
 15548  013F56  0E02               	movlw	2
 15549  013F58  0100               	movlb	0	; () banked
 15550  013F5A  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 15551  013F5C  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 15552                           
 15553                           ;SPI.c: 198: Byte_SetBit(pInput->SSPCON1T, (UINT8)5, (UINT8)1);
 15554  013F60  0100               	movlb	0	; () banked
 15555  013F62  EE20 F006          	lfsr	2,6
 15556  013F66  51C9               	movf	SPI_MinSpeed@pInput& (0+255),w,b
 15557  013F68  26D9               	addwf	fsr2l,f,c
 15558  013F6A  51CA               	movf	(SPI_MinSpeed@pInput+1)& (0+255),w,b
 15559  013F6C  22DA               	addwfc	fsr2h,f,c
 15560  013F6E  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 15561  013F72  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 15562  013F76  0E05               	movlw	5
 15563  013F78  0100               	movlb	0	; () banked
 15564  013F7A  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 15565  013F7C  0E01               	movlw	1
 15566  013F7E  0100               	movlb	0	; () banked
 15567  013F80  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 15568  013F82  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 15569  013F86  0012               	return		;funcret
 15570  013F88                     __end_of_SPI_MinSpeed:
 15571                           	opt stack 0
 15572                           tosu	equ	0xFFF
 15573                           tosh	equ	0xFFE
 15574                           tosl	equ	0xFFD
 15575                           pclath	equ	0xFFA
 15576                           tblptru	equ	0xFF8
 15577                           tblptrh	equ	0xFF7
 15578                           tblptrl	equ	0xFF6
 15579                           tablat	equ	0xFF5
 15580                           prodh	equ	0xFF4
 15581                           prodl	equ	0xFF3
 15582                           intcon	equ	0xFF2
 15583                           postinc0	equ	0xFEE
 15584                           wreg	equ	0xFE8
 15585                           indf1	equ	0xFE7
 15586                           postdec1	equ	0xFE5
 15587                           fsr1h	equ	0xFE2
 15588                           fsr1l	equ	0xFE1
 15589                           indf2	equ	0xFDF
 15590                           postinc2	equ	0xFDE
 15591                           postdec2	equ	0xFDD
 15592                           plusw2	equ	0xFDB
 15593                           fsr2h	equ	0xFDA
 15594                           fsr2l	equ	0xFD9
 15595                           status	equ	0xFD8
 15596                           
 15597 ;; *************** function _SPI_Init *****************
 15598 ;; Defined at:
 15599 ;;		line 12 in file "Library/SPI.c"
 15600 ;; Parameters:    Size  Location     Type
 15601 ;;  pClock          4   45[BANK0 ] unsigned long 
 15602 ;;  pChannel        1   49[BANK0 ] enum E6744
 15603 ;;  pMode           1   50[BANK0 ] enum E6748
 15604 ;; Auto vars:     Size  Location     Type
 15605 ;;  pInput          2   51[BANK0 ] PTR struct SPI
 15606 ;;		 -> SPI1(11), SPI2(11), 
 15607 ;; Return value:  Size  Location     Type
 15608 ;;                  1    wreg      void 
 15609 ;; Registers used:
 15610 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15611 ;; Tracked objects:
 15612 ;;		On entry : 0/0
 15613 ;;		On exit  : 0/0
 15614 ;;		Unchanged: 0/0
 15615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15616 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15617 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15619 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15620 ;;Total ram usage:        8 bytes
 15621 ;; Hardware stack levels used:    1
 15622 ;; Hardware stack levels required when called:   12
 15623 ;; This function calls:
 15624 ;;		_Byte_SetBit
 15625 ;;		_Byte_SetQuad
 15626 ;;		_Port_SetPinType
 15627 ;;		_SPI_DCS
 15628 ;;		_SPI_DisableISR
 15629 ;;		_Timer2_Init
 15630 ;; This function is called by:
 15631 ;;		_Configure_GPIOs
 15632 ;;		_HMI_Init
 15633 ;; This function uses a non-reentrant model
 15634 ;;
 15635                           
 15636                           	psect	text68
 15637  01094E                     __ptext68:
 15638                           	opt stack 0
 15639  01094E                     _SPI_Init:
 15640                           	opt stack 15
 15641                           
 15642                           ;SPI.c: 14: SPIPtr pInput;
 15643                           ;SPI.c: 16: switch (pChannel)
 15644                           
 15645                           ;incstack = 0
 15646  01094E  D00C               	goto	l597
 15647  010950                     
 15648                           ;SPI.c: 19: pInput = &SPI1;
 15649  010950  0E7A               	movlw	low _SPI1
 15650  010952  0100               	movlb	0	; () banked
 15651  010954  6FED               	movwf	SPI_Init@pInput& (0+255),b
 15652  010956  0E01               	movlw	high _SPI1
 15653  010958  D004               	goto	L12
 15654  01095A                     
 15655                           ; BSR set to: 0
 15656                           ;SPI.c: 22: pInput = &SPI2;
 15657                           
 15658                           ; BSR set to: 0
 15659  01095A  0E85               	movlw	low _SPI2
 15660  01095C  0100               	movlb	0	; () banked
 15661  01095E  6FED               	movwf	SPI_Init@pInput& (0+255),b
 15662  010960  0E01               	movlw	high _SPI2
 15663  010962                     L12:
 15664  010962  0100               	movlb	0	; () banked
 15665  010964  6FEE               	movwf	(SPI_Init@pInput+1)& (0+255),b
 15666                           
 15667                           ; BSR set to: 0
 15668                           ;SPI.c: 24: };
 15669                           
 15670                           ;SPI.c: 23: break;
 15671  010966  D008               	goto	l599
 15672  010968                     l597:
 15673                           
 15674                           ; BSR set to: 0
 15675  010968  0100               	movlb	0	; () banked
 15676  01096A  51EB               	movf	SPI_Init@pChannel& (0+255),w,b
 15677                           
 15678                           ; Switch size 1, requested type "space"
 15679                           ; Number of cases is 2, Range of values is 0 to 1
 15680                           ; switch strategies available:
 15681                           ; Name         Instructions Cycles
 15682                           ; simple_byte            7     4 (average)
 15683                           ;	Chosen strategy is simple_byte
 15684  01096C  0A00               	xorlw	0	; case 0
 15685  01096E  B4D8               	btfsc	status,2,c
 15686  010970  D7EF               	goto	l598
 15687  010972  0A01               	xorlw	1	; case 1
 15688  010974  B4D8               	btfsc	status,2,c
 15689  010976  D7F1               	goto	l600
 15690  010978                     l599:
 15691                           
 15692                           ; BSR set to: 0
 15693                           ;SPI.c: 26: pInput->mChannel = pChannel;
 15694                           
 15695                           ; BSR set to: 0
 15696  010978  0100               	movlb	0	; () banked
 15697  01097A  EE20 F002          	lfsr	2,2
 15698  01097E  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15699  010980  26D9               	addwf	fsr2l,f,c
 15700  010982  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15701  010984  22DA               	addwfc	fsr2h,f,c
 15702  010986  C0EB  FFDF         	movff	SPI_Init@pChannel,indf2
 15703                           
 15704                           ;SPI.c: 35: switch (pChannel)
 15705  01098A  D0B1               	goto	l601
 15706  01098C                     
 15707                           ; BSR set to: 0
 15708                           ;SPI.c: 39: Port_SetPinType(&PortC, (ePin)2, eTypeOutputPushPull);
 15709                           
 15710                           ; BSR set to: 0
 15711  01098C  0EA4               	movlw	low _PortC
 15712  01098E  0100               	movlb	0	; () banked
 15713  010990  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 15714  010992  0E00               	movlw	high _PortC
 15715  010994  0100               	movlb	0	; () banked
 15716  010996  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 15717  010998  0E02               	movlw	2
 15718  01099A  0100               	movlb	0	; () banked
 15719  01099C  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 15720  01099E  0E03               	movlw	3
 15721  0109A0  0100               	movlb	0	; () banked
 15722  0109A2  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 15723  0109A4  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 15724                           
 15725                           ;SPI.c: 40: Port_SetPinType(&PortC, (ePin)3, eTypeOutputPushPull);
 15726  0109A8  0EA4               	movlw	low _PortC
 15727  0109AA  0100               	movlb	0	; () banked
 15728  0109AC  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 15729  0109AE  0E00               	movlw	high _PortC
 15730  0109B0  0100               	movlb	0	; () banked
 15731  0109B2  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 15732  0109B4  0E03               	movlw	3
 15733  0109B6  0100               	movlb	0	; () banked
 15734  0109B8  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 15735  0109BA  0E03               	movlw	3
 15736  0109BC  0100               	movlb	0	; () banked
 15737  0109BE  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 15738  0109C0  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 15739                           
 15740                           ;SPI.c: 41: Port_SetPinType(&PortC, (ePin)5, eTypeOutputPushPull);
 15741  0109C4  0EA4               	movlw	low _PortC
 15742  0109C6  0100               	movlb	0	; () banked
 15743  0109C8  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 15744  0109CA  0E00               	movlw	high _PortC
 15745  0109CC  0100               	movlb	0	; () banked
 15746  0109CE  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 15747  0109D0  0E05               	movlw	5
 15748  0109D2  0100               	movlb	0	; () banked
 15749  0109D4  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 15750  0109D6  0E03               	movlw	3
 15751  0109D8  0100               	movlb	0	; () banked
 15752  0109DA  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 15753  0109DC  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 15754                           
 15755                           ;SPI.c: 42: Port_SetPinType(&PortC, (ePin)4, eTypeInput);
 15756  0109E0  0EA4               	movlw	low _PortC
 15757  0109E2  0100               	movlb	0	; () banked
 15758  0109E4  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 15759  0109E6  0E00               	movlw	high _PortC
 15760  0109E8  0100               	movlb	0	; () banked
 15761  0109EA  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 15762  0109EC  0E04               	movlw	4
 15763  0109EE  0100               	movlb	0	; () banked
 15764  0109F0  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 15765  0109F2  0E00               	movlw	0
 15766  0109F4  0100               	movlb	0	; () banked
 15767  0109F6  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 15768  0109F8  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 15769                           
 15770                           ;SPI.c: 44: pInput->SSPSTATT = (BytePtr)&SSP1STAT;
 15771  0109FC  0100               	movlb	0	; () banked
 15772  0109FE  EE20 F003          	lfsr	2,3
 15773  010A02  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15774  010A04  26D9               	addwf	fsr2l,f,c
 15775  010A06  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15776  010A08  22DA               	addwfc	fsr2h,f,c
 15777  010A0A  0EC7               	movlw	199
 15778  010A0C  6EDE               	movwf	postinc2,c
 15779  010A0E  0E0F               	movlw	15
 15780  010A10  6EDD               	movwf	postdec2,c
 15781                           
 15782                           ; BSR set to: 0
 15783                           ;SPI.c: 45: pInput->SSPCON1T = (BytePtr)&SSP1CON1;
 15784  010A12  0100               	movlb	0	; () banked
 15785  010A14  EE20 F006          	lfsr	2,6
 15786  010A18  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15787  010A1A  26D9               	addwf	fsr2l,f,c
 15788  010A1C  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15789  010A1E  22DA               	addwfc	fsr2h,f,c
 15790  010A20  0EC6               	movlw	198
 15791  010A22  6EDE               	movwf	postinc2,c
 15792  010A24  0E0F               	movlw	15
 15793  010A26  6EDD               	movwf	postdec2,c
 15794                           
 15795                           ; BSR set to: 0
 15796                           ;SPI.c: 46: pInput->SSPBUF = (UINT8Ptr)&SSP1BUF;
 15797  010A28  0100               	movlb	0	; () banked
 15798  010A2A  EE20 F009          	lfsr	2,9
 15799  010A2E  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15800  010A30  26D9               	addwf	fsr2l,f,c
 15801  010A32  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15802  010A34  22DA               	addwfc	fsr2h,f,c
 15803  010A36  0EC9               	movlw	201
 15804  010A38  D056               	goto	L13
 15805  010A3A                     
 15806                           ; BSR set to: 0
 15807                           ;SPI.c: 55: Port_SetPinType(&PortD, (ePin)7, eTypeOutputPushPull);
 15808                           
 15809                           ; BSR set to: 0
 15810  010A3A  0E9A               	movlw	low _PortD
 15811  010A3C  0100               	movlb	0	; () banked
 15812  010A3E  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 15813  010A40  0E00               	movlw	high _PortD
 15814  010A42  0100               	movlb	0	; () banked
 15815  010A44  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 15816  010A46  0E07               	movlw	7
 15817  010A48  0100               	movlb	0	; () banked
 15818  010A4A  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 15819  010A4C  0E03               	movlw	3
 15820  010A4E  0100               	movlb	0	; () banked
 15821  010A50  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 15822  010A52  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 15823                           
 15824                           ;SPI.c: 56: Port_SetPinType(&PortD, (ePin)6, eTypeOutputPushPull);
 15825  010A56  0E9A               	movlw	low _PortD
 15826  010A58  0100               	movlb	0	; () banked
 15827  010A5A  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 15828  010A5C  0E00               	movlw	high _PortD
 15829  010A5E  0100               	movlb	0	; () banked
 15830  010A60  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 15831  010A62  0E06               	movlw	6
 15832  010A64  0100               	movlb	0	; () banked
 15833  010A66  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 15834  010A68  0E03               	movlw	3
 15835  010A6A  0100               	movlb	0	; () banked
 15836  010A6C  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 15837  010A6E  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 15838                           
 15839                           ;SPI.c: 57: Port_SetPinType(&PortD, (ePin)4, eTypeOutputPushPull);
 15840  010A72  0E9A               	movlw	low _PortD
 15841  010A74  0100               	movlb	0	; () banked
 15842  010A76  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 15843  010A78  0E00               	movlw	high _PortD
 15844  010A7A  0100               	movlb	0	; () banked
 15845  010A7C  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 15846  010A7E  0E04               	movlw	4
 15847  010A80  0100               	movlb	0	; () banked
 15848  010A82  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 15849  010A84  0E03               	movlw	3
 15850  010A86  0100               	movlb	0	; () banked
 15851  010A88  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 15852  010A8A  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 15853                           
 15854                           ;SPI.c: 58: Port_SetPinType(&PortD, (ePin)5, eTypeInput);
 15855  010A8E  0E9A               	movlw	low _PortD
 15856  010A90  0100               	movlb	0	; () banked
 15857  010A92  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 15858  010A94  0E00               	movlw	high _PortD
 15859  010A96  0100               	movlb	0	; () banked
 15860  010A98  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 15861  010A9A  0E05               	movlw	5
 15862  010A9C  0100               	movlb	0	; () banked
 15863  010A9E  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 15864  010AA0  0E00               	movlw	0
 15865  010AA2  0100               	movlb	0	; () banked
 15866  010AA4  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 15867  010AA6  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 15868                           
 15869                           ;SPI.c: 60: pInput->SSPSTATT = (BytePtr)&SSP2STAT;
 15870  010AAA  0100               	movlb	0	; () banked
 15871  010AAC  EE20 F003          	lfsr	2,3
 15872  010AB0  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15873  010AB2  26D9               	addwf	fsr2l,f,c
 15874  010AB4  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15875  010AB6  22DA               	addwfc	fsr2h,f,c
 15876  010AB8  0E6D               	movlw	109
 15877  010ABA  6EDE               	movwf	postinc2,c
 15878  010ABC  0E0F               	movlw	15
 15879  010ABE  6EDD               	movwf	postdec2,c
 15880                           
 15881                           ; BSR set to: 0
 15882                           ;SPI.c: 61: pInput->SSPCON1T = (BytePtr)&SSP2CON1;
 15883  010AC0  0100               	movlb	0	; () banked
 15884  010AC2  EE20 F006          	lfsr	2,6
 15885  010AC6  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15886  010AC8  26D9               	addwf	fsr2l,f,c
 15887  010ACA  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15888  010ACC  22DA               	addwfc	fsr2h,f,c
 15889  010ACE  0E6C               	movlw	108
 15890  010AD0  6EDE               	movwf	postinc2,c
 15891  010AD2  0E0F               	movlw	15
 15892  010AD4  6EDD               	movwf	postdec2,c
 15893                           
 15894                           ; BSR set to: 0
 15895                           ;SPI.c: 62: pInput->SSPBUF = (UINT8Ptr)&SSP2BUF;
 15896  010AD6  0100               	movlb	0	; () banked
 15897  010AD8  EE20 F009          	lfsr	2,9
 15898  010ADC  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15899  010ADE  26D9               	addwf	fsr2l,f,c
 15900  010AE0  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15901  010AE2  22DA               	addwfc	fsr2h,f,c
 15902  010AE4  0E6F               	movlw	111
 15903  010AE6                     L13:
 15904  010AE6  6EDE               	movwf	postinc2,c
 15905  010AE8  0E0F               	movlw	15
 15906  010AEA  6EDD               	movwf	postdec2,c
 15907                           
 15908                           ;SPI.c: 68: break;
 15909  010AEC  D009               	goto	l603
 15910  010AEE                     l601:
 15911                           
 15912                           ; BSR set to: 0
 15913                           
 15914                           ; BSR set to: 0
 15915  010AEE  0100               	movlb	0	; () banked
 15916  010AF0  51EB               	movf	SPI_Init@pChannel& (0+255),w,b
 15917                           
 15918                           ; Switch size 1, requested type "space"
 15919                           ; Number of cases is 2, Range of values is 0 to 1
 15920                           ; switch strategies available:
 15921                           ; Name         Instructions Cycles
 15922                           ; simple_byte            7     4 (average)
 15923                           ;	Chosen strategy is simple_byte
 15924  010AF2  0A00               	xorlw	0	; case 0
 15925  010AF4  B4D8               	btfsc	status,2,c
 15926  010AF6  D74A               	goto	l602
 15927  010AF8  0A01               	xorlw	1	; case 1
 15928  010AFA  A4D8               	btfss	status,2,c
 15929  010AFC  0012               	return	
 15930  010AFE  D79D               	goto	l604
 15931  010B00                     l603:
 15932                           
 15933                           ; BSR set to: 0
 15934                           ;SPI.c: 74: Byte_SetBit(pInput->SSPCON1T, (UINT8)5, (UINT8)0);
 15935                           
 15936                           ; BSR set to: 0
 15937  010B00  0100               	movlb	0	; () banked
 15938  010B02  EE20 F006          	lfsr	2,6
 15939  010B06  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15940  010B08  26D9               	addwf	fsr2l,f,c
 15941  010B0A  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15942  010B0C  22DA               	addwfc	fsr2h,f,c
 15943  010B0E  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 15944  010B12  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 15945  010B16  0E05               	movlw	5
 15946  010B18  0100               	movlb	0	; () banked
 15947  010B1A  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 15948  010B1C  0E00               	movlw	0
 15949  010B1E  0100               	movlb	0	; () banked
 15950  010B20  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 15951  010B22  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 15952                           
 15953                           ;SPI.c: 77: switch(pMode)
 15954  010B26  D09C               	goto	l607
 15955  010B28                     
 15956                           ;SPI.c: 80: Byte_SetBit(pInput->SSPCON1T, (UINT8)4, (UINT8)0);
 15957  010B28  0100               	movlb	0	; () banked
 15958  010B2A  EE20 F006          	lfsr	2,6
 15959  010B2E  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15960  010B30  26D9               	addwf	fsr2l,f,c
 15961  010B32  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15962  010B34  22DA               	addwfc	fsr2h,f,c
 15963  010B36  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 15964  010B3A  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 15965  010B3E  0E04               	movlw	4
 15966  010B40  0100               	movlb	0	; () banked
 15967  010B42  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 15968  010B44  0E00               	movlw	0
 15969  010B46  0100               	movlb	0	; () banked
 15970  010B48  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 15971  010B4A  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 15972                           
 15973                           ;SPI.c: 81: Byte_SetBit(pInput->SSPSTATT, (UINT8)6, (UINT8)0);
 15974  010B4E  0100               	movlb	0	; () banked
 15975  010B50  EE20 F003          	lfsr	2,3
 15976  010B54  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15977  010B56  26D9               	addwf	fsr2l,f,c
 15978  010B58  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15979  010B5A  22DA               	addwfc	fsr2h,f,c
 15980  010B5C  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 15981  010B60  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 15982  010B64  0E06               	movlw	6
 15983  010B66  0100               	movlb	0	; () banked
 15984  010B68  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 15985  010B6A  0E00               	movlw	0
 15986  010B6C  0100               	movlb	0	; () banked
 15987  010B6E  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 15988  010B70  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 15989                           
 15990                           ;SPI.c: 82: break;
 15991  010B74  D084               	goto	l609
 15992  010B76                     
 15993                           ;SPI.c: 84: Byte_SetBit(pInput->SSPCON1T, (UINT8)4, (UINT8)0);
 15994  010B76  0100               	movlb	0	; () banked
 15995  010B78  EE20 F006          	lfsr	2,6
 15996  010B7C  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 15997  010B7E  26D9               	addwf	fsr2l,f,c
 15998  010B80  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 15999  010B82  22DA               	addwfc	fsr2h,f,c
 16000  010B84  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 16001  010B88  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 16002  010B8C  0E04               	movlw	4
 16003  010B8E  0100               	movlb	0	; () banked
 16004  010B90  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 16005  010B92  0E00               	movlw	0
 16006  010B94  0100               	movlb	0	; () banked
 16007  010B96  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 16008  010B98  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 16009                           
 16010                           ;SPI.c: 85: Byte_SetBit(pInput->SSPSTATT, (UINT8)6, (UINT8)1);
 16011  010B9C  0100               	movlb	0	; () banked
 16012  010B9E  EE20 F003          	lfsr	2,3
 16013  010BA2  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 16014  010BA4  26D9               	addwf	fsr2l,f,c
 16015  010BA6  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 16016  010BA8  22DA               	addwfc	fsr2h,f,c
 16017  010BAA  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 16018  010BAE  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 16019  010BB2  0E06               	movlw	6
 16020  010BB4  0100               	movlb	0	; () banked
 16021  010BB6  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 16022  010BB8  0E01               	movlw	1
 16023  010BBA  0100               	movlb	0	; () banked
 16024  010BBC  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 16025  010BBE  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 16026                           
 16027                           ;SPI.c: 86: break;
 16028  010BC2  D05D               	goto	l609
 16029  010BC4                     
 16030                           ;SPI.c: 88: Byte_SetBit(pInput->SSPCON1T, (UINT8)4, (UINT8)1);
 16031  010BC4  0100               	movlb	0	; () banked
 16032  010BC6  EE20 F006          	lfsr	2,6
 16033  010BCA  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 16034  010BCC  26D9               	addwf	fsr2l,f,c
 16035  010BCE  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 16036  010BD0  22DA               	addwfc	fsr2h,f,c
 16037  010BD2  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 16038  010BD6  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 16039  010BDA  0E04               	movlw	4
 16040  010BDC  0100               	movlb	0	; () banked
 16041  010BDE  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 16042  010BE0  0E01               	movlw	1
 16043  010BE2  0100               	movlb	0	; () banked
 16044  010BE4  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 16045  010BE6  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 16046                           
 16047                           ;SPI.c: 89: Byte_SetBit(pInput->SSPSTATT, (UINT8)6, (UINT8)0);
 16048  010BEA  0100               	movlb	0	; () banked
 16049  010BEC  EE20 F003          	lfsr	2,3
 16050  010BF0  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 16051  010BF2  26D9               	addwf	fsr2l,f,c
 16052  010BF4  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 16053  010BF6  22DA               	addwfc	fsr2h,f,c
 16054  010BF8  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 16055  010BFC  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 16056  010C00  0E06               	movlw	6
 16057  010C02  0100               	movlb	0	; () banked
 16058  010C04  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 16059  010C06  0E00               	movlw	0
 16060  010C08  0100               	movlb	0	; () banked
 16061  010C0A  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 16062  010C0C  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 16063                           
 16064                           ;SPI.c: 90: break;
 16065  010C10  D036               	goto	l609
 16066  010C12                     
 16067                           ;SPI.c: 92: Byte_SetBit(pInput->SSPCON1T, (UINT8)4, (UINT8)1);
 16068  010C12  0100               	movlb	0	; () banked
 16069  010C14  EE20 F006          	lfsr	2,6
 16070  010C18  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 16071  010C1A  26D9               	addwf	fsr2l,f,c
 16072  010C1C  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 16073  010C1E  22DA               	addwfc	fsr2h,f,c
 16074  010C20  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 16075  010C24  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 16076  010C28  0E04               	movlw	4
 16077  010C2A  0100               	movlb	0	; () banked
 16078  010C2C  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 16079  010C2E  0E01               	movlw	1
 16080  010C30  0100               	movlb	0	; () banked
 16081  010C32  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 16082  010C34  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 16083                           
 16084                           ;SPI.c: 93: Byte_SetBit(pInput->SSPSTATT, (UINT8)6, (UINT8)1);
 16085  010C38  0100               	movlb	0	; () banked
 16086  010C3A  EE20 F003          	lfsr	2,3
 16087  010C3E  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 16088  010C40  26D9               	addwf	fsr2l,f,c
 16089  010C42  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 16090  010C44  22DA               	addwfc	fsr2h,f,c
 16091  010C46  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 16092  010C4A  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 16093  010C4E  0E06               	movlw	6
 16094  010C50  0100               	movlb	0	; () banked
 16095  010C52  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 16096  010C54  0E01               	movlw	1
 16097  010C56  0100               	movlb	0	; () banked
 16098  010C58  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 16099  010C5A  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 16100                           
 16101                           ;SPI.c: 94: break;
 16102  010C5E  D00F               	goto	l609
 16103  010C60                     l607:
 16104  010C60  0100               	movlb	0	; () banked
 16105  010C62  51EC               	movf	SPI_Init@pMode& (0+255),w,b
 16106                           
 16107                           ; Switch size 1, requested type "space"
 16108                           ; Number of cases is 4, Range of values is 0 to 3
 16109                           ; switch strategies available:
 16110                           ; Name         Instructions Cycles
 16111                           ; simple_byte           13     7 (average)
 16112                           ;	Chosen strategy is simple_byte
 16113  010C64  0A00               	xorlw	0	; case 0
 16114  010C66  B4D8               	btfsc	status,2,c
 16115  010C68  D75F               	goto	l608
 16116  010C6A  0A01               	xorlw	1	; case 1
 16117  010C6C  B4D8               	btfsc	status,2,c
 16118  010C6E  D783               	goto	l610
 16119  010C70  0A03               	xorlw	3	; case 2
 16120  010C72  B4D8               	btfsc	status,2,c
 16121  010C74  D7A7               	goto	l611
 16122  010C76  0A01               	xorlw	1	; case 3
 16123  010C78  A4D8               	btfss	status,2,c
 16124  010C7A  0012               	return	
 16125  010C7C  D7CA               	goto	l612
 16126  010C7E                     l609:
 16127                           
 16128                           ;SPI.c: 100: Byte_SetBit(pInput->SSPCON1T, (UINT8)7, (UINT8)0);
 16129                           
 16130                           ; BSR set to: 0
 16131  010C7E  0100               	movlb	0	; () banked
 16132  010C80  EE20 F006          	lfsr	2,6
 16133  010C84  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 16134  010C86  26D9               	addwf	fsr2l,f,c
 16135  010C88  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 16136  010C8A  22DA               	addwfc	fsr2h,f,c
 16137  010C8C  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 16138  010C90  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 16139  010C94  0E07               	movlw	7
 16140  010C96  0100               	movlb	0	; () banked
 16141  010C98  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 16142  010C9A  0E00               	movlw	0
 16143  010C9C  0100               	movlb	0	; () banked
 16144  010C9E  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 16145  010CA0  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 16146                           
 16147                           ;SPI.c: 101: Byte_SetBit(pInput->SSPCON1T, (UINT8)6, (UINT8)0);
 16148  010CA4  0100               	movlb	0	; () banked
 16149  010CA6  EE20 F006          	lfsr	2,6
 16150  010CAA  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 16151  010CAC  26D9               	addwf	fsr2l,f,c
 16152  010CAE  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 16153  010CB0  22DA               	addwfc	fsr2h,f,c
 16154  010CB2  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 16155  010CB6  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 16156  010CBA  0E06               	movlw	6
 16157  010CBC  0100               	movlb	0	; () banked
 16158  010CBE  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 16159  010CC0  0E00               	movlw	0
 16160  010CC2  0100               	movlb	0	; () banked
 16161  010CC4  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 16162  010CC6  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 16163                           
 16164                           ;SPI.c: 106: Timer2_Init(pClock);
 16165  010CCA  C0E7  F0C7         	movff	SPI_Init@pClock,Timer2_Init@pFrequency
 16166  010CCE  C0E8  F0C8         	movff	SPI_Init@pClock+1,Timer2_Init@pFrequency+1
 16167  010CD2  C0E9  F0C9         	movff	SPI_Init@pClock+2,Timer2_Init@pFrequency+2
 16168  010CD6  C0EA  F0CA         	movff	SPI_Init@pClock+3,Timer2_Init@pFrequency+3
 16169  010CDA  ECAD  F093         	call	_Timer2_Init	;wreg free
 16170                           
 16171                           ;SPI.c: 112: SPI_DisableISR(pInput);
 16172  010CDE  C0ED  F0BA         	movff	SPI_Init@pInput,SPI_DisableISR@pInput
 16173  010CE2  C0EE  F0BB         	movff	SPI_Init@pInput+1,SPI_DisableISR@pInput+1
 16174  010CE6  EC8B  F0A4         	call	_SPI_DisableISR	;wreg free
 16175                           
 16176                           ;SPI.c: 116: switch (pChannel)
 16177  010CEA  D004               	goto	l614
 16178  010CEC                     l615:
 16179                           
 16180                           ; BSR set to: 0
 16181  010CEC  869F               	bsf	3999,3,c	;volatile
 16182  010CEE  D00B               	goto	l616
 16183  010CF0                     l617:
 16184                           
 16185                           ; BSR set to: 0
 16186  010CF0  8EA5               	bsf	4005,7,c	;volatile
 16187  010CF2  D009               	goto	l616
 16188  010CF4                     l614:
 16189                           
 16190                           ; BSR set to: 0
 16191  010CF4  0100               	movlb	0	; () banked
 16192  010CF6  51EB               	movf	SPI_Init@pChannel& (0+255),w,b
 16193                           
 16194                           ; Switch size 1, requested type "space"
 16195                           ; Number of cases is 2, Range of values is 0 to 1
 16196                           ; switch strategies available:
 16197                           ; Name         Instructions Cycles
 16198                           ; simple_byte            7     4 (average)
 16199                           ;	Chosen strategy is simple_byte
 16200  010CF8  0A00               	xorlw	0	; case 0
 16201  010CFA  B4D8               	btfsc	status,2,c
 16202  010CFC  D7F7               	goto	l615
 16203  010CFE  0A01               	xorlw	1	; case 1
 16204  010D00  A4D8               	btfss	status,2,c
 16205  010D02  0012               	return	
 16206  010D04  D7F5               	goto	l617
 16207  010D06                     l616:
 16208                           
 16209                           ; BSR set to: 0
 16210                           ;SPI.c: 124: SPI_DCS(pInput);
 16211                           
 16212                           ; BSR set to: 0
 16213  010D06  C0ED  F0BA         	movff	SPI_Init@pInput,SPI_DCS@pInput
 16214  010D0A  C0EE  F0BB         	movff	SPI_Init@pInput+1,SPI_DCS@pInput+1
 16215  010D0E  EC19  F0A4         	call	_SPI_DCS	;wreg free
 16216                           
 16217                           ;SPI.c: 126: pInput->mBusy = 0;
 16218  010D12  C0ED  FFD9         	movff	SPI_Init@pInput,fsr2l
 16219  010D16  C0EE  FFDA         	movff	SPI_Init@pInput+1,fsr2h
 16220  010D1A  0E00               	movlw	0
 16221  010D1C  6EDF               	movwf	indf2,c
 16222                           
 16223                           ;SPI.c: 129: Byte_SetQuad(pInput->SSPCON1T, (UINT8)0, (UINT8)3);
 16224  010D1E  0100               	movlb	0	; () banked
 16225  010D20  EE20 F006          	lfsr	2,6
 16226  010D24  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 16227  010D26  26D9               	addwf	fsr2l,f,c
 16228  010D28  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 16229  010D2A  22DA               	addwfc	fsr2h,f,c
 16230  010D2C  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 16231  010D30  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 16232  010D34  0E00               	movlw	0
 16233  010D36  0100               	movlb	0	; () banked
 16234  010D38  6FC7               	movwf	Byte_SetQuad@pQuad& (0+255),b
 16235  010D3A  0E03               	movlw	3
 16236  010D3C  0100               	movlb	0	; () banked
 16237  010D3E  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 16238  010D40  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 16239                           
 16240                           ;SPI.c: 130: Byte_SetBit (pInput->SSPCON1T, (UINT8)5, (UINT8)1);
 16241  010D44  0100               	movlb	0	; () banked
 16242  010D46  EE20 F006          	lfsr	2,6
 16243  010D4A  51ED               	movf	SPI_Init@pInput& (0+255),w,b
 16244  010D4C  26D9               	addwf	fsr2l,f,c
 16245  010D4E  51EE               	movf	(SPI_Init@pInput+1)& (0+255),w,b
 16246  010D50  22DA               	addwfc	fsr2h,f,c
 16247  010D52  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 16248  010D56  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 16249  010D5A  0E05               	movlw	5
 16250  010D5C  0100               	movlb	0	; () banked
 16251  010D5E  6FBC               	movwf	Byte_SetBit@pBit& (0+255),b
 16252  010D60  0E01               	movlw	1
 16253  010D62  0100               	movlb	0	; () banked
 16254  010D64  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 16255  010D66  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 16256  010D6A  0012               	return		;funcret
 16257  010D6C                     __end_of_SPI_Init:
 16258                           	opt stack 0
 16259                           tosu	equ	0xFFF
 16260                           tosh	equ	0xFFE
 16261                           tosl	equ	0xFFD
 16262                           pclath	equ	0xFFA
 16263                           tblptru	equ	0xFF8
 16264                           tblptrh	equ	0xFF7
 16265                           tblptrl	equ	0xFF6
 16266                           tablat	equ	0xFF5
 16267                           prodh	equ	0xFF4
 16268                           prodl	equ	0xFF3
 16269                           intcon	equ	0xFF2
 16270                           postinc0	equ	0xFEE
 16271                           wreg	equ	0xFE8
 16272                           indf1	equ	0xFE7
 16273                           postdec1	equ	0xFE5
 16274                           fsr1h	equ	0xFE2
 16275                           fsr1l	equ	0xFE1
 16276                           indf2	equ	0xFDF
 16277                           postinc2	equ	0xFDE
 16278                           postdec2	equ	0xFDD
 16279                           plusw2	equ	0xFDB
 16280                           fsr2h	equ	0xFDA
 16281                           fsr2l	equ	0xFD9
 16282                           status	equ	0xFD8
 16283                           
 16284 ;; *************** function _Timer2_Init *****************
 16285 ;; Defined at:
 16286 ;;		line 10 in file "Library/Timer2.c"
 16287 ;; Parameters:    Size  Location     Type
 16288 ;;  pFrequency      4   13[BANK0 ] unsigned long 
 16289 ;; Auto vars:     Size  Location     Type
 16290 ;;  DIVIDE          4   26[BANK0 ] unsigned long 
 16291 ;;  pCPUClock       4   22[BANK0 ] unsigned long 
 16292 ;;  RDIV            4   18[BANK0 ] unsigned long 
 16293 ;; Return value:  Size  Location     Type
 16294 ;;                  1    wreg      void 
 16295 ;; Registers used:
 16296 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16297 ;; Tracked objects:
 16298 ;;		On entry : 0/0
 16299 ;;		On exit  : 0/0
 16300 ;;		Unchanged: 0/0
 16301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16302 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16303 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16304 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16305 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16306 ;;Total ram usage:       17 bytes
 16307 ;; Hardware stack levels used:    1
 16308 ;; Hardware stack levels required when called:    8
 16309 ;; This function calls:
 16310 ;;		_Timer2_Clear
 16311 ;;		___lldiv
 16312 ;; This function is called by:
 16313 ;;		_SPI_Init
 16314 ;; This function uses a non-reentrant model
 16315 ;;
 16316                           
 16317                           	psect	text69
 16318  01275A                     __ptext69:
 16319                           	opt stack 0
 16320  01275A                     _Timer2_Init:
 16321                           	opt stack 18
 16322                           
 16323                           ;Timer2.c: 12: static const UINT8 PRESCALE[] = {1, 4, 16};
 16324                           ;Timer2.c: 13: static UINT8 INDEX = 0;
 16325                           ;Timer2.c: 14: static UINT8 PRE = 0;
 16326                           ;Timer2.c: 15: static UINT32 DIV = 0;
 16327                           ;Timer2.c: 17: UINT32 pCPUClock = (48*1000000L);
 16328                           
 16329                           ;incstack = 0
 16330  01275A  0E00               	movlw	0
 16331  01275C  0100               	movlb	0	; () banked
 16332  01275E  6FD0               	movwf	Timer2_Init@pCPUClock& (0+255),b
 16333  012760  0E6C               	movlw	108
 16334  012762  6FD1               	movwf	(Timer2_Init@pCPUClock+1)& (0+255),b
 16335  012764  0EDC               	movlw	220
 16336  012766  6FD2               	movwf	(Timer2_Init@pCPUClock+2)& (0+255),b
 16337  012768  0E02               	movlw	2
 16338  01276A  6FD3               	movwf	(Timer2_Init@pCPUClock+3)& (0+255),b
 16339                           
 16340                           ; BSR set to: 0
 16341                           ;Timer2.c: 18: UINT32 DIVIDE, RDIV;
 16342                           ;Timer2.c: 20: pFrequency *= 2;
 16343  01276C  0100               	movlb	0	; () banked
 16344  01276E  90D8               	bcf	status,0,c
 16345  012770  37C7               	rlcf	Timer2_Init@pFrequency& (0+255),f,b
 16346  012772  37C8               	rlcf	(Timer2_Init@pFrequency+1)& (0+255),f,b
 16347  012774  37C9               	rlcf	(Timer2_Init@pFrequency+2)& (0+255),f,b
 16348  012776  37CA               	rlcf	(Timer2_Init@pFrequency+3)& (0+255),f,b
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;Timer2.c: 23: pCPUClock /= 4;
 16352  012778  0E02               	movlw	2
 16353  01277A  0100               	movlb	0	; () banked
 16354  01277C  6FCB               	movwf	??_Timer2_Init& (0+255),b
 16355  01277E                     u9745:
 16356  01277E  90D8               	bcf	status,0,c
 16357  012780  0100               	movlb	0	; () banked
 16358  012782  33D3               	rrcf	(Timer2_Init@pCPUClock+3)& (0+255),f,b
 16359  012784  33D2               	rrcf	(Timer2_Init@pCPUClock+2)& (0+255),f,b
 16360  012786  33D1               	rrcf	(Timer2_Init@pCPUClock+1)& (0+255),f,b
 16361  012788  33D0               	rrcf	Timer2_Init@pCPUClock& (0+255),f,b
 16362  01278A  0100               	movlb	0	; () banked
 16363  01278C  2FCB               	decfsz	??_Timer2_Init& (0+255),f,b
 16364  01278E  D7F7               	goto	u9745
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;Timer2.c: 24: DIVIDE = pCPUClock / pFrequency;
 16368  012790  C0D0  F0BA         	movff	Timer2_Init@pCPUClock,___lldiv@dividend
 16369  012794  C0D1  F0BB         	movff	Timer2_Init@pCPUClock+1,___lldiv@dividend+1
 16370  012798  C0D2  F0BC         	movff	Timer2_Init@pCPUClock+2,___lldiv@dividend+2
 16371  01279C  C0D3  F0BD         	movff	Timer2_Init@pCPUClock+3,___lldiv@dividend+3
 16372  0127A0  C0C7  F0BE         	movff	Timer2_Init@pFrequency,___lldiv@divisor
 16373  0127A4  C0C8  F0BF         	movff	Timer2_Init@pFrequency+1,___lldiv@divisor+1
 16374  0127A8  C0C9  F0C0         	movff	Timer2_Init@pFrequency+2,___lldiv@divisor+2
 16375  0127AC  C0CA  F0C1         	movff	Timer2_Init@pFrequency+3,___lldiv@divisor+3
 16376  0127B0  ECB6  F099         	call	___lldiv	;wreg free
 16377  0127B4  C0BA  F0D4         	movff	?___lldiv,Timer2_Init@DIVIDE
 16378  0127B8  C0BB  F0D5         	movff	?___lldiv+1,Timer2_Init@DIVIDE+1
 16379  0127BC  C0BC  F0D6         	movff	?___lldiv+2,Timer2_Init@DIVIDE+2
 16380  0127C0  C0BD  F0D7         	movff	?___lldiv+3,Timer2_Init@DIVIDE+3
 16381                           
 16382                           ;Timer2.c: 27: while ((DIVIDE/PRESCALE[INDEX]) > 255)
 16383  0127C4  D010               	goto	l1828
 16384  0127C6                     l12788:
 16385                           
 16386                           ;Timer2.c: 28: {
 16387                           ;Timer2.c: 29: RDIV = 0;
 16388  0127C6  0E00               	movlw	0
 16389  0127C8  0100               	movlb	0	; () banked
 16390  0127CA  6FCC               	movwf	Timer2_Init@RDIV& (0+255),b
 16391  0127CC  0E00               	movlw	0
 16392  0127CE  6FCD               	movwf	(Timer2_Init@RDIV+1)& (0+255),b
 16393  0127D0  0E00               	movlw	0
 16394  0127D2  6FCE               	movwf	(Timer2_Init@RDIV+2)& (0+255),b
 16395  0127D4  0E00               	movlw	0
 16396  0127D6  6FCF               	movwf	(Timer2_Init@RDIV+3)& (0+255),b
 16397                           
 16398                           ; BSR set to: 0
 16399                           ;Timer2.c: 30: INDEX ++;
 16400  0127D8  0100               	movlb	0	; () banked
 16401  0127DA  2B8C               	incf	Timer2_Init@INDEX& (0+255),f,b
 16402                           
 16403                           ; BSR set to: 0
 16404                           ;Timer2.c: 31: if (INDEX >= 3)
 16405  0127DC  0E02               	movlw	2
 16406  0127DE  0100               	movlb	0	; () banked
 16407  0127E0  658C               	cpfsgt	Timer2_Init@INDEX& (0+255),b
 16408  0127E2  D001               	goto	l1828
 16409  0127E4  D026               	goto	u9760
 16410  0127E6                     l1828:
 16411                           
 16412                           ; BSR set to: 0
 16413                           
 16414                           ; BSR set to: 0
 16415  0127E6  C0D4  F0BA         	movff	Timer2_Init@DIVIDE,___lldiv@dividend
 16416  0127EA  C0D5  F0BB         	movff	Timer2_Init@DIVIDE+1,___lldiv@dividend+1
 16417  0127EE  C0D6  F0BC         	movff	Timer2_Init@DIVIDE+2,___lldiv@dividend+2
 16418  0127F2  C0D7  F0BD         	movff	Timer2_Init@DIVIDE+3,___lldiv@dividend+3
 16419  0127F6  0100               	movlb	0	; () banked
 16420  0127F8  518C               	movf	Timer2_Init@INDEX& (0+255),w,b
 16421  0127FA  0D01               	mullw	1
 16422  0127FC  0EDC               	movlw	low Timer2_Init@PRESCALE
 16423  0127FE  24F3               	addwf	prodl,w,c
 16424  012800  6EF6               	movwf	tblptrl,c
 16425  012802  0EFD               	movlw	high Timer2_Init@PRESCALE
 16426  012804  20F4               	addwfc	prodh,w,c
 16427  012806  6EF7               	movwf	tblptrh,c
 16428  012808                     	if	1	;There are 3 active tblptr bytes
 16429  012808  6AF8               	clrf	tblptru,c
 16430  01280A  0E00               	movlw	low (__mediumconst shr (0+16))
 16431  01280C  22F8               	addwfc	tblptru,f,c
 16432  01280E                     	endif
 16433  01280E  0008               	tblrd		*
 16434  012810  50F5               	movf	tablat,w,c
 16435  012812  0100               	movlb	0	; () banked
 16436  012814  6FBE               	movwf	___lldiv@divisor& (0+255),b
 16437  012816  6BBF               	clrf	(___lldiv@divisor+1)& (0+255),b
 16438  012818  6BC0               	clrf	(___lldiv@divisor+2)& (0+255),b
 16439  01281A  6BC1               	clrf	(___lldiv@divisor+3)& (0+255),b
 16440  01281C  ECB6  F099         	call	___lldiv	;wreg free
 16441  012820  0100               	movlb	0	; () banked
 16442  012822  51BD               	movf	(?___lldiv+3)& (0+255),w,b
 16443  012824  0100               	movlb	0	; () banked
 16444  012826  11BC               	iorwf	(?___lldiv+2)& (0+255),w,b
 16445  012828  E1CE               	bnz	l12788
 16446  01282A  0100               	movlb	0	; () banked
 16447  01282C  05BB               	decf	(?___lldiv+1)& (0+255),w,b
 16448  01282E  B0D8               	btfsc	status,0,c
 16449  012830  D7CA               	goto	l1827
 16450  012832                     u9760:
 16451                           
 16452                           ; BSR set to: 0
 16453                           ;Timer2.c: 33: }
 16454                           ;Timer2.c: 37: T2CONbits.T2CKPS = INDEX;
 16455                           
 16456                           ; BSR set to: 0
 16457  012832  50CA               	movf	4042,w,c	;volatile
 16458  012834  0100               	movlb	0	; () banked
 16459  012836  198C               	xorwf	Timer2_Init@INDEX& (0+255),w,b
 16460  012838  0BFC               	andlw	-4
 16461  01283A  198C               	xorwf	Timer2_Init@INDEX& (0+255),w,b
 16462  01283C  6ECA               	movwf	4042,c	;volatile
 16463                           
 16464                           ; BSR set to: 0
 16465                           ;Timer2.c: 40: T2CONbits.TMR2ON = 1;
 16466  01283E  84CA               	bsf	4042,2,c	;volatile
 16467                           
 16468                           ; BSR set to: 0
 16469                           ;Timer2.c: 44: Timer2_Clear();
 16470  012840  ECDA  F0A5         	call	_Timer2_Clear	;wreg free
 16471                           
 16472                           ;Timer2.c: 45: PRE = PRESCALE[INDEX];
 16473  012844  0100               	movlb	0	; () banked
 16474  012846  518C               	movf	Timer2_Init@INDEX& (0+255),w,b
 16475  012848  0D01               	mullw	1
 16476  01284A  0EDC               	movlw	low Timer2_Init@PRESCALE
 16477  01284C  24F3               	addwf	prodl,w,c
 16478  01284E  6EF6               	movwf	tblptrl,c
 16479  012850  0EFD               	movlw	high Timer2_Init@PRESCALE
 16480  012852  20F4               	addwfc	prodh,w,c
 16481  012854  6EF7               	movwf	tblptrh,c
 16482  012856                     	if	1	;There are 3 active tblptr bytes
 16483  012856  6AF8               	clrf	tblptru,c
 16484  012858  0E00               	movlw	low (__mediumconst shr (0+16))
 16485  01285A  22F8               	addwfc	tblptru,f,c
 16486  01285C                     	endif
 16487  01285C  0008               	tblrd		*
 16488  01285E  CFF5 F08B          	movff	tablat,Timer2_Init@PRE
 16489                           
 16490                           ; BSR set to: 0
 16491                           ;Timer2.c: 46: DIV = (DIVIDE-1);
 16492  012862  0EFF               	movlw	255
 16493  012864  0100               	movlb	0	; () banked
 16494  012866  25D4               	addwf	Timer2_Init@DIVIDE& (0+255),w,b
 16495  012868  0101               	movlb	1	; () banked
 16496  01286A  6F26               	movwf	Timer2_Init@DIV& (0+255),b
 16497  01286C  0EFF               	movlw	255
 16498  01286E  0100               	movlb	0	; () banked
 16499  012870  21D5               	addwfc	(Timer2_Init@DIVIDE+1)& (0+255),w,b
 16500  012872  0101               	movlb	1	; () banked
 16501  012874  6F27               	movwf	(Timer2_Init@DIV+1)& (0+255),b
 16502  012876  0EFF               	movlw	255
 16503  012878  0100               	movlb	0	; () banked
 16504  01287A  21D6               	addwfc	(Timer2_Init@DIVIDE+2)& (0+255),w,b
 16505  01287C  0101               	movlb	1	; () banked
 16506  01287E  6F28               	movwf	(Timer2_Init@DIV+2)& (0+255),b
 16507  012880  0EFF               	movlw	255
 16508  012882  0100               	movlb	0	; () banked
 16509  012884  21D7               	addwfc	(Timer2_Init@DIVIDE+3)& (0+255),w,b
 16510  012886  0101               	movlb	1	; () banked
 16511  012888  6F29               	movwf	(Timer2_Init@DIV+3)& (0+255),b
 16512                           
 16513                           ; BSR set to: 1
 16514                           ;Timer2.c: 48: INDEX = DIV/PRE;
 16515  01288A  C126  F0BA         	movff	Timer2_Init@DIV,___lldiv@dividend
 16516  01288E  C127  F0BB         	movff	Timer2_Init@DIV+1,___lldiv@dividend+1
 16517  012892  C128  F0BC         	movff	Timer2_Init@DIV+2,___lldiv@dividend+2
 16518  012896  C129  F0BD         	movff	Timer2_Init@DIV+3,___lldiv@dividend+3
 16519  01289A  0100               	movlb	0	; () banked
 16520  01289C  518B               	movf	Timer2_Init@PRE& (0+255),w,b
 16521  01289E  0100               	movlb	0	; () banked
 16522  0128A0  6FBE               	movwf	___lldiv@divisor& (0+255),b
 16523  0128A2  6BBF               	clrf	(___lldiv@divisor+1)& (0+255),b
 16524  0128A4  6BC0               	clrf	(___lldiv@divisor+2)& (0+255),b
 16525  0128A6  6BC1               	clrf	(___lldiv@divisor+3)& (0+255),b
 16526  0128A8  ECB6  F099         	call	___lldiv	;wreg free
 16527  0128AC  0100               	movlb	0	; () banked
 16528  0128AE  51BA               	movf	?___lldiv& (0+255),w,b
 16529  0128B0  0100               	movlb	0	; () banked
 16530  0128B2  6F8C               	movwf	Timer2_Init@INDEX& (0+255),b
 16531                           
 16532                           ; BSR set to: 0
 16533                           ;Timer2.c: 49: PR2 = INDEX;
 16534  0128B4  C08C  FFCB         	movff	Timer2_Init@INDEX,4043	;volatile
 16535                           
 16536                           ; BSR set to: 0
 16537  0128B8  0012               	return		;funcret
 16538  0128BA                     __end_of_Timer2_Init:
 16539                           	opt stack 0
 16540                           tosu	equ	0xFFF
 16541                           tosh	equ	0xFFE
 16542                           tosl	equ	0xFFD
 16543                           pclath	equ	0xFFA
 16544                           tblptru	equ	0xFF8
 16545                           tblptrh	equ	0xFF7
 16546                           tblptrl	equ	0xFF6
 16547                           tablat	equ	0xFF5
 16548                           prodh	equ	0xFF4
 16549                           prodl	equ	0xFF3
 16550                           intcon	equ	0xFF2
 16551                           postinc0	equ	0xFEE
 16552                           wreg	equ	0xFE8
 16553                           indf1	equ	0xFE7
 16554                           postdec1	equ	0xFE5
 16555                           fsr1h	equ	0xFE2
 16556                           fsr1l	equ	0xFE1
 16557                           indf2	equ	0xFDF
 16558                           postinc2	equ	0xFDE
 16559                           postdec2	equ	0xFDD
 16560                           plusw2	equ	0xFDB
 16561                           fsr2h	equ	0xFDA
 16562                           fsr2l	equ	0xFD9
 16563                           status	equ	0xFD8
 16564                           
 16565 ;; *************** function ___lldiv *****************
 16566 ;; Defined at:
 16567 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.43\sources\common\lldiv.c"
 16568 ;; Parameters:    Size  Location     Type
 16569 ;;  dividend        4    0[BANK0 ] unsigned long 
 16570 ;;  divisor         4    4[BANK0 ] unsigned long 
 16571 ;; Auto vars:     Size  Location     Type
 16572 ;;  quotient        4    8[BANK0 ] unsigned long 
 16573 ;;  counter         1   12[BANK0 ] unsigned char 
 16574 ;; Return value:  Size  Location     Type
 16575 ;;                  4    0[BANK0 ] unsigned long 
 16576 ;; Registers used:
 16577 ;;		wreg, status,2, status,0
 16578 ;; Tracked objects:
 16579 ;;		On entry : 0/0
 16580 ;;		On exit  : 0/0
 16581 ;;		Unchanged: 0/0
 16582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16583 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16584 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16586 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16587 ;;Total ram usage:       13 bytes
 16588 ;; Hardware stack levels used:    1
 16589 ;; Hardware stack levels required when called:    7
 16590 ;; This function calls:
 16591 ;;		Nothing
 16592 ;; This function is called by:
 16593 ;;		_Timer0_Init
 16594 ;;		_Timer2_Init
 16595 ;;		_rand_between
 16596 ;;		_I2C_Init
 16597 ;; This function uses a non-reentrant model
 16598 ;;
 16599                           
 16600                           	psect	text70
 16601  01336C                     __ptext70:
 16602                           	opt stack 0
 16603  01336C                     ___lldiv:
 16604                           	opt stack 20
 16605                           
 16606                           ; BSR set to: 0
 16607                           ;incstack = 0
 16608  01336C  0E00               	movlw	0
 16609  01336E  0100               	movlb	0	; () banked
 16610  013370  6FC2               	movwf	___lldiv@quotient& (0+255),b
 16611  013372  0E00               	movlw	0
 16612  013374  6FC3               	movwf	(___lldiv@quotient+1)& (0+255),b
 16613  013376  0E00               	movlw	0
 16614  013378  6FC4               	movwf	(___lldiv@quotient+2)& (0+255),b
 16615  01337A  0E00               	movlw	0
 16616  01337C  6FC5               	movwf	(___lldiv@quotient+3)& (0+255),b
 16617                           
 16618                           ; BSR set to: 0
 16619  01337E  0100               	movlb	0	; () banked
 16620  013380  51BE               	movf	___lldiv@divisor& (0+255),w,b
 16621  013382  0100               	movlb	0	; () banked
 16622  013384  11BF               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 16623  013386  0100               	movlb	0	; () banked
 16624  013388  11C0               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 16625  01338A  0100               	movlb	0	; () banked
 16626  01338C  11C1               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 16627  01338E  B4D8               	btfsc	status,2,c
 16628  013390  D042               	goto	l2902
 16629                           
 16630                           ; BSR set to: 0
 16631  013392  0E01               	movlw	1
 16632  013394  0100               	movlb	0	; () banked
 16633  013396  6FC6               	movwf	___lldiv@counter& (0+255),b
 16634  013398  D008               	goto	l2897
 16635  01339A                     
 16636                           ; BSR set to: 0
 16637                           
 16638                           ; BSR set to: 0
 16639  01339A  0100               	movlb	0	; () banked
 16640  01339C  90D8               	bcf	status,0,c
 16641  01339E  37BE               	rlcf	___lldiv@divisor& (0+255),f,b
 16642  0133A0  37BF               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 16643  0133A2  37C0               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 16644  0133A4  37C1               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 16645  0133A6  0100               	movlb	0	; () banked
 16646  0133A8  2BC6               	incf	___lldiv@counter& (0+255),f,b
 16647  0133AA                     l2897:
 16648                           
 16649                           ; BSR set to: 0
 16650                           
 16651                           ; BSR set to: 0
 16652  0133AA  0100               	movlb	0	; () banked
 16653  0133AC  AFC1               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 16654  0133AE  D7F5               	goto	l2898
 16655  0133B0                     u9620:
 16656                           
 16657                           ; BSR set to: 0
 16658                           
 16659                           ; BSR set to: 0
 16660                           
 16661                           ; BSR set to: 0
 16662  0133B0  0100               	movlb	0	; () banked
 16663  0133B2  90D8               	bcf	status,0,c
 16664  0133B4  37C2               	rlcf	___lldiv@quotient& (0+255),f,b
 16665  0133B6  37C3               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 16666  0133B8  37C4               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 16667  0133BA  37C5               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 16668                           
 16669                           ; BSR set to: 0
 16670  0133BC  0100               	movlb	0	; () banked
 16671  0133BE  51BE               	movf	___lldiv@divisor& (0+255),w,b
 16672  0133C0  0100               	movlb	0	; () banked
 16673  0133C2  5DBA               	subwf	___lldiv@dividend& (0+255),w,b
 16674  0133C4  0100               	movlb	0	; () banked
 16675  0133C6  51BF               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16676  0133C8  0100               	movlb	0	; () banked
 16677  0133CA  59BB               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 16678  0133CC  0100               	movlb	0	; () banked
 16679  0133CE  51C0               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16680  0133D0  0100               	movlb	0	; () banked
 16681  0133D2  59BC               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 16682  0133D4  0100               	movlb	0	; () banked
 16683  0133D6  51C1               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16684  0133D8  0100               	movlb	0	; () banked
 16685  0133DA  59BD               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 16686  0133DC  A0D8               	btfss	status,0,c
 16687  0133DE  D012               	goto	l2901
 16688                           
 16689                           ; BSR set to: 0
 16690  0133E0  0100               	movlb	0	; () banked
 16691  0133E2  51BE               	movf	___lldiv@divisor& (0+255),w,b
 16692  0133E4  0100               	movlb	0	; () banked
 16693  0133E6  5FBA               	subwf	___lldiv@dividend& (0+255),f,b
 16694  0133E8  0100               	movlb	0	; () banked
 16695  0133EA  51BF               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16696  0133EC  0100               	movlb	0	; () banked
 16697  0133EE  5BBB               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 16698  0133F0  0100               	movlb	0	; () banked
 16699  0133F2  51C0               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16700  0133F4  0100               	movlb	0	; () banked
 16701  0133F6  5BBC               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 16702  0133F8  0100               	movlb	0	; () banked
 16703  0133FA  51C1               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16704  0133FC  0100               	movlb	0	; () banked
 16705  0133FE  5BBD               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 16706                           
 16707                           ; BSR set to: 0
 16708  013400  0100               	movlb	0	; () banked
 16709  013402  81C2               	bsf	___lldiv@quotient& (0+255),0,b
 16710  013404                     l2901:
 16711                           
 16712                           ; BSR set to: 0
 16713                           
 16714                           ; BSR set to: 0
 16715  013404  0100               	movlb	0	; () banked
 16716  013406  90D8               	bcf	status,0,c
 16717  013408  33C1               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 16718  01340A  33C0               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 16719  01340C  33BF               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 16720  01340E  33BE               	rrcf	___lldiv@divisor& (0+255),f,b
 16721                           
 16722                           ; BSR set to: 0
 16723  013410  0100               	movlb	0	; () banked
 16724  013412  2FC6               	decfsz	___lldiv@counter& (0+255),f,b
 16725  013414  D7CD               	goto	u9620
 16726  013416                     l2902:
 16727                           
 16728                           ; BSR set to: 0
 16729                           
 16730                           ; BSR set to: 0
 16731  013416  C0C2  F0BA         	movff	___lldiv@quotient,?___lldiv
 16732  01341A  C0C3  F0BB         	movff	___lldiv@quotient+1,?___lldiv+1
 16733  01341E  C0C4  F0BC         	movff	___lldiv@quotient+2,?___lldiv+2
 16734  013422  C0C5  F0BD         	movff	___lldiv@quotient+3,?___lldiv+3
 16735                           
 16736                           ; BSR set to: 0
 16737  013426  0012               	return		;funcret
 16738  013428                     __end_of___lldiv:
 16739                           	opt stack 0
 16740                           tosu	equ	0xFFF
 16741                           tosh	equ	0xFFE
 16742                           tosl	equ	0xFFD
 16743                           pclath	equ	0xFFA
 16744                           tblptru	equ	0xFF8
 16745                           tblptrh	equ	0xFF7
 16746                           tblptrl	equ	0xFF6
 16747                           tablat	equ	0xFF5
 16748                           prodh	equ	0xFF4
 16749                           prodl	equ	0xFF3
 16750                           intcon	equ	0xFF2
 16751                           postinc0	equ	0xFEE
 16752                           wreg	equ	0xFE8
 16753                           indf1	equ	0xFE7
 16754                           postdec1	equ	0xFE5
 16755                           fsr1h	equ	0xFE2
 16756                           fsr1l	equ	0xFE1
 16757                           indf2	equ	0xFDF
 16758                           postinc2	equ	0xFDE
 16759                           postdec2	equ	0xFDD
 16760                           plusw2	equ	0xFDB
 16761                           fsr2h	equ	0xFDA
 16762                           fsr2l	equ	0xFD9
 16763                           status	equ	0xFD8
 16764                           
 16765 ;; *************** function _Timer2_Clear *****************
 16766 ;; Defined at:
 16767 ;;		line 3 in file "Library/Timer2.c"
 16768 ;; Parameters:    Size  Location     Type
 16769 ;;		None
 16770 ;; Auto vars:     Size  Location     Type
 16771 ;;		None
 16772 ;; Return value:  Size  Location     Type
 16773 ;;                  1    wreg      void 
 16774 ;; Registers used:
 16775 ;;		None
 16776 ;; Tracked objects:
 16777 ;;		On entry : 0/0
 16778 ;;		On exit  : 0/0
 16779 ;;		Unchanged: 0/0
 16780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16785 ;;Total ram usage:        0 bytes
 16786 ;; Hardware stack levels used:    1
 16787 ;; Hardware stack levels required when called:    7
 16788 ;; This function calls:
 16789 ;;		Nothing
 16790 ;; This function is called by:
 16791 ;;		_Timer2_Init
 16792 ;; This function uses a non-reentrant model
 16793 ;;
 16794                           
 16795                           	psect	text71
 16796  014BB4                     __ptext71:
 16797                           	opt stack 0
 16798  014BB4                     _Timer2_Clear:
 16799                           	opt stack 18
 16800                           
 16801                           ;Timer2.c: 5: PIR1bits.TMR2IF = 0;
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;incstack = 0
 16805  014BB4  929E               	bcf	3998,1,c	;volatile
 16806                           
 16807                           ;Timer2.c: 6: PIE1bits.TMR2IE = 0;
 16808  014BB6  929D               	bcf	3997,1,c	;volatile
 16809                           
 16810                           ;Timer2.c: 7: IPR1bits.TMR2IP = 0;
 16811  014BB8  929F               	bcf	3999,1,c	;volatile
 16812  014BBA  0012               	return		;funcret
 16813  014BBC                     __end_of_Timer2_Clear:
 16814                           	opt stack 0
 16815                           tosu	equ	0xFFF
 16816                           tosh	equ	0xFFE
 16817                           tosl	equ	0xFFD
 16818                           pclath	equ	0xFFA
 16819                           tblptru	equ	0xFF8
 16820                           tblptrh	equ	0xFF7
 16821                           tblptrl	equ	0xFF6
 16822                           tablat	equ	0xFF5
 16823                           prodh	equ	0xFF4
 16824                           prodl	equ	0xFF3
 16825                           intcon	equ	0xFF2
 16826                           postinc0	equ	0xFEE
 16827                           wreg	equ	0xFE8
 16828                           indf1	equ	0xFE7
 16829                           postdec1	equ	0xFE5
 16830                           fsr1h	equ	0xFE2
 16831                           fsr1l	equ	0xFE1
 16832                           indf2	equ	0xFDF
 16833                           postinc2	equ	0xFDE
 16834                           postdec2	equ	0xFDD
 16835                           plusw2	equ	0xFDB
 16836                           fsr2h	equ	0xFDA
 16837                           fsr2l	equ	0xFD9
 16838                           status	equ	0xFD8
 16839                           
 16840 ;; *************** function _SPI_DisableISR *****************
 16841 ;; Defined at:
 16842 ;;		line 181 in file "Library/SPI.c"
 16843 ;; Parameters:    Size  Location     Type
 16844 ;;  pInput          2    0[BANK0 ] PTR struct SPI
 16845 ;;		 -> SPI1(11), SPI2(11), 
 16846 ;; Auto vars:     Size  Location     Type
 16847 ;;		None
 16848 ;; Return value:  Size  Location     Type
 16849 ;;                  1    wreg      void 
 16850 ;; Registers used:
 16851 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16852 ;; Tracked objects:
 16853 ;;		On entry : 0/0
 16854 ;;		On exit  : 0/0
 16855 ;;		Unchanged: 0/0
 16856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16857 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16861 ;;Total ram usage:        2 bytes
 16862 ;; Hardware stack levels used:    1
 16863 ;; Hardware stack levels required when called:    7
 16864 ;; This function calls:
 16865 ;;		Nothing
 16866 ;; This function is called by:
 16867 ;;		_SPI_Init
 16868 ;; This function uses a non-reentrant model
 16869 ;;
 16870                           
 16871                           	psect	text72
 16872  014916                     __ptext72:
 16873                           	opt stack 0
 16874  014916                     _SPI_DisableISR:
 16875                           	opt stack 19
 16876                           
 16877                           ;SPI.c: 183: switch (pInput->mChannel)
 16878                           
 16879                           ;incstack = 0
 16880  014916  D004               	goto	l654
 16881  014918                     l655:
 16882                           
 16883                           ; BSR set to: 0
 16884  014918  969D               	bcf	3997,3,c	;volatile
 16885  01491A  0012               	return	
 16886  01491C                     l657:
 16887                           
 16888                           ; BSR set to: 0
 16889  01491C  9EA3               	bcf	4003,7,c	;volatile
 16890                           
 16891                           ; BSR set to: 0
 16892                           ;SPI.c: 188: };
 16893                           
 16894                           ; BSR set to: 0
 16895                           
 16896                           ;SPI.c: 187: default: return;
 16897  01491E  0012               	return	
 16898  014920                     l654:
 16899                           
 16900                           ; BSR set to: 0
 16901  014920  0100               	movlb	0	; () banked
 16902  014922  EE20 F002          	lfsr	2,2
 16903  014926  51BA               	movf	SPI_DisableISR@pInput& (0+255),w,b
 16904  014928  26D9               	addwf	fsr2l,f,c
 16905  01492A  51BB               	movf	(SPI_DisableISR@pInput+1)& (0+255),w,b
 16906  01492C  22DA               	addwfc	fsr2h,f,c
 16907  01492E  50DF               	movf	indf2,w,c
 16908                           
 16909                           ; Switch size 1, requested type "space"
 16910                           ; Number of cases is 2, Range of values is 0 to 1
 16911                           ; switch strategies available:
 16912                           ; Name         Instructions Cycles
 16913                           ; simple_byte            7     4 (average)
 16914                           ;	Chosen strategy is simple_byte
 16915  014930  0A00               	xorlw	0	; case 0
 16916  014932  B4D8               	btfsc	status,2,c
 16917  014934  D7F1               	goto	l655
 16918  014936  0A01               	xorlw	1	; case 1
 16919  014938  A4D8               	btfss	status,2,c
 16920  01493A  0012               	return	
 16921  01493C  D7EF               	goto	l657
 16922  01493E                     __end_of_SPI_DisableISR:
 16923                           	opt stack 0
 16924                           tosu	equ	0xFFF
 16925                           tosh	equ	0xFFE
 16926                           tosl	equ	0xFFD
 16927                           pclath	equ	0xFFA
 16928                           tblptru	equ	0xFF8
 16929                           tblptrh	equ	0xFF7
 16930                           tblptrl	equ	0xFF6
 16931                           tablat	equ	0xFF5
 16932                           prodh	equ	0xFF4
 16933                           prodl	equ	0xFF3
 16934                           intcon	equ	0xFF2
 16935                           postinc0	equ	0xFEE
 16936                           wreg	equ	0xFE8
 16937                           indf1	equ	0xFE7
 16938                           postdec1	equ	0xFE5
 16939                           fsr1h	equ	0xFE2
 16940                           fsr1l	equ	0xFE1
 16941                           indf2	equ	0xFDF
 16942                           postinc2	equ	0xFDE
 16943                           postdec2	equ	0xFDD
 16944                           plusw2	equ	0xFDB
 16945                           fsr2h	equ	0xFDA
 16946                           fsr2l	equ	0xFD9
 16947                           status	equ	0xFD8
 16948                           
 16949 ;; *************** function _SPI_DCS *****************
 16950 ;; Defined at:
 16951 ;;		line 219 in file "Library/SPI.c"
 16952 ;; Parameters:    Size  Location     Type
 16953 ;;  pInput          2    0[BANK0 ] PTR struct SPI
 16954 ;;		 -> SPI1(11), SPI2(11), 
 16955 ;; Auto vars:     Size  Location     Type
 16956 ;;		None
 16957 ;; Return value:  Size  Location     Type
 16958 ;;                  1    wreg      void 
 16959 ;; Registers used:
 16960 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16961 ;; Tracked objects:
 16962 ;;		On entry : 0/0
 16963 ;;		On exit  : 0/0
 16964 ;;		Unchanged: 0/0
 16965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16966 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16969 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16970 ;;Total ram usage:        2 bytes
 16971 ;; Hardware stack levels used:    1
 16972 ;; Hardware stack levels required when called:    7
 16973 ;; This function calls:
 16974 ;;		Nothing
 16975 ;; This function is called by:
 16976 ;;		_SPI_Init
 16977 ;; This function uses a non-reentrant model
 16978 ;;
 16979                           
 16980                           	psect	text73
 16981  014832                     __ptext73:
 16982                           	opt stack 0
 16983  014832                     _SPI_DCS:
 16984                           	opt stack 19
 16985                           
 16986                           ;SPI.c: 221: if (pInput->mChannel == eSPI1)
 16987                           
 16988                           ; BSR set to: 0
 16989                           ;incstack = 0
 16990  014832  0100               	movlb	0	; () banked
 16991  014834  EE20 F002          	lfsr	2,2
 16992  014838  51BA               	movf	SPI_DCS@pInput& (0+255),w,b
 16993  01483A  26D9               	addwf	fsr2l,f,c
 16994  01483C  51BB               	movf	(SPI_DCS@pInput+1)& (0+255),w,b
 16995  01483E  22DA               	addwfc	fsr2h,f,c
 16996  014840  50DF               	movf	indf2,w,c
 16997  014842  A4D8               	btfss	status,2,c
 16998  014844  D007               	goto	l673
 16999                           
 17000                           ; BSR set to: 0
 17001                           ;SPI.c: 222: PortC.mOutput->mBit2 = 1;
 17002  014846  C0A8  FFD9         	movff	_PortC+4,fsr2l
 17003  01484A  C0A9  FFDA         	movff	_PortC+5,fsr2h
 17004  01484E  0100               	movlb	0	; () banked
 17005  014850  84DF               	bsf	indf2,2,c
 17006  014852  0012               	return	
 17007  014854                     l673:
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;SPI.c: 223: else
 17011                           ;SPI.c: 224: PortD.mOutput->mBit7 = 1;
 17012                           
 17013                           ; BSR set to: 0
 17014  014854  C09E  FFD9         	movff	_PortD+4,fsr2l
 17015  014858  C09F  FFDA         	movff	_PortD+5,fsr2h
 17016  01485C  0100               	movlb	0	; () banked
 17017  01485E  8EDF               	bsf	indf2,7,c
 17018  014860  0012               	return	
 17019  014862                     __end_of_SPI_DCS:
 17020                           	opt stack 0
 17021                           tosu	equ	0xFFF
 17022                           tosh	equ	0xFFE
 17023                           tosl	equ	0xFFD
 17024                           pclath	equ	0xFFA
 17025                           tblptru	equ	0xFF8
 17026                           tblptrh	equ	0xFF7
 17027                           tblptrl	equ	0xFF6
 17028                           tablat	equ	0xFF5
 17029                           prodh	equ	0xFF4
 17030                           prodl	equ	0xFF3
 17031                           intcon	equ	0xFF2
 17032                           postinc0	equ	0xFEE
 17033                           wreg	equ	0xFE8
 17034                           indf1	equ	0xFE7
 17035                           postdec1	equ	0xFE5
 17036                           fsr1h	equ	0xFE2
 17037                           fsr1l	equ	0xFE1
 17038                           indf2	equ	0xFDF
 17039                           postinc2	equ	0xFDE
 17040                           postdec2	equ	0xFDD
 17041                           plusw2	equ	0xFDB
 17042                           fsr2h	equ	0xFDA
 17043                           fsr2l	equ	0xFD9
 17044                           status	equ	0xFD8
 17045                           
 17046 ;; *************** function _Button_Init *****************
 17047 ;; Defined at:
 17048 ;;		line 18 in file "Library/Button.c"
 17049 ;; Parameters:    Size  Location     Type
 17050 ;;  pInput          2    0[BANK2 ] const PTR struct Button
 17051 ;;		 -> DIPSwitch(10), TestButton(10), HMIBoard(58), 
 17052 ;;  pThreshold      2    2[BANK2 ] unsigned short 
 17053 ;;  pInitIO         3    4[BANK2 ] PTR FTN()void 
 17054 ;;		 -> MXK_InitDIPSwitch(1), MXK_InitTestButton(1), HMI_InitButtons(1), 
 17055 ;;  pGetState       3    7[BANK2 ] PTR FTN()unsigned char 
 17056 ;;		 -> MXK_DIPSwitch(1), MXK_TestButton(1), HMI_DIPSwitch(1), HMI_DownSwitch(1), 
 17057 ;;		 -> HMI_UpSwitch(1), HMI_RightSwitch(1), HMI_LeftSwitch(1), 
 17058 ;;  pFunction       3   10[BANK2 ] PTR FTN(unsigned char ,)
 17059 ;;		 -> Event_TestButton(1), Event_DIPSwitch(1), Event_NULL(1), 
 17060 ;; Auto vars:     Size  Location     Type
 17061 ;;		None
 17062 ;; Return value:  Size  Location     Type
 17063 ;;                  1    wreg      void 
 17064 ;; Registers used:
 17065 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17066 ;; Tracked objects:
 17067 ;;		On entry : 0/0
 17068 ;;		On exit  : 0/0
 17069 ;;		Unchanged: 0/0
 17070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17071 ;;      Params:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17074 ;;      Totals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17075 ;;Total ram usage:       13 bytes
 17076 ;; Hardware stack levels used:    1
 17077 ;; Hardware stack levels required when called:   15
 17078 ;; This function calls:
 17079 ;;		_HMI_InitButtons
 17080 ;;		_MXK_InitDIPSwitch
 17081 ;;		_MXK_InitTestButton
 17082 ;; This function is called by:
 17083 ;;		_HMI_Init
 17084 ;;		_FunctInitButton
 17085 ;; This function uses a non-reentrant model
 17086 ;;
 17087                           
 17088                           	psect	text74
 17089  013050                     __ptext74:
 17090                           	opt stack 0
 17091  013050                     _Button_Init:
 17092                           	opt stack 13
 17093                           
 17094                           ;Button.c: 21: if(pInput==(void*)0)
 17095                           
 17096                           ; BSR set to: 0
 17097                           ;incstack = 0
 17098  013050  0102               	movlb	2	; () banked
 17099  013052  51AA               	movf	Button_Init@pInput& (0+255),w,b
 17100  013054  0102               	movlb	2	; () banked
 17101  013056  11AB               	iorwf	(Button_Init@pInput+1)& (0+255),w,b
 17102  013058  B4D8               	btfsc	status,2,c
 17103  01305A  0012               	return	
 17104                           
 17105                           ; BSR set to: 2
 17106                           ;Button.c: 23: if(pInitIO==(void*)0)
 17107                           
 17108                           ; BSR set to: 2
 17109                           
 17110                           ; BSR set to: 2
 17111                           ;Button.c: 22: return;
 17112  01305C  0102               	movlb	2	; () banked
 17113  01305E  51AE               	movf	Button_Init@pInitIO& (0+255),w,b
 17114  013060  0102               	movlb	2	; () banked
 17115  013062  11AF               	iorwf	(Button_Init@pInitIO+1)& (0+255),w,b
 17116  013064  0102               	movlb	2	; () banked
 17117  013066  11B0               	iorwf	(Button_Init@pInitIO+2)& (0+255),w,b
 17118  013068  B4D8               	btfsc	status,2,c
 17119  01306A  0012               	return	
 17120                           
 17121                           ; BSR set to: 2
 17122                           ;Button.c: 25: if(pGetState==(void*)0)
 17123                           
 17124                           ; BSR set to: 2
 17125                           
 17126                           ; BSR set to: 2
 17127                           ;Button.c: 24: return;
 17128  01306C  0102               	movlb	2	; () banked
 17129  01306E  51B1               	movf	Button_Init@pGetState& (0+255),w,b
 17130  013070  0102               	movlb	2	; () banked
 17131  013072  11B2               	iorwf	(Button_Init@pGetState+1)& (0+255),w,b
 17132  013074  0102               	movlb	2	; () banked
 17133  013076  11B3               	iorwf	(Button_Init@pGetState+2)& (0+255),w,b
 17134  013078  B4D8               	btfsc	status,2,c
 17135  01307A  0012               	return	
 17136                           
 17137                           ; BSR set to: 2
 17138                           ;Button.c: 27: if(pFunction==(void*)0)
 17139                           
 17140                           ; BSR set to: 2
 17141                           
 17142                           ; BSR set to: 2
 17143                           ;Button.c: 26: return;
 17144  01307C  0102               	movlb	2	; () banked
 17145  01307E  51B4               	movf	Button_Init@pFunction& (0+255),w,b
 17146  013080  0102               	movlb	2	; () banked
 17147  013082  11B5               	iorwf	(Button_Init@pFunction+1)& (0+255),w,b
 17148  013084  0102               	movlb	2	; () banked
 17149  013086  11B6               	iorwf	(Button_Init@pFunction+2)& (0+255),w,b
 17150  013088  B4D8               	btfsc	status,2,c
 17151  01308A  0012               	return	
 17152                           
 17153                           ; BSR set to: 2
 17154                           ;Button.c: 30: if(pThreshold == 0)
 17155                           
 17156                           ; BSR set to: 2
 17157                           
 17158                           ; BSR set to: 2
 17159                           ;Button.c: 28: return;
 17160  01308C  0102               	movlb	2	; () banked
 17161  01308E  51AC               	movf	Button_Init@pThreshold& (0+255),w,b
 17162  013090  0102               	movlb	2	; () banked
 17163  013092  11AD               	iorwf	(Button_Init@pThreshold+1)& (0+255),w,b
 17164  013094  A4D8               	btfss	status,2,c
 17165  013096  D005               	goto	l8
 17166                           
 17167                           ; BSR set to: 2
 17168                           ;Button.c: 31: pThreshold = 1;
 17169  013098  0E00               	movlw	0
 17170  01309A  0102               	movlb	2	; () banked
 17171  01309C  6FAD               	movwf	(Button_Init@pThreshold+1)& (0+255),b
 17172  01309E  0E01               	movlw	1
 17173  0130A0  6FAC               	movwf	Button_Init@pThreshold& (0+255),b
 17174  0130A2                     l8:
 17175                           
 17176                           ; BSR set to: 2
 17177                           ;Button.c: 34: pInput->mState = 0;
 17178                           
 17179                           ; BSR set to: 2
 17180  0130A2  C2AA  FFD9         	movff	Button_Init@pInput,fsr2l
 17181  0130A6  C2AB  FFDA         	movff	Button_Init@pInput+1,fsr2h
 17182  0130AA  0E00               	movlw	0
 17183  0130AC  6EDF               	movwf	indf2,c
 17184                           
 17185                           ; BSR set to: 2
 17186                           ;Button.c: 35: pInput->mCount = 0;
 17187  0130AE  0102               	movlb	2	; () banked
 17188  0130B0  EE20 F001          	lfsr	2,1
 17189  0130B4  51AA               	movf	Button_Init@pInput& (0+255),w,b
 17190  0130B6  26D9               	addwf	fsr2l,f,c
 17191  0130B8  51AB               	movf	(Button_Init@pInput+1)& (0+255),w,b
 17192  0130BA  22DA               	addwfc	fsr2h,f,c
 17193  0130BC  0E00               	movlw	0
 17194  0130BE  6EDF               	movwf	indf2,c
 17195                           
 17196                           ; BSR set to: 2
 17197                           ;Button.c: 36: pInput->mThreshold = pThreshold;
 17198  0130C0  0102               	movlb	2	; () banked
 17199  0130C2  EE20 F002          	lfsr	2,2
 17200  0130C6  51AA               	movf	Button_Init@pInput& (0+255),w,b
 17201  0130C8  26D9               	addwf	fsr2l,f,c
 17202  0130CA  51AB               	movf	(Button_Init@pInput+1)& (0+255),w,b
 17203  0130CC  22DA               	addwfc	fsr2h,f,c
 17204  0130CE  C2AC  FFDE         	movff	Button_Init@pThreshold,postinc2
 17205  0130D2  C2AD  FFDD         	movff	Button_Init@pThreshold+1,postdec2
 17206                           
 17207                           ; BSR set to: 2
 17208                           ;Button.c: 37: pInput->mFunction = pFunction;
 17209  0130D6  0102               	movlb	2	; () banked
 17210  0130D8  EE20 F004          	lfsr	2,4
 17211  0130DC  51AA               	movf	Button_Init@pInput& (0+255),w,b
 17212  0130DE  26D9               	addwf	fsr2l,f,c
 17213  0130E0  51AB               	movf	(Button_Init@pInput+1)& (0+255),w,b
 17214  0130E2  22DA               	addwfc	fsr2h,f,c
 17215  0130E4  C2B4  FFDE         	movff	Button_Init@pFunction,postinc2
 17216  0130E8  C2B5  FFDE         	movff	Button_Init@pFunction+1,postinc2
 17217  0130EC  C2B6  FFDE         	movff	Button_Init@pFunction+2,postinc2
 17218                           
 17219                           ; BSR set to: 2
 17220                           ;Button.c: 38: pInput->mGetState = pGetState;
 17221  0130F0  0102               	movlb	2	; () banked
 17222  0130F2  EE20 F007          	lfsr	2,7
 17223  0130F6  51AA               	movf	Button_Init@pInput& (0+255),w,b
 17224  0130F8  26D9               	addwf	fsr2l,f,c
 17225  0130FA  51AB               	movf	(Button_Init@pInput+1)& (0+255),w,b
 17226  0130FC  22DA               	addwfc	fsr2h,f,c
 17227  0130FE  C2B1  FFDE         	movff	Button_Init@pGetState,postinc2
 17228  013102  C2B2  FFDE         	movff	Button_Init@pGetState+1,postinc2
 17229  013106  C2B3  FFDE         	movff	Button_Init@pGetState+2,postinc2
 17230                           
 17231                           ; BSR set to: 2
 17232                           ;Button.c: 41: pInitIO();
 17233  01310A  D801               	call	u10178
 17234  01310C  0012               	return	
 17235  01310E                     u10178:
 17236  01310E  0005               	push	
 17237  013110  6EFA               	movwf	pclath,c
 17238  013112  0102               	movlb	2	; () banked
 17239  013114  51AE               	movf	Button_Init@pInitIO& (0+255),w,b
 17240  013116  6EFD               	movwf	tosl,c
 17241  013118  51AF               	movf	(Button_Init@pInitIO+1)& (0+255),w,b
 17242  01311A  6EFE               	movwf	tosh,c
 17243  01311C  51B0               	movf	(Button_Init@pInitIO+2)& (0+255),w,b
 17244  01311E  6EFF               	movwf	tosu,c
 17245  013120  50FA               	movf	pclath,w,c
 17246  013122  0012               	return		;indir
 17247  013124                     __end_of_Button_Init:
 17248                           	opt stack 0
 17249                           tosu	equ	0xFFF
 17250                           tosh	equ	0xFFE
 17251                           tosl	equ	0xFFD
 17252                           pclath	equ	0xFFA
 17253                           tblptru	equ	0xFF8
 17254                           tblptrh	equ	0xFF7
 17255                           tblptrl	equ	0xFF6
 17256                           tablat	equ	0xFF5
 17257                           prodh	equ	0xFF4
 17258                           prodl	equ	0xFF3
 17259                           intcon	equ	0xFF2
 17260                           postinc0	equ	0xFEE
 17261                           wreg	equ	0xFE8
 17262                           indf1	equ	0xFE7
 17263                           postdec1	equ	0xFE5
 17264                           fsr1h	equ	0xFE2
 17265                           fsr1l	equ	0xFE1
 17266                           indf2	equ	0xFDF
 17267                           postinc2	equ	0xFDE
 17268                           postdec2	equ	0xFDD
 17269                           plusw2	equ	0xFDB
 17270                           fsr2h	equ	0xFDA
 17271                           fsr2l	equ	0xFD9
 17272                           status	equ	0xFD8
 17273                           
 17274 ;; *************** function _MXK_InitDIPSwitch *****************
 17275 ;; Defined at:
 17276 ;;		line 20 in file "Library/MXK.c"
 17277 ;; Parameters:    Size  Location     Type
 17278 ;;		None
 17279 ;; Auto vars:     Size  Location     Type
 17280 ;;		None
 17281 ;; Return value:  Size  Location     Type
 17282 ;;                  1    wreg      void 
 17283 ;; Registers used:
 17284 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17285 ;; Tracked objects:
 17286 ;;		On entry : 0/0
 17287 ;;		On exit  : 0/0
 17288 ;;		Unchanged: 0/0
 17289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17294 ;;Total ram usage:        0 bytes
 17295 ;; Hardware stack levels used:    1
 17296 ;; Hardware stack levels required when called:   14
 17297 ;; This function calls:
 17298 ;;		_Port_SetQuadType
 17299 ;; This function is called by:
 17300 ;;		_FunctInitButton
 17301 ;;		_Button_Init
 17302 ;; This function uses a non-reentrant model
 17303 ;;
 17304                           
 17305                           	psect	text75
 17306  014A3C                     __ptext75:
 17307                           	opt stack 0
 17308  014A3C                     _MXK_InitDIPSwitch:
 17309                           	opt stack 13
 17310                           
 17311                           ;MXK.c: 22: Port_SetQuadType(&PortD, eP0_3, eTypeInput);
 17312                           
 17313                           ;incstack = 0
 17314  014A3C  0E9A               	movlw	low _PortD
 17315  014A3E  0100               	movlb	0	; () banked
 17316  014A40  6FF0               	movwf	Port_SetQuadType@pInput& (0+255),b
 17317  014A42  0E00               	movlw	high _PortD
 17318  014A44  0100               	movlb	0	; () banked
 17319  014A46  6FF1               	movwf	(Port_SetQuadType@pInput+1)& (0+255),b
 17320  014A48  0E00               	movlw	0
 17321  014A4A  0100               	movlb	0	; () banked
 17322  014A4C  6FF2               	movwf	Port_SetQuadType@pQuad& (0+255),b
 17323  014A4E  0E00               	movlw	0
 17324  014A50  0100               	movlb	0	; () banked
 17325  014A52  6FF3               	movwf	Port_SetQuadType@pType& (0+255),b
 17326  014A54  ECB5  F08B         	call	_Port_SetQuadType	;wreg free
 17327  014A58  0012               	return		;funcret
 17328  014A5A                     __end_of_MXK_InitDIPSwitch:
 17329                           	opt stack 0
 17330                           tosu	equ	0xFFF
 17331                           tosh	equ	0xFFE
 17332                           tosl	equ	0xFFD
 17333                           pclath	equ	0xFFA
 17334                           tblptru	equ	0xFF8
 17335                           tblptrh	equ	0xFF7
 17336                           tblptrl	equ	0xFF6
 17337                           tablat	equ	0xFF5
 17338                           prodh	equ	0xFF4
 17339                           prodl	equ	0xFF3
 17340                           intcon	equ	0xFF2
 17341                           postinc0	equ	0xFEE
 17342                           wreg	equ	0xFE8
 17343                           indf1	equ	0xFE7
 17344                           postdec1	equ	0xFE5
 17345                           fsr1h	equ	0xFE2
 17346                           fsr1l	equ	0xFE1
 17347                           indf2	equ	0xFDF
 17348                           postinc2	equ	0xFDE
 17349                           postdec2	equ	0xFDD
 17350                           plusw2	equ	0xFDB
 17351                           fsr2h	equ	0xFDA
 17352                           fsr2l	equ	0xFD9
 17353                           status	equ	0xFD8
 17354                           
 17355 ;; *************** function _HMI_InitButtons *****************
 17356 ;; Defined at:
 17357 ;;		line 21 in file "HMI.c"
 17358 ;; Parameters:    Size  Location     Type
 17359 ;;		None
 17360 ;; Auto vars:     Size  Location     Type
 17361 ;;		None
 17362 ;; Return value:  Size  Location     Type
 17363 ;;                  1    wreg      void 
 17364 ;; Registers used:
 17365 ;;		wreg, status,2
 17366 ;; Tracked objects:
 17367 ;;		On entry : 0/0
 17368 ;;		On exit  : 0/0
 17369 ;;		Unchanged: 0/0
 17370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17375 ;;Total ram usage:        0 bytes
 17376 ;; Hardware stack levels used:    1
 17377 ;; Hardware stack levels required when called:    7
 17378 ;; This function calls:
 17379 ;;		Nothing
 17380 ;; This function is called by:
 17381 ;;		_HMI_Init
 17382 ;;		_Button_Init
 17383 ;; This function uses a non-reentrant model
 17384 ;;
 17385                           
 17386                           	psect	text76
 17387  014BD0                     __ptext76:
 17388                           	opt stack 0
 17389  014BD0                     _HMI_InitButtons:
 17390                           	opt stack 20
 17391                           
 17392                           ;HMI.c: 23: TRISE = 0xFC;
 17393                           
 17394                           ;incstack = 0
 17395  014BD0  0EFC               	movlw	252
 17396  014BD2  6E96               	movwf	3990,c	;volatile
 17397  014BD4  0012               	return		;funcret
 17398  014BD6                     __end_of_HMI_InitButtons:
 17399                           	opt stack 0
 17400                           tosu	equ	0xFFF
 17401                           tosh	equ	0xFFE
 17402                           tosl	equ	0xFFD
 17403                           pclath	equ	0xFFA
 17404                           tblptru	equ	0xFF8
 17405                           tblptrh	equ	0xFF7
 17406                           tblptrl	equ	0xFF6
 17407                           tablat	equ	0xFF5
 17408                           prodh	equ	0xFF4
 17409                           prodl	equ	0xFF3
 17410                           intcon	equ	0xFF2
 17411                           postinc0	equ	0xFEE
 17412                           wreg	equ	0xFE8
 17413                           indf1	equ	0xFE7
 17414                           postdec1	equ	0xFE5
 17415                           fsr1h	equ	0xFE2
 17416                           fsr1l	equ	0xFE1
 17417                           indf2	equ	0xFDF
 17418                           postinc2	equ	0xFDE
 17419                           postdec2	equ	0xFDD
 17420                           plusw2	equ	0xFDB
 17421                           fsr2h	equ	0xFDA
 17422                           fsr2l	equ	0xFD9
 17423                           status	equ	0xFD8
 17424                           
 17425 ;; *************** function _MXK_InitTestButton *****************
 17426 ;; Defined at:
 17427 ;;		line 10 in file "Library/MXK.c"
 17428 ;; Parameters:    Size  Location     Type
 17429 ;;		None
 17430 ;; Auto vars:     Size  Location     Type
 17431 ;;		None
 17432 ;; Return value:  Size  Location     Type
 17433 ;;                  1    wreg      void 
 17434 ;; Registers used:
 17435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17436 ;; Tracked objects:
 17437 ;;		On entry : 0/0
 17438 ;;		On exit  : 0/0
 17439 ;;		Unchanged: 0/0
 17440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17444 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17445 ;;Total ram usage:        0 bytes
 17446 ;; Hardware stack levels used:    1
 17447 ;; Hardware stack levels required when called:   12
 17448 ;; This function calls:
 17449 ;;		_Port_SetPinType
 17450 ;; This function is called by:
 17451 ;;		_FunctInitButton
 17452 ;;		_Button_Init
 17453 ;; This function uses a non-reentrant model
 17454 ;;
 17455                           
 17456                           	psect	text77
 17457  014A5A                     __ptext77:
 17458                           	opt stack 0
 17459  014A5A                     _MXK_InitTestButton:
 17460                           	opt stack 15
 17461                           
 17462                           ;MXK.c: 12: Port_SetPinType(&PortB, eP4, eTypeInput);
 17463                           
 17464                           ;incstack = 0
 17465  014A5A  0EAE               	movlw	low _PortB
 17466  014A5C  0100               	movlb	0	; () banked
 17467  014A5E  6FE0               	movwf	Port_SetPinType@pInput& (0+255),b
 17468  014A60  0E01               	movlw	high _PortB
 17469  014A62  0100               	movlb	0	; () banked
 17470  014A64  6FE1               	movwf	(Port_SetPinType@pInput+1)& (0+255),b
 17471  014A66  0E04               	movlw	4
 17472  014A68  0100               	movlb	0	; () banked
 17473  014A6A  6FE2               	movwf	Port_SetPinType@pPin& (0+255),b
 17474  014A6C  0E00               	movlw	0
 17475  014A6E  0100               	movlb	0	; () banked
 17476  014A70  6FE3               	movwf	Port_SetPinType@pType& (0+255),b
 17477  014A72  ECD9  F08F         	call	_Port_SetPinType	;wreg free
 17478  014A76  0012               	return		;funcret
 17479  014A78                     __end_of_MXK_InitTestButton:
 17480                           	opt stack 0
 17481                           tosu	equ	0xFFF
 17482                           tosh	equ	0xFFE
 17483                           tosl	equ	0xFFD
 17484                           pclath	equ	0xFFA
 17485                           tblptru	equ	0xFF8
 17486                           tblptrh	equ	0xFF7
 17487                           tblptrl	equ	0xFF6
 17488                           tablat	equ	0xFF5
 17489                           prodh	equ	0xFF4
 17490                           prodl	equ	0xFF3
 17491                           intcon	equ	0xFF2
 17492                           postinc0	equ	0xFEE
 17493                           wreg	equ	0xFE8
 17494                           indf1	equ	0xFE7
 17495                           postdec1	equ	0xFE5
 17496                           fsr1h	equ	0xFE2
 17497                           fsr1l	equ	0xFE1
 17498                           indf2	equ	0xFDF
 17499                           postinc2	equ	0xFDE
 17500                           postdec2	equ	0xFDD
 17501                           plusw2	equ	0xFDB
 17502                           fsr2h	equ	0xFDA
 17503                           fsr2l	equ	0xFD9
 17504                           status	equ	0xFD8
 17505                           
 17506 ;; *************** function _Port_SetPinType *****************
 17507 ;; Defined at:
 17508 ;;		line 189 in file "Library/Port.c"
 17509 ;; Parameters:    Size  Location     Type
 17510 ;;  pInput          2   38[BANK0 ] const PTR struct Port
 17511 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
 17512 ;;		 -> PortD(10), PortC(10), PortF(10), 
 17513 ;;  pPin            1   40[BANK0 ] enum E6750
 17514 ;;  pType           1   41[BANK0 ] enum E6795
 17515 ;; Auto vars:     Size  Location     Type
 17516 ;;  Props           2   43[BANK0 ] PTR struct PortProperty
 17517 ;;		 -> PortG_Property(2), PortF_Property(2), PortE_Property(2), PortD_Property(2), 
 17518 ;;		 -> PortC_Property(2), PortB_Property(2), PortA_Property(2), NULL(0), 
 17519 ;;  Output          1   42[BANK0 ] enum E6475
 17520 ;; Return value:  Size  Location     Type
 17521 ;;                  1    wreg      enum E6475
 17522 ;; Registers used:
 17523 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17524 ;; Tracked objects:
 17525 ;;		On entry : 0/0
 17526 ;;		On exit  : 0/0
 17527 ;;		Unchanged: 0/0
 17528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17529 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17530 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17532 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17533 ;;Total ram usage:        7 bytes
 17534 ;; Hardware stack levels used:    1
 17535 ;; Hardware stack levels required when called:   11
 17536 ;; This function calls:
 17537 ;;		_Byte_SetBit
 17538 ;;		_PortProperty_Valid
 17539 ;;		_Word_SetPair
 17540 ;; This function is called by:
 17541 ;;		_Configure_GPIOs
 17542 ;;		_LED_Init
 17543 ;;		_Port_Init
 17544 ;;		_SPI_Init
 17545 ;;		_Motor_Init
 17546 ;;		_MXK_InitTestButton
 17547 ;;		_MXK_Init
 17548 ;;		_I2C_Init
 17549 ;; This function uses a non-reentrant model
 17550 ;;
 17551                           
 17552                           	psect	text78
 17553  011FB2                     __ptext78:
 17554                           	opt stack 0
 17555  011FB2                     _Port_SetPinType:
 17556                           	opt stack 17
 17557                           
 17558                           ;Port.c: 191: PortProperty * Props = pInput->mProperties;
 17559                           
 17560                           ;incstack = 0
 17561  011FB2  C0E0  FFD9         	movff	Port_SetPinType@pInput,fsr2l
 17562  011FB6  C0E1  FFDA         	movff	Port_SetPinType@pInput+1,fsr2h
 17563  011FBA  CFDE F0E5          	movff	postinc2,Port_SetPinType@Props
 17564  011FBE  CFDD F0E6          	movff	postdec2,Port_SetPinType@Props+1
 17565                           
 17566                           ;Port.c: 192: ePinError Output = ePinErrorState;
 17567  011FC2  0E05               	movlw	5
 17568  011FC4  0100               	movlb	0	; () banked
 17569  011FC6  6FE4               	movwf	Port_SetPinType@Output& (0+255),b
 17570                           
 17571                           ;Port.c: 193: switch (pType)
 17572  011FC8  D0B5               	goto	l412
 17573  011FCA                     
 17574                           ; BSR set to: 0
 17575                           ;Port.c: 197: {
 17576                           ;Port.c: 199: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)1);
 17577                           
 17578                           ; BSR set to: 0
 17579  011FCA  0100               	movlb	0	; () banked
 17580  011FCC  EE20 F002          	lfsr	2,2
 17581  011FD0  51E0               	movf	Port_SetPinType@pInput& (0+255),w,b
 17582  011FD2  26D9               	addwf	fsr2l,f,c
 17583  011FD4  51E1               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
 17584  011FD6  22DA               	addwfc	fsr2h,f,c
 17585  011FD8  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 17586  011FDC  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 17587  011FE0  C0E2  F0BC         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
 17588  011FE4  0E01               	movlw	1
 17589  011FE6  0100               	movlb	0	; () banked
 17590  011FE8  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 17591  011FEA  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 17592                           
 17593                           ;Port.c: 203: break;
 17594  011FEE  D0B0               	goto	l414
 17595  011FF0                     
 17596                           ;Port.c: 207: if ((Output = PortProperty_Valid(Props, eLow, pPin)) == ePinErrorNone)
 17597  011FF0  C0E5  F0C9         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
 17598  011FF4  C0E6  F0CA         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
 17599  011FF8  0E01               	movlw	1
 17600  011FFA  0100               	movlb	0	; () banked
 17601  011FFC  6FCB               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
 17602  011FFE  C0E2  F0CC         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
 17603  012002  EC5D  F09E         	call	_PortProperty_Valid	;wreg free
 17604  012006  0100               	movlb	0	; () banked
 17605  012008  6FE4               	movwf	Port_SetPinType@Output& (0+255),b
 17606  01200A  0100               	movlb	0	; () banked
 17607  01200C  51E4               	movf	Port_SetPinType@Output& (0+255),w,b
 17608  01200E  A4D8               	btfss	status,2,c
 17609  012010  0012               	return	
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;Port.c: 208: {
 17613                           ;Port.c: 210: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)0);
 17614  012012  0100               	movlb	0	; () banked
 17615  012014  EE20 F002          	lfsr	2,2
 17616  012018  51E0               	movf	Port_SetPinType@pInput& (0+255),w,b
 17617  01201A  26D9               	addwf	fsr2l,f,c
 17618  01201C  51E1               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
 17619  01201E  22DA               	addwfc	fsr2h,f,c
 17620  012020  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 17621  012024  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 17622  012028  C0E2  F0BC         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
 17623  01202C  0E00               	movlw	0
 17624  01202E  0100               	movlb	0	; () banked
 17625  012030  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 17626  012032  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 17627                           
 17628                           ;Port.c: 213: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 0);
 17629  012036  0100               	movlb	0	; () banked
 17630  012038  EE20 F004          	lfsr	2,4
 17631  01203C  51E0               	movf	Port_SetPinType@pInput& (0+255),w,b
 17632  01203E  26D9               	addwf	fsr2l,f,c
 17633  012040  51E1               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
 17634  012042  22DA               	addwfc	fsr2h,f,c
 17635  012044  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 17636  012048  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 17637  01204C  C0E2  F0BC         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
 17638  012050  0E00               	movlw	0
 17639  012052  0100               	movlb	0	; () banked
 17640  012054  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 17641  012056  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 17642                           
 17643                           ;Port.c: 214: break;
 17644  01205A  D07A               	goto	l414
 17645  01205C                     
 17646                           ;Port.c: 219: if ((Output = PortProperty_Valid(Props, eHigh, pPin)) == ePinErrorNone)
 17647                           
 17648                           ;Port.c: 218: case eTypeOutputOpenSource:
 17649  01205C  C0E5  F0C9         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
 17650  012060  C0E6  F0CA         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
 17651  012064  0E02               	movlw	2
 17652  012066  0100               	movlb	0	; () banked
 17653  012068  6FCB               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
 17654  01206A  C0E2  F0CC         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
 17655  01206E  EC5D  F09E         	call	_PortProperty_Valid	;wreg free
 17656  012072  0100               	movlb	0	; () banked
 17657  012074  6FE4               	movwf	Port_SetPinType@Output& (0+255),b
 17658  012076  0100               	movlb	0	; () banked
 17659  012078  51E4               	movf	Port_SetPinType@Output& (0+255),w,b
 17660  01207A  A4D8               	btfss	status,2,c
 17661  01207C  0012               	return	
 17662                           
 17663                           ; BSR set to: 0
 17664                           ;Port.c: 220: {
 17665                           ;Port.c: 222: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)1);
 17666  01207E  0100               	movlb	0	; () banked
 17667  012080  EE20 F002          	lfsr	2,2
 17668  012084  51E0               	movf	Port_SetPinType@pInput& (0+255),w,b
 17669  012086  26D9               	addwf	fsr2l,f,c
 17670  012088  51E1               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
 17671  01208A  22DA               	addwfc	fsr2h,f,c
 17672  01208C  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 17673  012090  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 17674  012094  C0E2  F0BC         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
 17675  012098  0E01               	movlw	1
 17676  01209A  0100               	movlb	0	; () banked
 17677  01209C  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 17678  01209E  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 17679                           
 17680                           ;Port.c: 225: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 1);
 17681  0120A2  0100               	movlb	0	; () banked
 17682  0120A4  EE20 F004          	lfsr	2,4
 17683  0120A8  51E0               	movf	Port_SetPinType@pInput& (0+255),w,b
 17684  0120AA  26D9               	addwf	fsr2l,f,c
 17685  0120AC  51E1               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
 17686  0120AE  22DA               	addwfc	fsr2h,f,c
 17687  0120B0  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 17688  0120B4  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 17689  0120B8  C0E2  F0BC         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
 17690  0120BC  0E01               	movlw	1
 17691  0120BE  0100               	movlb	0	; () banked
 17692  0120C0  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 17693  0120C2  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 17694                           
 17695                           ;Port.c: 226: break;
 17696  0120C6  D044               	goto	l414
 17697  0120C8                     
 17698                           ;Port.c: 231: if ((Output = PortProperty_Valid(Props, eHL, pPin)) == ePinErrorNone)
 17699                           
 17700                           ;Port.c: 230: case eTypeOutputPushPull:
 17701  0120C8  C0E5  F0C9         	movff	Port_SetPinType@Props,PortProperty_Valid@pInput
 17702  0120CC  C0E6  F0CA         	movff	Port_SetPinType@Props+1,PortProperty_Valid@pInput+1
 17703  0120D0  0E00               	movlw	0
 17704  0120D2  0100               	movlb	0	; () banked
 17705  0120D4  6FCB               	movwf	PortProperty_Valid@pPinDrive& (0+255),b
 17706  0120D6  C0E2  F0CC         	movff	Port_SetPinType@pPin,PortProperty_Valid@pPin
 17707  0120DA  EC5D  F09E         	call	_PortProperty_Valid	;wreg free
 17708  0120DE  0100               	movlb	0	; () banked
 17709  0120E0  6FE4               	movwf	Port_SetPinType@Output& (0+255),b
 17710  0120E2  0100               	movlb	0	; () banked
 17711  0120E4  51E4               	movf	Port_SetPinType@Output& (0+255),w,b
 17712  0120E6  A4D8               	btfss	status,2,c
 17713  0120E8  0012               	return	
 17714                           
 17715                           ; BSR set to: 0
 17716                           ;Port.c: 232: {
 17717                           ;Port.c: 234: Byte_SetBit(pInput->mDirection, (UINT8)pPin, (UINT8)0);
 17718  0120EA  0100               	movlb	0	; () banked
 17719  0120EC  EE20 F002          	lfsr	2,2
 17720  0120F0  51E0               	movf	Port_SetPinType@pInput& (0+255),w,b
 17721  0120F2  26D9               	addwf	fsr2l,f,c
 17722  0120F4  51E1               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
 17723  0120F6  22DA               	addwfc	fsr2h,f,c
 17724  0120F8  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 17725  0120FC  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 17726  012100  C0E2  F0BC         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
 17727  012104  0E00               	movlw	0
 17728  012106  0100               	movlb	0	; () banked
 17729  012108  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 17730  01210A  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 17731                           
 17732                           ;Port.c: 237: Byte_SetBit(pInput->mOutput, (UINT8)pPin, 0);
 17733  01210E  0100               	movlb	0	; () banked
 17734  012110  EE20 F004          	lfsr	2,4
 17735  012114  51E0               	movf	Port_SetPinType@pInput& (0+255),w,b
 17736  012116  26D9               	addwf	fsr2l,f,c
 17737  012118  51E1               	movf	(Port_SetPinType@pInput+1)& (0+255),w,b
 17738  01211A  22DA               	addwfc	fsr2h,f,c
 17739  01211C  CFDE F0BA          	movff	postinc2,Byte_SetBit@pInput
 17740  012120  CFDD F0BB          	movff	postdec2,Byte_SetBit@pInput+1
 17741  012124  C0E2  F0BC         	movff	Port_SetPinType@pPin,Byte_SetBit@pBit
 17742  012128  0E00               	movlw	0
 17743  01212A  0100               	movlb	0	; () banked
 17744  01212C  6FBD               	movwf	Byte_SetBit@pValue& (0+255),b
 17745  01212E  ECD2  F0A0         	call	_Byte_SetBit	;wreg free
 17746                           
 17747                           ;Port.c: 239: }
 17748                           
 17749                           ;Port.c: 238: break;
 17750  012132  D00E               	goto	l414
 17751  012134                     l412:
 17752  012134  0100               	movlb	0	; () banked
 17753  012136  51E3               	movf	Port_SetPinType@pType& (0+255),w,b
 17754                           
 17755                           ; Switch size 1, requested type "space"
 17756                           ; Number of cases is 4, Range of values is 0 to 3
 17757                           ; switch strategies available:
 17758                           ; Name         Instructions Cycles
 17759                           ; simple_byte           13     7 (average)
 17760                           ;	Chosen strategy is simple_byte
 17761  012138  0A00               	xorlw	0	; case 0
 17762  01213A  B4D8               	btfsc	status,2,c
 17763  01213C  D746               	goto	l413
 17764  01213E  0A01               	xorlw	1	; case 1
 17765  012140  B4D8               	btfsc	status,2,c
 17766  012142  D756               	goto	l415
 17767  012144  0A03               	xorlw	3	; case 2
 17768  012146  B4D8               	btfsc	status,2,c
 17769  012148  D789               	goto	l417
 17770  01214A  0A01               	xorlw	1	; case 3
 17771  01214C  B4D8               	btfsc	status,2,c
 17772  01214E  D7BC               	goto	l421
 17773  012150                     l414:
 17774                           
 17775                           ;Port.c: 244: Word_SetPair(&pInput->mType, (UINT8)pPin, (UINT8)pType);
 17776                           
 17777                           ; BSR set to: 0
 17778  012150  0E08               	movlw	8
 17779  012152  0100               	movlb	0	; () banked
 17780  012154  25E0               	addwf	Port_SetPinType@pInput& (0+255),w,b
 17781  012156  0100               	movlb	0	; () banked
 17782  012158  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
 17783  01215A  0E00               	movlw	0
 17784  01215C  0100               	movlb	0	; () banked
 17785  01215E  21E1               	addwfc	(Port_SetPinType@pInput+1)& (0+255),w,b
 17786  012160  0100               	movlb	0	; () banked
 17787  012162  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
 17788  012164  C0E2  F0CB         	movff	Port_SetPinType@pPin,Word_SetPair@pPair
 17789  012168  C0E3  F0CC         	movff	Port_SetPinType@pType,Word_SetPair@pValue
 17790  01216C  ECED  F0A2         	call	_Word_SetPair	;wreg free
 17791  012170  0012               	return	
 17792  012172                     __end_of_Port_SetPinType:
 17793                           	opt stack 0
 17794                           tosu	equ	0xFFF
 17795                           tosh	equ	0xFFE
 17796                           tosl	equ	0xFFD
 17797                           pclath	equ	0xFFA
 17798                           tblptru	equ	0xFF8
 17799                           tblptrh	equ	0xFF7
 17800                           tblptrl	equ	0xFF6
 17801                           tablat	equ	0xFF5
 17802                           prodh	equ	0xFF4
 17803                           prodl	equ	0xFF3
 17804                           intcon	equ	0xFF2
 17805                           postinc0	equ	0xFEE
 17806                           wreg	equ	0xFE8
 17807                           indf1	equ	0xFE7
 17808                           postdec1	equ	0xFE5
 17809                           fsr1h	equ	0xFE2
 17810                           fsr1l	equ	0xFE1
 17811                           indf2	equ	0xFDF
 17812                           postinc2	equ	0xFDE
 17813                           postdec2	equ	0xFDD
 17814                           plusw2	equ	0xFDB
 17815                           fsr2h	equ	0xFDA
 17816                           fsr2l	equ	0xFD9
 17817                           status	equ	0xFD8
 17818                           
 17819 ;; *************** function _Byte_SetBit *****************
 17820 ;; Defined at:
 17821 ;;		line 32 in file "Library/Types.c"
 17822 ;; Parameters:    Size  Location     Type
 17823 ;;  pInput          2    0[BANK0 ] PTR struct Byte
 17824 ;;		 -> SSP2CON2(1), SSP1CON2(1), SSP2CON1(1), SSP2STAT(1), 
 17825 ;;		 -> SSP1CON1(1), SSP1STAT(1), TRISG(1), TRISF(1), 
 17826 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
 17827 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
 17828 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
 17829 ;;		 -> NULL(0), 
 17830 ;;  pBit            1    2[BANK0 ] unsigned char 
 17831 ;;  pValue          1    3[BANK0 ] unsigned char 
 17832 ;; Auto vars:     Size  Location     Type
 17833 ;;		None
 17834 ;; Return value:  Size  Location     Type
 17835 ;;                  1    wreg      void 
 17836 ;; Registers used:
 17837 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17838 ;; Tracked objects:
 17839 ;;		On entry : 0/0
 17840 ;;		On exit  : 0/0
 17841 ;;		Unchanged: 0/0
 17842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17843 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17845 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17846 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17847 ;;Total ram usage:        7 bytes
 17848 ;; Hardware stack levels used:    1
 17849 ;; Hardware stack levels required when called:    7
 17850 ;; This function calls:
 17851 ;;		Nothing
 17852 ;; This function is called by:
 17853 ;;		_Port_SetPinType
 17854 ;;		_Port_SetPin
 17855 ;;		_SPI_Init
 17856 ;;		_SPI_MinSpeed
 17857 ;;		_SPI_MaxSpeed
 17858 ;;		_Word_SetBit
 17859 ;;		_I2C_Init
 17860 ;; This function uses a non-reentrant model
 17861 ;;
 17862                           
 17863                           	psect	text79
 17864  0141A4                     __ptext79:
 17865                           	opt stack 0
 17866  0141A4                     _Byte_SetBit:
 17867                           	opt stack 19
 17868                           
 17869                           ;Types.c: 34: pValue &= 1;
 17870                           
 17871                           ;incstack = 0
 17872  0141A4  0E01               	movlw	1
 17873  0141A6  0100               	movlb	0	; () banked
 17874  0141A8  17BD               	andwf	Byte_SetBit@pValue& (0+255),f,b
 17875                           
 17876                           ; BSR set to: 0
 17877                           ;Types.c: 35: pInput->mBits &= ~(1 << pBit);
 17878  0141AA  C0BC  F0BE         	movff	Byte_SetBit@pBit,??_Byte_SetBit
 17879  0141AE  0E01               	movlw	1
 17880  0141B0  0100               	movlb	0	; () banked
 17881  0141B2  6FBF               	movwf	(??_Byte_SetBit+1)& (0+255),b
 17882  0141B4  0100               	movlb	0	; () banked
 17883  0141B6  2BBE               	incf	??_Byte_SetBit& (0+255),f,b
 17884  0141B8  D003               	goto	u9494
 17885  0141BA                     u9495:
 17886  0141BA  0100               	movlb	0	; () banked
 17887  0141BC  90D8               	bcf	status,0,c
 17888  0141BE  37BF               	rlcf	(??_Byte_SetBit+1)& (0+255),f,b
 17889  0141C0                     u9494:
 17890  0141C0  0100               	movlb	0	; () banked
 17891  0141C2  2FBE               	decfsz	??_Byte_SetBit& (0+255),f,b
 17892  0141C4  D7FA               	goto	u9495
 17893  0141C6  0100               	movlb	0	; () banked
 17894  0141C8  51BF               	movf	(??_Byte_SetBit+1)& (0+255),w,b
 17895  0141CA  0AFF               	xorlw	255
 17896  0141CC  0100               	movlb	0	; () banked
 17897  0141CE  6FC0               	movwf	(??_Byte_SetBit+2)& (0+255),b
 17898  0141D0  C0BA  FFD9         	movff	Byte_SetBit@pInput,fsr2l
 17899  0141D4  C0BB  FFDA         	movff	Byte_SetBit@pInput+1,fsr2h
 17900  0141D8  0100               	movlb	0	; () banked
 17901  0141DA  51C0               	movf	(??_Byte_SetBit+2)& (0+255),w,b
 17902  0141DC  16DF               	andwf	indf2,f,c
 17903                           
 17904                           ; BSR set to: 0
 17905                           ;Types.c: 36: pInput->mBits |= pValue << pBit;
 17906  0141DE  C0BC  F0BE         	movff	Byte_SetBit@pBit,??_Byte_SetBit
 17907  0141E2  C0BD  F0BF         	movff	Byte_SetBit@pValue,??_Byte_SetBit+1
 17908  0141E6  0100               	movlb	0	; () banked
 17909  0141E8  2BBE               	incf	??_Byte_SetBit& (0+255),f,b
 17910  0141EA  D003               	goto	u9504
 17911  0141EC                     u9505:
 17912  0141EC  0100               	movlb	0	; () banked
 17913  0141EE  90D8               	bcf	status,0,c
 17914  0141F0  37BF               	rlcf	(??_Byte_SetBit+1)& (0+255),f,b
 17915  0141F2                     u9504:
 17916  0141F2  0100               	movlb	0	; () banked
 17917  0141F4  2FBE               	decfsz	??_Byte_SetBit& (0+255),f,b
 17918  0141F6  D7FA               	goto	u9505
 17919  0141F8  C0BA  FFD9         	movff	Byte_SetBit@pInput,fsr2l
 17920  0141FC  C0BB  FFDA         	movff	Byte_SetBit@pInput+1,fsr2h
 17921  014200  0100               	movlb	0	; () banked
 17922  014202  51BF               	movf	(??_Byte_SetBit+1)& (0+255),w,b
 17923  014204  12DF               	iorwf	indf2,f,c
 17924                           
 17925                           ; BSR set to: 0
 17926  014206  0012               	return		;funcret
 17927  014208                     __end_of_Byte_SetBit:
 17928                           	opt stack 0
 17929                           tosu	equ	0xFFF
 17930                           tosh	equ	0xFFE
 17931                           tosl	equ	0xFFD
 17932                           pclath	equ	0xFFA
 17933                           tblptru	equ	0xFF8
 17934                           tblptrh	equ	0xFF7
 17935                           tblptrl	equ	0xFF6
 17936                           tablat	equ	0xFF5
 17937                           prodh	equ	0xFF4
 17938                           prodl	equ	0xFF3
 17939                           intcon	equ	0xFF2
 17940                           postinc0	equ	0xFEE
 17941                           wreg	equ	0xFE8
 17942                           indf1	equ	0xFE7
 17943                           postdec1	equ	0xFE5
 17944                           fsr1h	equ	0xFE2
 17945                           fsr1l	equ	0xFE1
 17946                           indf2	equ	0xFDF
 17947                           postinc2	equ	0xFDE
 17948                           postdec2	equ	0xFDD
 17949                           plusw2	equ	0xFDB
 17950                           fsr2h	equ	0xFDA
 17951                           fsr2l	equ	0xFD9
 17952                           status	equ	0xFD8
 17953                           
 17954 ;; *************** function _Port_SetQuadType *****************
 17955 ;; Defined at:
 17956 ;;		line 399 in file "Library/Port.c"
 17957 ;; Parameters:    Size  Location     Type
 17958 ;;  pInput          2   54[BANK0 ] const PTR struct Port
 17959 ;;		 -> PortB(10), PortD(10), 
 17960 ;;  pQuad           1   56[BANK0 ] enum E6776
 17961 ;;  pType           1   57[BANK0 ] enum E6795
 17962 ;; Auto vars:     Size  Location     Type
 17963 ;;  Output          1   58[BANK0 ] enum E6475
 17964 ;; Return value:  Size  Location     Type
 17965 ;;                  1    wreg      enum E6475
 17966 ;; Registers used:
 17967 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17968 ;; Tracked objects:
 17969 ;;		On entry : 0/0
 17970 ;;		On exit  : 0/0
 17971 ;;		Unchanged: 0/0
 17972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17973 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17976 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17977 ;;Total ram usage:        5 bytes
 17978 ;; Hardware stack levels used:    1
 17979 ;; Hardware stack levels required when called:   13
 17980 ;; This function calls:
 17981 ;;		_Byte_SetQuad
 17982 ;;		_Port_CheckQuadType
 17983 ;;		_Word_SetPair
 17984 ;; This function is called by:
 17985 ;;		_MXK_InitDIPSwitch
 17986 ;;		_MXK_Init
 17987 ;; This function uses a non-reentrant model
 17988 ;;
 17989                           
 17990                           	psect	text80
 17991  01176A                     __ptext80:
 17992                           	opt stack 0
 17993  01176A                     _Port_SetQuadType:
 17994                           	opt stack 15
 17995                           
 17996                           ;Port.c: 401: ePinError Output = ePinErrorState;
 17997                           
 17998                           ; BSR set to: 0
 17999                           ;incstack = 0
 18000  01176A  0E05               	movlw	5
 18001  01176C  0100               	movlb	0	; () banked
 18002  01176E  6FF4               	movwf	Port_SetQuadType@Output& (0+255),b
 18003                           
 18004                           ;Port.c: 403: switch (pType)
 18005  011770  D0C7               	goto	l476
 18006  011772                     
 18007                           ; BSR set to: 0
 18008                           ;Port.c: 407: {
 18009                           ;Port.c: 409: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0xF);
 18010                           
 18011                           ; BSR set to: 0
 18012  011772  0100               	movlb	0	; () banked
 18013  011774  EE20 F002          	lfsr	2,2
 18014  011778  51F0               	movf	Port_SetQuadType@pInput& (0+255),w,b
 18015  01177A  26D9               	addwf	fsr2l,f,c
 18016  01177C  51F1               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18017  01177E  22DA               	addwfc	fsr2h,f,c
 18018  011780  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 18019  011784  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 18020  011788  C0F2  F0C7         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
 18021  01178C  0E0F               	movlw	15
 18022  01178E  0100               	movlb	0	; () banked
 18023  011790  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 18024  011792  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 18025                           
 18026                           ;Port.c: 412: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
 18027  011796  0100               	movlb	0	; () banked
 18028  011798  EE20 F004          	lfsr	2,4
 18029  01179C  51F0               	movf	Port_SetQuadType@pInput& (0+255),w,b
 18030  01179E  26D9               	addwf	fsr2l,f,c
 18031  0117A0  51F1               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18032  0117A2  22DA               	addwfc	fsr2h,f,c
 18033  0117A4  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 18034  0117A8  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 18035  0117AC  C0F2  F0C7         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
 18036  0117B0  0E00               	movlw	0
 18037  0117B2  0100               	movlb	0	; () banked
 18038  0117B4  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 18039  0117B6  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 18040                           
 18041                           ;Port.c: 413: }
 18042                           ;Port.c: 415: break;
 18043  0117BA  D0B0               	goto	l478
 18044  0117BC                     
 18045                           ;Port.c: 417: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
 18046  0117BC  C0F0  F0E9         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
 18047  0117C0  C0F1  F0EA         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
 18048  0117C4  C0F2  F0EB         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
 18049  0117C8  0E03               	movlw	3
 18050  0117CA  0100               	movlb	0	; () banked
 18051  0117CC  6FEC               	movwf	Port_CheckQuadType@pDrive& (0+255),b
 18052  0117CE  EC66  F0A1         	call	_Port_CheckQuadType	;wreg free
 18053  0117D2  0100               	movlb	0	; () banked
 18054  0117D4  6FF4               	movwf	Port_SetQuadType@Output& (0+255),b
 18055  0117D6  0100               	movlb	0	; () banked
 18056  0117D8  51F4               	movf	Port_SetQuadType@Output& (0+255),w,b
 18057  0117DA  A4D8               	btfss	status,2,c
 18058  0117DC  0012               	return	
 18059                           
 18060                           ; BSR set to: 0
 18061                           ;Port.c: 418: {
 18062                           ;Port.c: 420: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0);
 18063  0117DE  0100               	movlb	0	; () banked
 18064  0117E0  EE20 F002          	lfsr	2,2
 18065  0117E4  51F0               	movf	Port_SetQuadType@pInput& (0+255),w,b
 18066  0117E6  26D9               	addwf	fsr2l,f,c
 18067  0117E8  51F1               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18068  0117EA  22DA               	addwfc	fsr2h,f,c
 18069  0117EC  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 18070  0117F0  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 18071  0117F4  C0F2  F0C7         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
 18072  0117F8  0E00               	movlw	0
 18073  0117FA  0100               	movlb	0	; () banked
 18074  0117FC  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 18075  0117FE  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 18076                           
 18077                           ;Port.c: 423: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
 18078  011802  0100               	movlb	0	; () banked
 18079  011804  EE20 F004          	lfsr	2,4
 18080  011808  51F0               	movf	Port_SetQuadType@pInput& (0+255),w,b
 18081  01180A  26D9               	addwf	fsr2l,f,c
 18082  01180C  51F1               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18083  01180E  22DA               	addwfc	fsr2h,f,c
 18084  011810  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 18085  011814  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 18086  011818  C0F2  F0C7         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
 18087  01181C  0E00               	movlw	0
 18088  01181E  0100               	movlb	0	; () banked
 18089  011820  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 18090  011822  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 18091                           
 18092                           ;Port.c: 424: }
 18093  011826  D07A               	goto	l478
 18094  011828                     
 18095                           ;Port.c: 428: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
 18096  011828  C0F0  F0E9         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
 18097  01182C  C0F1  F0EA         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
 18098  011830  C0F2  F0EB         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
 18099  011834  0E03               	movlw	3
 18100  011836  0100               	movlb	0	; () banked
 18101  011838  6FEC               	movwf	Port_CheckQuadType@pDrive& (0+255),b
 18102  01183A  EC66  F0A1         	call	_Port_CheckQuadType	;wreg free
 18103  01183E  0100               	movlb	0	; () banked
 18104  011840  6FF4               	movwf	Port_SetQuadType@Output& (0+255),b
 18105  011842  0100               	movlb	0	; () banked
 18106  011844  51F4               	movf	Port_SetQuadType@Output& (0+255),w,b
 18107  011846  A4D8               	btfss	status,2,c
 18108  011848  0012               	return	
 18109                           
 18110                           ; BSR set to: 0
 18111                           ;Port.c: 429: {
 18112                           ;Port.c: 431: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0xF);
 18113  01184A  0100               	movlb	0	; () banked
 18114  01184C  EE20 F002          	lfsr	2,2
 18115  011850  51F0               	movf	Port_SetQuadType@pInput& (0+255),w,b
 18116  011852  26D9               	addwf	fsr2l,f,c
 18117  011854  51F1               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18118  011856  22DA               	addwfc	fsr2h,f,c
 18119  011858  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 18120  01185C  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 18121  011860  C0F2  F0C7         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
 18122  011864  0E0F               	movlw	15
 18123  011866  0100               	movlb	0	; () banked
 18124  011868  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 18125  01186A  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 18126                           
 18127                           ;Port.c: 434: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0xF);
 18128  01186E  0100               	movlb	0	; () banked
 18129  011870  EE20 F004          	lfsr	2,4
 18130  011874  51F0               	movf	Port_SetQuadType@pInput& (0+255),w,b
 18131  011876  26D9               	addwf	fsr2l,f,c
 18132  011878  51F1               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18133  01187A  22DA               	addwfc	fsr2h,f,c
 18134  01187C  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 18135  011880  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 18136  011884  C0F2  F0C7         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
 18137  011888  0E0F               	movlw	15
 18138  01188A  0100               	movlb	0	; () banked
 18139  01188C  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 18140  01188E  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 18141                           
 18142                           ;Port.c: 435: }
 18143  011892  D044               	goto	l478
 18144  011894                     
 18145                           ;Port.c: 439: if ((Output = Port_CheckQuadType(pInput, pQuad, eNone)) == ePinErrorNone)
 18146  011894  C0F0  F0E9         	movff	Port_SetQuadType@pInput,Port_CheckQuadType@pInput
 18147  011898  C0F1  F0EA         	movff	Port_SetQuadType@pInput+1,Port_CheckQuadType@pInput+1
 18148  01189C  C0F2  F0EB         	movff	Port_SetQuadType@pQuad,Port_CheckQuadType@pQuad
 18149  0118A0  0E03               	movlw	3
 18150  0118A2  0100               	movlb	0	; () banked
 18151  0118A4  6FEC               	movwf	Port_CheckQuadType@pDrive& (0+255),b
 18152  0118A6  EC66  F0A1         	call	_Port_CheckQuadType	;wreg free
 18153  0118AA  0100               	movlb	0	; () banked
 18154  0118AC  6FF4               	movwf	Port_SetQuadType@Output& (0+255),b
 18155  0118AE  0100               	movlb	0	; () banked
 18156  0118B0  51F4               	movf	Port_SetQuadType@Output& (0+255),w,b
 18157  0118B2  A4D8               	btfss	status,2,c
 18158  0118B4  0012               	return	
 18159                           
 18160                           ; BSR set to: 0
 18161                           ;Port.c: 440: {
 18162                           ;Port.c: 442: Byte_SetQuad(pInput->mDirection, (UINT8)pQuad, 0);
 18163  0118B6  0100               	movlb	0	; () banked
 18164  0118B8  EE20 F002          	lfsr	2,2
 18165  0118BC  51F0               	movf	Port_SetQuadType@pInput& (0+255),w,b
 18166  0118BE  26D9               	addwf	fsr2l,f,c
 18167  0118C0  51F1               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18168  0118C2  22DA               	addwfc	fsr2h,f,c
 18169  0118C4  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 18170  0118C8  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 18171  0118CC  C0F2  F0C7         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
 18172  0118D0  0E00               	movlw	0
 18173  0118D2  0100               	movlb	0	; () banked
 18174  0118D4  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 18175  0118D6  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 18176                           
 18177                           ;Port.c: 445: Byte_SetQuad(pInput->mOutput, (UINT8)pQuad, 0);
 18178  0118DA  0100               	movlb	0	; () banked
 18179  0118DC  EE20 F004          	lfsr	2,4
 18180  0118E0  51F0               	movf	Port_SetQuadType@pInput& (0+255),w,b
 18181  0118E2  26D9               	addwf	fsr2l,f,c
 18182  0118E4  51F1               	movf	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18183  0118E6  22DA               	addwfc	fsr2h,f,c
 18184  0118E8  CFDE F0C5          	movff	postinc2,Byte_SetQuad@pInput
 18185  0118EC  CFDD F0C6          	movff	postdec2,Byte_SetQuad@pInput+1
 18186  0118F0  C0F2  F0C7         	movff	Port_SetQuadType@pQuad,Byte_SetQuad@pQuad
 18187  0118F4  0E00               	movlw	0
 18188  0118F6  0100               	movlb	0	; () banked
 18189  0118F8  6FC8               	movwf	Byte_SetQuad@pValue& (0+255),b
 18190  0118FA  ECC1  F0A4         	call	_Byte_SetQuad	;wreg free
 18191                           
 18192                           ;Port.c: 446: }
 18193  0118FE  D00E               	goto	l478
 18194  011900                     l476:
 18195  011900  0100               	movlb	0	; () banked
 18196  011902  51F3               	movf	Port_SetQuadType@pType& (0+255),w,b
 18197                           
 18198                           ; Switch size 1, requested type "space"
 18199                           ; Number of cases is 4, Range of values is 0 to 3
 18200                           ; switch strategies available:
 18201                           ; Name         Instructions Cycles
 18202                           ; simple_byte           13     7 (average)
 18203                           ;	Chosen strategy is simple_byte
 18204  011904  0A00               	xorlw	0	; case 0
 18205  011906  B4D8               	btfsc	status,2,c
 18206  011908  D734               	goto	l477
 18207  01190A  0A01               	xorlw	1	; case 1
 18208  01190C  B4D8               	btfsc	status,2,c
 18209  01190E  D756               	goto	l479
 18210  011910  0A03               	xorlw	3	; case 2
 18211  011912  B4D8               	btfsc	status,2,c
 18212  011914  D789               	goto	l483
 18213  011916  0A01               	xorlw	1	; case 3
 18214  011918  B4D8               	btfsc	status,2,c
 18215  01191A  D7BC               	goto	l486
 18216  01191C                     l478:
 18217                           
 18218                           ;Port.c: 454: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4, (UINT8)pType);
 18219                           
 18220                           ; BSR set to: 0
 18221  01191C  0E08               	movlw	8
 18222  01191E  0100               	movlb	0	; () banked
 18223  011920  25F0               	addwf	Port_SetQuadType@pInput& (0+255),w,b
 18224  011922  0100               	movlb	0	; () banked
 18225  011924  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
 18226  011926  0E00               	movlw	0
 18227  011928  0100               	movlb	0	; () banked
 18228  01192A  21F1               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18229  01192C  0100               	movlb	0	; () banked
 18230  01192E  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
 18231  011930  0100               	movlb	0	; () banked
 18232  011932  51F2               	movf	Port_SetQuadType@pQuad& (0+255),w,b
 18233  011934  0D04               	mullw	4
 18234  011936  CFF3 F0CB          	movff	prodl,Word_SetPair@pPair
 18235  01193A  C0F3  F0CC         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
 18236  01193E  ECED  F0A2         	call	_Word_SetPair	;wreg free
 18237                           
 18238                           ;Port.c: 455: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 1, (UINT8)pType);
 18239  011942  0E08               	movlw	8
 18240  011944  0100               	movlb	0	; () banked
 18241  011946  25F0               	addwf	Port_SetQuadType@pInput& (0+255),w,b
 18242  011948  0100               	movlb	0	; () banked
 18243  01194A  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
 18244  01194C  0E00               	movlw	0
 18245  01194E  0100               	movlb	0	; () banked
 18246  011950  21F1               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18247  011952  0100               	movlb	0	; () banked
 18248  011954  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
 18249  011956  0100               	movlb	0	; () banked
 18250  011958  51F2               	movf	Port_SetQuadType@pQuad& (0+255),w,b
 18251  01195A  0D04               	mullw	4
 18252  01195C  28F3               	incf	prodl,w,c
 18253  01195E  0100               	movlb	0	; () banked
 18254  011960  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
 18255  011962  C0F3  F0CC         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
 18256  011966  ECED  F0A2         	call	_Word_SetPair	;wreg free
 18257                           
 18258                           ;Port.c: 456: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 2, (UINT8)pType);
 18259  01196A  0E08               	movlw	8
 18260  01196C  0100               	movlb	0	; () banked
 18261  01196E  25F0               	addwf	Port_SetQuadType@pInput& (0+255),w,b
 18262  011970  0100               	movlb	0	; () banked
 18263  011972  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
 18264  011974  0E00               	movlw	0
 18265  011976  0100               	movlb	0	; () banked
 18266  011978  21F1               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18267  01197A  0100               	movlb	0	; () banked
 18268  01197C  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
 18269  01197E  0100               	movlb	0	; () banked
 18270  011980  51F2               	movf	Port_SetQuadType@pQuad& (0+255),w,b
 18271  011982  0D04               	mullw	4
 18272  011984  50F3               	movf	prodl,w,c
 18273  011986  0F02               	addlw	2
 18274  011988  0100               	movlb	0	; () banked
 18275  01198A  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
 18276  01198C  C0F3  F0CC         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
 18277  011990  ECED  F0A2         	call	_Word_SetPair	;wreg free
 18278                           
 18279                           ;Port.c: 457: Word_SetPair(&pInput->mType, (UINT8)pQuad * 4 + 3, (UINT8)pType);
 18280  011994  0E08               	movlw	8
 18281  011996  0100               	movlb	0	; () banked
 18282  011998  25F0               	addwf	Port_SetQuadType@pInput& (0+255),w,b
 18283  01199A  0100               	movlb	0	; () banked
 18284  01199C  6FC9               	movwf	Word_SetPair@pInput& (0+255),b
 18285  01199E  0E00               	movlw	0
 18286  0119A0  0100               	movlb	0	; () banked
 18287  0119A2  21F1               	addwfc	(Port_SetQuadType@pInput+1)& (0+255),w,b
 18288  0119A4  0100               	movlb	0	; () banked
 18289  0119A6  6FCA               	movwf	(Word_SetPair@pInput+1)& (0+255),b
 18290  0119A8  0100               	movlb	0	; () banked
 18291  0119AA  51F2               	movf	Port_SetQuadType@pQuad& (0+255),w,b
 18292  0119AC  0D04               	mullw	4
 18293  0119AE  50F3               	movf	prodl,w,c
 18294  0119B0  0F03               	addlw	3
 18295  0119B2  0100               	movlb	0	; () banked
 18296  0119B4  6FCB               	movwf	Word_SetPair@pPair& (0+255),b
 18297  0119B6  C0F3  F0CC         	movff	Port_SetQuadType@pType,Word_SetPair@pValue
 18298  0119BA  ECED  F0A2         	call	_Word_SetPair	;wreg free
 18299  0119BE  0012               	return	
 18300  0119C0                     __end_of_Port_SetQuadType:
 18301                           	opt stack 0
 18302                           tosu	equ	0xFFF
 18303                           tosh	equ	0xFFE
 18304                           tosl	equ	0xFFD
 18305                           pclath	equ	0xFFA
 18306                           tblptru	equ	0xFF8
 18307                           tblptrh	equ	0xFF7
 18308                           tblptrl	equ	0xFF6
 18309                           tablat	equ	0xFF5
 18310                           prodh	equ	0xFF4
 18311                           prodl	equ	0xFF3
 18312                           intcon	equ	0xFF2
 18313                           postinc0	equ	0xFEE
 18314                           wreg	equ	0xFE8
 18315                           indf1	equ	0xFE7
 18316                           postdec1	equ	0xFE5
 18317                           fsr1h	equ	0xFE2
 18318                           fsr1l	equ	0xFE1
 18319                           indf2	equ	0xFDF
 18320                           postinc2	equ	0xFDE
 18321                           postdec2	equ	0xFDD
 18322                           plusw2	equ	0xFDB
 18323                           fsr2h	equ	0xFDA
 18324                           fsr2l	equ	0xFD9
 18325                           status	equ	0xFD8
 18326                           
 18327 ;; *************** function _Word_SetPair *****************
 18328 ;; Defined at:
 18329 ;;		line 149 in file "Library/Types.c"
 18330 ;; Parameters:    Size  Location     Type
 18331 ;;  pInput          2   15[BANK0 ] PTR struct Word
 18332 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
 18333 ;;		 -> PortD(10), PortC(10), PortF(10), 
 18334 ;;  pPair           1   17[BANK0 ] unsigned char 
 18335 ;;  pValue          1   18[BANK0 ] unsigned char 
 18336 ;; Auto vars:     Size  Location     Type
 18337 ;;		None
 18338 ;; Return value:  Size  Location     Type
 18339 ;;                  1    wreg      void 
 18340 ;; Registers used:
 18341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18342 ;; Tracked objects:
 18343 ;;		On entry : 0/0
 18344 ;;		On exit  : 0/0
 18345 ;;		Unchanged: 0/0
 18346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18347 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18350 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18351 ;;Total ram usage:        4 bytes
 18352 ;; Hardware stack levels used:    1
 18353 ;; Hardware stack levels required when called:    9
 18354 ;; This function calls:
 18355 ;;		_Byte_SetPair
 18356 ;; This function is called by:
 18357 ;;		_Port_SetPinType
 18358 ;;		_Port_SetQuadType
 18359 ;;		_Port_SetType
 18360 ;;		_Port_SetPairType
 18361 ;;		_PortProperty_Init
 18362 ;; This function uses a non-reentrant model
 18363 ;;
 18364                           
 18365                           	psect	text81
 18366  0145DA                     __ptext81:
 18367                           	opt stack 0
 18368  0145DA                     _Word_SetPair:
 18369                           	opt stack 18
 18370                           
 18371                           ;Types.c: 151: if (pPair >= 4)
 18372                           
 18373                           ;incstack = 0
 18374  0145DA  0E03               	movlw	3
 18375  0145DC  0100               	movlb	0	; () banked
 18376  0145DE  65CB               	cpfsgt	Word_SetPair@pPair& (0+255),b
 18377  0145E0  D014               	goto	l776
 18378                           
 18379                           ; BSR set to: 0
 18380                           ;Types.c: 152: Byte_SetPair(&(pInput->MS_Byte), pPair - 4, pValue);
 18381  0145E2  0E01               	movlw	1
 18382  0145E4  0100               	movlb	0	; () banked
 18383  0145E6  25C9               	addwf	Word_SetPair@pInput& (0+255),w,b
 18384  0145E8  0100               	movlb	0	; () banked
 18385  0145EA  6FC5               	movwf	Byte_SetPair@pInput& (0+255),b
 18386  0145EC  0E00               	movlw	0
 18387  0145EE  0100               	movlb	0	; () banked
 18388  0145F0  21CA               	addwfc	(Word_SetPair@pInput+1)& (0+255),w,b
 18389  0145F2  0100               	movlb	0	; () banked
 18390  0145F4  6FC6               	movwf	(Byte_SetPair@pInput+1)& (0+255),b
 18391  0145F6  0100               	movlb	0	; () banked
 18392  0145F8  51CB               	movf	Word_SetPair@pPair& (0+255),w,b
 18393  0145FA  0FFC               	addlw	252
 18394  0145FC  0100               	movlb	0	; () banked
 18395  0145FE  6FC7               	movwf	Byte_SetPair@pPair& (0+255),b
 18396  014600  C0CC  F0C8         	movff	Word_SetPair@pValue,Byte_SetPair@pValue
 18397  014604  ECB0  F0A4         	call	_Byte_SetPair	;wreg free
 18398  014608  0012               	return	
 18399  01460A                     l776:
 18400                           
 18401                           ;Types.c: 153: else
 18402                           ;Types.c: 154: Byte_SetPair(&(pInput->LS_Byte), pPair, pValue);
 18403  01460A  C0C9  F0C5         	movff	Word_SetPair@pInput,Byte_SetPair@pInput
 18404  01460E  C0CA  F0C6         	movff	Word_SetPair@pInput+1,Byte_SetPair@pInput+1
 18405  014612  C0CB  F0C7         	movff	Word_SetPair@pPair,Byte_SetPair@pPair
 18406  014616  C0CC  F0C8         	movff	Word_SetPair@pValue,Byte_SetPair@pValue
 18407  01461A  ECB0  F0A4         	call	_Byte_SetPair	;wreg free
 18408  01461E  0012               	return	
 18409  014620                     __end_of_Word_SetPair:
 18410                           	opt stack 0
 18411                           tosu	equ	0xFFF
 18412                           tosh	equ	0xFFE
 18413                           tosl	equ	0xFFD
 18414                           pclath	equ	0xFFA
 18415                           tblptru	equ	0xFF8
 18416                           tblptrh	equ	0xFF7
 18417                           tblptrl	equ	0xFF6
 18418                           tablat	equ	0xFF5
 18419                           prodh	equ	0xFF4
 18420                           prodl	equ	0xFF3
 18421                           intcon	equ	0xFF2
 18422                           postinc0	equ	0xFEE
 18423                           wreg	equ	0xFE8
 18424                           indf1	equ	0xFE7
 18425                           postdec1	equ	0xFE5
 18426                           fsr1h	equ	0xFE2
 18427                           fsr1l	equ	0xFE1
 18428                           indf2	equ	0xFDF
 18429                           postinc2	equ	0xFDE
 18430                           postdec2	equ	0xFDD
 18431                           plusw2	equ	0xFDB
 18432                           fsr2h	equ	0xFDA
 18433                           fsr2l	equ	0xFD9
 18434                           status	equ	0xFD8
 18435                           
 18436 ;; *************** function _Byte_SetPair *****************
 18437 ;; Defined at:
 18438 ;;		line 83 in file "Library/Types.c"
 18439 ;; Parameters:    Size  Location     Type
 18440 ;;  pInput          2   11[BANK0 ] PTR struct Byte
 18441 ;;		 -> PortF..(2), PortC..(2), PortD..(2), PortE..(2), 
 18442 ;;		 -> PortB..(2), PortA..(2), PortG..(2), PortG(10), 
 18443 ;;		 -> PortA(10), PortB(10), PortE(10), PortD(10), 
 18444 ;;		 -> TRISG(1), TRISF(1), TRISE(1), TRISD(1), 
 18445 ;;		 -> TRISC(1), TRISB(1), TRISA(1), PORTG(1), 
 18446 ;;		 -> PORTF(1), PORTE(1), PORTD(1), PORTC(1), 
 18447 ;;		 -> PORTB(1), PORTA(1), PortC(10), PortF(10), 
 18448 ;;		 -> NULL(0), 
 18449 ;;  pPair           1   13[BANK0 ] unsigned char 
 18450 ;;  pValue          1   14[BANK0 ] unsigned char 
 18451 ;; Auto vars:     Size  Location     Type
 18452 ;;		None
 18453 ;; Return value:  Size  Location     Type
 18454 ;;                  1    wreg      void 
 18455 ;; Registers used:
 18456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18457 ;; Tracked objects:
 18458 ;;		On entry : 0/0
 18459 ;;		On exit  : 0/0
 18460 ;;		Unchanged: 0/0
 18461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18462 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18465 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18466 ;;Total ram usage:        4 bytes
 18467 ;; Hardware stack levels used:    1
 18468 ;; Hardware stack levels required when called:    8
 18469 ;; This function calls:
 18470 ;;		_Byte_SetZone
 18471 ;; This function is called by:
 18472 ;;		_Word_SetPair
 18473 ;;		_Port_SetPairType
 18474 ;;		_Port_SetPair
 18475 ;; This function uses a non-reentrant model
 18476 ;;
 18477                           
 18478                           	psect	text82
 18479  014960                     __ptext82:
 18480                           	opt stack 0
 18481  014960                     _Byte_SetPair:
 18482                           	opt stack 18
 18483                           
 18484                           ;Types.c: 85: Byte_SetZone(pInput, 4, pPair, 2, pValue);
 18485                           
 18486                           ;incstack = 0
 18487  014960  C0C5  F0BA         	movff	Byte_SetPair@pInput,Byte_SetZone@pInput
 18488  014964  C0C6  F0BB         	movff	Byte_SetPair@pInput+1,Byte_SetZone@pInput+1
 18489  014968  0E04               	movlw	4
 18490  01496A  0100               	movlb	0	; () banked
 18491  01496C  6FBC               	movwf	Byte_SetZone@pMax& (0+255),b
 18492  01496E  C0C7  F0BD         	movff	Byte_SetPair@pPair,Byte_SetZone@pChunk
 18493  014972  0E02               	movlw	2
 18494  014974  0100               	movlb	0	; () banked
 18495  014976  6FBE               	movwf	Byte_SetZone@pChunkSize& (0+255),b
 18496  014978  C0C8  F0BF         	movff	Byte_SetPair@pValue,Byte_SetZone@pValue
 18497  01497C  EC71  F09A         	call	_Byte_SetZone	;wreg free
 18498  014980  0012               	return		;funcret
 18499  014982                     __end_of_Byte_SetPair:
 18500                           	opt stack 0
 18501                           tosu	equ	0xFFF
 18502                           tosh	equ	0xFFE
 18503                           tosl	equ	0xFFD
 18504                           pclath	equ	0xFFA
 18505                           tblptru	equ	0xFF8
 18506                           tblptrh	equ	0xFF7
 18507                           tblptrl	equ	0xFF6
 18508                           tablat	equ	0xFF5
 18509                           prodh	equ	0xFF4
 18510                           prodl	equ	0xFF3
 18511                           intcon	equ	0xFF2
 18512                           postinc0	equ	0xFEE
 18513                           wreg	equ	0xFE8
 18514                           indf1	equ	0xFE7
 18515                           postdec1	equ	0xFE5
 18516                           fsr1h	equ	0xFE2
 18517                           fsr1l	equ	0xFE1
 18518                           indf2	equ	0xFDF
 18519                           postinc2	equ	0xFDE
 18520                           postdec2	equ	0xFDD
 18521                           plusw2	equ	0xFDB
 18522                           fsr2h	equ	0xFDA
 18523                           fsr2l	equ	0xFD9
 18524                           status	equ	0xFD8
 18525                           
 18526 ;; *************** function _Port_CheckQuadType *****************
 18527 ;; Defined at:
 18528 ;;		line 126 in file "Library/Port.c"
 18529 ;; Parameters:    Size  Location     Type
 18530 ;;  pInput          2   47[BANK0 ] const PTR struct Port
 18531 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
 18532 ;;		 -> PortD(10), PortC(10), PortF(10), 
 18533 ;;  pQuad           1   49[BANK0 ] enum E6776
 18534 ;;  pDrive          1   50[BANK0 ] enum E6469
 18535 ;; Auto vars:     Size  Location     Type
 18536 ;;  Output          1   53[BANK0 ] enum E6475
 18537 ;;  Pair2           1   52[BANK0 ] enum E6760
 18538 ;;  Pair1           1   51[BANK0 ] enum E6760
 18539 ;; Return value:  Size  Location     Type
 18540 ;;                  1    wreg      enum E6475
 18541 ;; Registers used:
 18542 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18543 ;; Tracked objects:
 18544 ;;		On entry : 0/0
 18545 ;;		On exit  : 0/0
 18546 ;;		Unchanged: 0/0
 18547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18548 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18549 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18551 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18552 ;;Total ram usage:        7 bytes
 18553 ;; Hardware stack levels used:    1
 18554 ;; Hardware stack levels required when called:   12
 18555 ;; This function calls:
 18556 ;;		_Port_CheckPairType
 18557 ;; This function is called by:
 18558 ;;		_Port_CheckPortType
 18559 ;;		_Port_SetQuadType
 18560 ;; This function uses a non-reentrant model
 18561 ;;
 18562                           
 18563                           	psect	text83
 18564  0142CC                     __ptext83:
 18565                           	opt stack 0
 18566  0142CC                     _Port_CheckQuadType:
 18567                           	opt stack 14
 18568                           
 18569                           ;Port.c: 128: ePinError Output = ePinErrorState;
 18570                           
 18571                           ;incstack = 0
 18572  0142CC  0E05               	movlw	5
 18573  0142CE  0100               	movlb	0	; () banked
 18574  0142D0  6FEF               	movwf	Port_CheckQuadType@Output& (0+255),b
 18575                           
 18576                           ; BSR set to: 0
 18577                           ;Port.c: 129: ePair Pair1 = (ePair)((int)pQuad * 2);
 18578  0142D2  0100               	movlb	0	; () banked
 18579  0142D4  51EB               	movf	Port_CheckQuadType@pQuad& (0+255),w,b
 18580  0142D6  0D02               	mullw	2
 18581  0142D8  CFF3 F0ED          	movff	prodl,Port_CheckQuadType@Pair1
 18582                           
 18583                           ; BSR set to: 0
 18584                           ;Port.c: 130: ePair Pair2 = (ePair)((int)pQuad * 2 + 1);
 18585  0142DC  0100               	movlb	0	; () banked
 18586  0142DE  51EB               	movf	Port_CheckQuadType@pQuad& (0+255),w,b
 18587  0142E0  0D02               	mullw	2
 18588  0142E2  28F3               	incf	prodl,w,c
 18589  0142E4  0100               	movlb	0	; () banked
 18590  0142E6  6FEE               	movwf	Port_CheckQuadType@Pair2& (0+255),b
 18591                           
 18592                           ; BSR set to: 0
 18593                           ;Port.c: 133: if ((Output = Port_CheckPairType(pInput, Pair1, pDrive)) == ePinErrorNone)
 18594  0142E8  C0E9  F0E0         	movff	Port_CheckQuadType@pInput,Port_CheckPairType@pInput
 18595  0142EC  C0EA  F0E1         	movff	Port_CheckQuadType@pInput+1,Port_CheckPairType@pInput+1
 18596  0142F0  C0ED  F0E2         	movff	Port_CheckQuadType@Pair1,Port_CheckPairType@pPair
 18597  0142F4  C0EC  F0E3         	movff	Port_CheckQuadType@pDrive,Port_CheckPairType@pDrive
 18598  0142F8  EC9D  F0A0         	call	_Port_CheckPairType	;wreg free
 18599  0142FC  0100               	movlb	0	; () banked
 18600  0142FE  6FEF               	movwf	Port_CheckQuadType@Output& (0+255),b
 18601  014300  0100               	movlb	0	; () banked
 18602  014302  51EF               	movf	Port_CheckQuadType@Output& (0+255),w,b
 18603  014304  A4D8               	btfss	status,2,c
 18604  014306  D00C               	goto	l393
 18605                           
 18606                           ; BSR set to: 0
 18607                           ;Port.c: 134: Output = Port_CheckPairType(pInput, Pair2, pDrive);
 18608  014308  C0E9  F0E0         	movff	Port_CheckQuadType@pInput,Port_CheckPairType@pInput
 18609  01430C  C0EA  F0E1         	movff	Port_CheckQuadType@pInput+1,Port_CheckPairType@pInput+1
 18610  014310  C0EE  F0E2         	movff	Port_CheckQuadType@Pair2,Port_CheckPairType@pPair
 18611  014314  C0EC  F0E3         	movff	Port_CheckQuadType@pDrive,Port_CheckPairType@pDrive
 18612  014318  EC9D  F0A0         	call	_Port_CheckPairType	;wreg free
 18613  01431C  0100               	movlb	0	; () banked
 18614  01431E  6FEF               	movwf	Port_CheckQuadType@Output& (0+255),b
 18615  014320                     l393:
 18616                           
 18617                           ; BSR set to: 0
 18618                           ;Port.c: 136: return Output;
 18619                           
 18620                           ; BSR set to: 0
 18621  014320  0100               	movlb	0	; () banked
 18622  014322  51EF               	movf	Port_CheckQuadType@Output& (0+255),w,b
 18623  014324  0012               	return	
 18624  014326                     __end_of_Port_CheckQuadType:
 18625                           	opt stack 0
 18626                           tosu	equ	0xFFF
 18627                           tosh	equ	0xFFE
 18628                           tosl	equ	0xFFD
 18629                           pclath	equ	0xFFA
 18630                           tblptru	equ	0xFF8
 18631                           tblptrh	equ	0xFF7
 18632                           tblptrl	equ	0xFF6
 18633                           tablat	equ	0xFF5
 18634                           prodh	equ	0xFF4
 18635                           prodl	equ	0xFF3
 18636                           intcon	equ	0xFF2
 18637                           postinc0	equ	0xFEE
 18638                           wreg	equ	0xFE8
 18639                           indf1	equ	0xFE7
 18640                           postdec1	equ	0xFE5
 18641                           fsr1h	equ	0xFE2
 18642                           fsr1l	equ	0xFE1
 18643                           indf2	equ	0xFDF
 18644                           postinc2	equ	0xFDE
 18645                           postdec2	equ	0xFDD
 18646                           plusw2	equ	0xFDB
 18647                           fsr2h	equ	0xFDA
 18648                           fsr2l	equ	0xFD9
 18649                           status	equ	0xFD8
 18650                           
 18651 ;; *************** function _Port_CheckPairType *****************
 18652 ;; Defined at:
 18653 ;;		line 112 in file "Library/Port.c"
 18654 ;; Parameters:    Size  Location     Type
 18655 ;;  pInput          2   38[BANK0 ] const PTR struct Port
 18656 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
 18657 ;;		 -> PortD(10), PortC(10), PortF(10), 
 18658 ;;  pPair           1   40[BANK0 ] enum E6760
 18659 ;;  pDrive          1   41[BANK0 ] enum E6469
 18660 ;; Auto vars:     Size  Location     Type
 18661 ;;  Props           2   45[BANK0 ] PTR struct PortProperty
 18662 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
 18663 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
 18664 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
 18665 ;;		 -> PortC(10), PortF(10), NULL(0), 
 18666 ;;  Output          1   44[BANK0 ] enum E6475
 18667 ;;  Pin2            1   43[BANK0 ] enum E6750
 18668 ;;  Pin1            1   42[BANK0 ] enum E6750
 18669 ;; Return value:  Size  Location     Type
 18670 ;;                  1    wreg      enum E6475
 18671 ;; Registers used:
 18672 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18673 ;; Tracked objects:
 18674 ;;		On entry : 0/0
 18675 ;;		On exit  : 0/0
 18676 ;;		Unchanged: 0/0
 18677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18678 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18679 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18681 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18682 ;;Total ram usage:        9 bytes
 18683 ;; Hardware stack levels used:    1
 18684 ;; Hardware stack levels required when called:   11
 18685 ;; This function calls:
 18686 ;;		_PortProperty_Valid
 18687 ;; This function is called by:
 18688 ;;		_Port_CheckQuadType
 18689 ;;		_Port_SetPairType
 18690 ;; This function uses a non-reentrant model
 18691 ;;
 18692                           
 18693                           	psect	text84
 18694  01413A                     __ptext84:
 18695                           	opt stack 0
 18696  01413A                     _Port_CheckPairType:
 18697                           	opt stack 14
 18698                           
 18699                           ;Port.c: 114: ePinError Output = ePinErrorState;
 18700                           
 18701                           ; BSR set to: 0
 18702                           ;incstack = 0
 18703  01413A  0E05               	movlw	5
 18704  01413C  0100               	movlb	0	; () banked
 18705  01413E  6FE6               	movwf	Port_CheckPairType@Output& (0+255),b
 18706                           
 18707                           ; BSR set to: 0
 18708                           ;Port.c: 116: PortPropertyPtr Props = (PortPropertyPtr)&(pInput->mProperties->mWord);
 18709  014140  C0E0  FFD9         	movff	Port_CheckPairType@pInput,fsr2l
 18710  014144  C0E1  FFDA         	movff	Port_CheckPairType@pInput+1,fsr2h
 18711  014148  CFDE F0E7          	movff	postinc2,Port_CheckPairType@Props
 18712  01414C  CFDD F0E8          	movff	postdec2,Port_CheckPairType@Props+1
 18713                           
 18714                           ; BSR set to: 0
 18715                           ;Port.c: 117: ePin Pin1 = (ePin)((int)pPair * 2);
 18716  014150  0100               	movlb	0	; () banked
 18717  014152  51E2               	movf	Port_CheckPairType@pPair& (0+255),w,b
 18718  014154  0D02               	mullw	2
 18719  014156  CFF3 F0E4          	movff	prodl,Port_CheckPairType@Pin1
 18720                           
 18721                           ; BSR set to: 0
 18722                           ;Port.c: 118: ePin Pin2 = (ePin)((int)pPair * 2 + 1);
 18723  01415A  0100               	movlb	0	; () banked
 18724  01415C  51E2               	movf	Port_CheckPairType@pPair& (0+255),w,b
 18725  01415E  0D02               	mullw	2
 18726  014160  28F3               	incf	prodl,w,c
 18727  014162  0100               	movlb	0	; () banked
 18728  014164  6FE5               	movwf	Port_CheckPairType@Pin2& (0+255),b
 18729                           
 18730                           ; BSR set to: 0
 18731                           ;Port.c: 121: if ((Output = PortProperty_Valid(Props, pDrive, Pin1)) == ePinErrorNone)
 18732  014166  C0E7  F0C9         	movff	Port_CheckPairType@Props,PortProperty_Valid@pInput
 18733  01416A  C0E8  F0CA         	movff	Port_CheckPairType@Props+1,PortProperty_Valid@pInput+1
 18734  01416E  C0E3  F0CB         	movff	Port_CheckPairType@pDrive,PortProperty_Valid@pPinDrive
 18735  014172  C0E4  F0CC         	movff	Port_CheckPairType@Pin1,PortProperty_Valid@pPin
 18736  014176  EC5D  F09E         	call	_PortProperty_Valid	;wreg free
 18737  01417A  0100               	movlb	0	; () banked
 18738  01417C  6FE6               	movwf	Port_CheckPairType@Output& (0+255),b
 18739  01417E  0100               	movlb	0	; () banked
 18740  014180  51E6               	movf	Port_CheckPairType@Output& (0+255),w,b
 18741  014182  A4D8               	btfss	status,2,c
 18742  014184  D00C               	goto	l389
 18743                           
 18744                           ; BSR set to: 0
 18745                           ;Port.c: 122: Output = PortProperty_Valid(Props, pDrive, Pin2);
 18746  014186  C0E7  F0C9         	movff	Port_CheckPairType@Props,PortProperty_Valid@pInput
 18747  01418A  C0E8  F0CA         	movff	Port_CheckPairType@Props+1,PortProperty_Valid@pInput+1
 18748  01418E  C0E3  F0CB         	movff	Port_CheckPairType@pDrive,PortProperty_Valid@pPinDrive
 18749  014192  C0E5  F0CC         	movff	Port_CheckPairType@Pin2,PortProperty_Valid@pPin
 18750  014196  EC5D  F09E         	call	_PortProperty_Valid	;wreg free
 18751  01419A  0100               	movlb	0	; () banked
 18752  01419C  6FE6               	movwf	Port_CheckPairType@Output& (0+255),b
 18753  01419E                     l389:
 18754                           
 18755                           ; BSR set to: 0
 18756                           ;Port.c: 124: return Output;
 18757                           
 18758                           ; BSR set to: 0
 18759  01419E  0100               	movlb	0	; () banked
 18760  0141A0  51E6               	movf	Port_CheckPairType@Output& (0+255),w,b
 18761  0141A2  0012               	return	
 18762  0141A4                     __end_of_Port_CheckPairType:
 18763                           	opt stack 0
 18764                           tosu	equ	0xFFF
 18765                           tosh	equ	0xFFE
 18766                           tosl	equ	0xFFD
 18767                           pclath	equ	0xFFA
 18768                           tblptru	equ	0xFF8
 18769                           tblptrh	equ	0xFF7
 18770                           tblptrl	equ	0xFF6
 18771                           tablat	equ	0xFF5
 18772                           prodh	equ	0xFF4
 18773                           prodl	equ	0xFF3
 18774                           intcon	equ	0xFF2
 18775                           postinc0	equ	0xFEE
 18776                           wreg	equ	0xFE8
 18777                           indf1	equ	0xFE7
 18778                           postdec1	equ	0xFE5
 18779                           fsr1h	equ	0xFE2
 18780                           fsr1l	equ	0xFE1
 18781                           indf2	equ	0xFDF
 18782                           postinc2	equ	0xFDE
 18783                           postdec2	equ	0xFDD
 18784                           plusw2	equ	0xFDB
 18785                           fsr2h	equ	0xFDA
 18786                           fsr2l	equ	0xFD9
 18787                           status	equ	0xFD8
 18788                           
 18789 ;; *************** function _PortProperty_Valid *****************
 18790 ;; Defined at:
 18791 ;;		line 220 in file "Library/Types.c"
 18792 ;; Parameters:    Size  Location     Type
 18793 ;;  pInput          2   15[BANK0 ] PTR struct PortProperty
 18794 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
 18795 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
 18796 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
 18797 ;;		 -> PortC(10), PortF(10), NULL(0), 
 18798 ;;  pPinDrive       1   17[BANK0 ] enum E6469
 18799 ;;  pPin            1   18[BANK0 ] unsigned char 
 18800 ;; Auto vars:     Size  Location     Type
 18801 ;;  Errors         16   21[BANK0 ] const enum E6475[4][4]
 18802 ;;  Pair            1   37[BANK0 ] enum E6469
 18803 ;; Return value:  Size  Location     Type
 18804 ;;                  1    wreg      enum E6475
 18805 ;; Registers used:
 18806 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18807 ;; Tracked objects:
 18808 ;;		On entry : 0/0
 18809 ;;		On exit  : 0/0
 18810 ;;		Unchanged: 0/0
 18811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18812 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18813 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18814 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18815 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18816 ;;Total ram usage:       23 bytes
 18817 ;; Hardware stack levels used:    1
 18818 ;; Hardware stack levels required when called:   10
 18819 ;; This function calls:
 18820 ;;		_Word_GetPair
 18821 ;; This function is called by:
 18822 ;;		_Port_CheckPairType
 18823 ;;		_Port_SetPinType
 18824 ;; This function uses a non-reentrant model
 18825 ;;
 18826                           
 18827                           	psect	text85
 18828  013CBA                     __ptext85:
 18829                           	opt stack 0
 18830  013CBA                     _PortProperty_Valid:
 18831                           	opt stack 17
 18832                           
 18833                           ;Types.c: 222: ePinDrive Pair;
 18834                           ;Types.c: 223: const ePinError Errors[4][4] =
 18835                           ;Types.c: 224: {
 18836                           ;Types.c: 226: { ePinErrorNone, ePinErrorCannotDriveHigh, ePinErrorCannotDriveLow, ePinE
      +                          rrorNone },
 18837                           ;Types.c: 227: { ePinErrorCannotDriveHigh, ePinErrorNone, ePinErrorCannotDriveHigh, ePin
      +                          ErrorNone },
 18838                           ;Types.c: 228: { ePinErrorCannotDriveLow, ePinErrorCannotDriveLow, ePinErrorNone, ePinEr
      +                          rorNone },
 18839                           ;Types.c: 229: { ePinErrorCannotDrive, ePinErrorCannotDrive, ePinErrorCannotDrive, ePinE
      +                          rrorNone }
 18840                           ;Types.c: 230: };
 18841                           
 18842                           ; BSR set to: 0
 18843                           ;incstack = 0
 18844  013CBA  0EB5               	movlw	low PortProperty_Valid@F6830
 18845  013CBC  6EF6               	movwf	tblptrl,c
 18846  013CBE                     	if	1	;There is more than 1 active tblptr byte
 18847  013CBE  0EFD               	movlw	high PortProperty_Valid@F6830
 18848  013CC0  6EF7               	movwf	tblptrh,c
 18849  013CC2                     	endif
 18850  013CC2                     	if	1	;There are 3 active tblptr bytes
 18851  013CC2  0E00               	movlw	low (PortProperty_Valid@F6830 shr (0+16))
 18852  013CC4  6EF8               	movwf	tblptru,c
 18853  013CC6                     	endif
 18854  013CC6  EE20  F0CF         	lfsr	2,PortProperty_Valid@Errors
 18855  013CCA  0E0F               	movlw	15
 18856  013CCC                     u9460:
 18857  013CCC  0009               	tblrd		*+
 18858  013CCE  CFF5 FFDE          	movff	tablat,postinc2
 18859  013CD2  06E8               	decf	wreg,f,c
 18860  013CD4  E2FB               	bc	u9460
 18861                           
 18862                           ;Types.c: 232: Pair = (ePinDrive)Word_GetPair(&(pInput->mType), pPin);
 18863  013CD6  C0C9  F0C6         	movff	PortProperty_Valid@pInput,Word_GetPair@pInput
 18864  013CDA  C0CA  F0C7         	movff	PortProperty_Valid@pInput+1,Word_GetPair@pInput+1
 18865  013CDE  C0CC  F0C8         	movff	PortProperty_Valid@pPin,Word_GetPair@pPair
 18866  013CE2  ECAE  F0A3         	call	_Word_GetPair	;wreg free
 18867  013CE6  0100               	movlb	0	; () banked
 18868  013CE8  6FDF               	movwf	PortProperty_Valid@Pair& (0+255),b
 18869                           
 18870                           ; BSR set to: 0
 18871                           ;Types.c: 234: if (pPinDrive < 4 && Pair < 4)
 18872  013CEA  0E04               	movlw	4
 18873  013CEC  0100               	movlb	0	; () banked
 18874  013CEE  61CB               	cpfslt	PortProperty_Valid@pPinDrive& (0+255),b
 18875  013CF0  D020               	goto	l819
 18876                           
 18877                           ; BSR set to: 0
 18878  013CF2  0E04               	movlw	4
 18879  013CF4  0100               	movlb	0	; () banked
 18880  013CF6  61DF               	cpfslt	PortProperty_Valid@Pair& (0+255),b
 18881  013CF8  D01C               	goto	l819
 18882                           
 18883                           ; BSR set to: 0
 18884                           ;Types.c: 235: return Errors[pPinDrive][Pair];
 18885  013CFA  0100               	movlb	0	; () banked
 18886  013CFC  51CB               	movf	PortProperty_Valid@pPinDrive& (0+255),w,b
 18887  013CFE  0D04               	mullw	4
 18888  013D00  0ECF               	movlw	low PortProperty_Valid@Errors
 18889  013D02  0100               	movlb	0	; () banked
 18890  013D04  6FCD               	movwf	??_PortProperty_Valid& (0+255),b
 18891  013D06  0E00               	movlw	high PortProperty_Valid@Errors
 18892  013D08  0100               	movlb	0	; () banked
 18893  013D0A  6FCE               	movwf	(??_PortProperty_Valid+1)& (0+255),b
 18894  013D0C  50F3               	movf	prodl,w,c
 18895  013D0E  0100               	movlb	0	; () banked
 18896  013D10  27CD               	addwf	??_PortProperty_Valid& (0+255),f,b
 18897  013D12  50F4               	movf	prodh,w,c
 18898  013D14  0100               	movlb	0	; () banked
 18899  013D16  23CE               	addwfc	(??_PortProperty_Valid+1)& (0+255),f,b
 18900  013D18  0100               	movlb	0	; () banked
 18901  013D1A  51DF               	movf	PortProperty_Valid@Pair& (0+255),w,b
 18902  013D1C  0D01               	mullw	1
 18903  013D1E  50F3               	movf	prodl,w,c
 18904  013D20  0100               	movlb	0	; () banked
 18905  013D22  25CD               	addwf	??_PortProperty_Valid& (0+255),w,b
 18906  013D24  6ED9               	movwf	fsr2l,c
 18907  013D26  50F4               	movf	prodh,w,c
 18908  013D28  0100               	movlb	0	; () banked
 18909  013D2A  21CE               	addwfc	(??_PortProperty_Valid+1)& (0+255),w,b
 18910  013D2C  6EDA               	movwf	fsr2h,c
 18911  013D2E  50DF               	movf	indf2,w,c
 18912                           
 18913                           ; BSR set to: 0
 18914  013D30  0012               	return	
 18915  013D32                     l819:
 18916                           
 18917                           ; BSR set to: 0
 18918                           ;Types.c: 237: return ePinErrorState;
 18919                           
 18920                           ; BSR set to: 0
 18921  013D32  0E05               	movlw	5
 18922  013D34  0012               	return	
 18923  013D36                     __end_of_PortProperty_Valid:
 18924                           	opt stack 0
 18925                           tosu	equ	0xFFF
 18926                           tosh	equ	0xFFE
 18927                           tosl	equ	0xFFD
 18928                           pclath	equ	0xFFA
 18929                           tblptru	equ	0xFF8
 18930                           tblptrh	equ	0xFF7
 18931                           tblptrl	equ	0xFF6
 18932                           tablat	equ	0xFF5
 18933                           prodh	equ	0xFF4
 18934                           prodl	equ	0xFF3
 18935                           intcon	equ	0xFF2
 18936                           postinc0	equ	0xFEE
 18937                           wreg	equ	0xFE8
 18938                           indf1	equ	0xFE7
 18939                           postdec1	equ	0xFE5
 18940                           fsr1h	equ	0xFE2
 18941                           fsr1l	equ	0xFE1
 18942                           indf2	equ	0xFDF
 18943                           postinc2	equ	0xFDE
 18944                           postdec2	equ	0xFDD
 18945                           plusw2	equ	0xFDB
 18946                           fsr2h	equ	0xFDA
 18947                           fsr2l	equ	0xFD9
 18948                           status	equ	0xFD8
 18949                           
 18950 ;; *************** function _Word_GetPair *****************
 18951 ;; Defined at:
 18952 ;;		line 156 in file "Library/Types.c"
 18953 ;; Parameters:    Size  Location     Type
 18954 ;;  pInput          2   12[BANK0 ] PTR struct Word
 18955 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
 18956 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
 18957 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
 18958 ;;		 -> PortC(10), PortF(10), NULL(0), 
 18959 ;;  pPair           1   14[BANK0 ] unsigned char 
 18960 ;; Auto vars:     Size  Location     Type
 18961 ;;		None
 18962 ;; Return value:  Size  Location     Type
 18963 ;;                  1    wreg      unsigned char 
 18964 ;; Registers used:
 18965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18966 ;; Tracked objects:
 18967 ;;		On entry : 0/0
 18968 ;;		On exit  : 0/0
 18969 ;;		Unchanged: 0/0
 18970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18971 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18974 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18975 ;;Total ram usage:        3 bytes
 18976 ;; Hardware stack levels used:    1
 18977 ;; Hardware stack levels required when called:    9
 18978 ;; This function calls:
 18979 ;;		_Byte_GetPair
 18980 ;; This function is called by:
 18981 ;;		_Port_Init
 18982 ;;		_Port_SetPin
 18983 ;;		_Port_Set
 18984 ;;		_PortProperty_Valid
 18985 ;;		_Port_SetPair
 18986 ;;		_Port_SetQuad
 18987 ;; This function uses a non-reentrant model
 18988 ;;
 18989                           
 18990                           	psect	text86
 18991  01475C                     __ptext86:
 18992                           	opt stack 0
 18993  01475C                     _Word_GetPair:
 18994                           	opt stack 17
 18995                           
 18996                           ;Types.c: 158: if (pPair >= 4)
 18997                           
 18998                           ; BSR set to: 0
 18999                           ;incstack = 0
 19000  01475C  0E03               	movlw	3
 19001  01475E  0100               	movlb	0	; () banked
 19002  014760  65C8               	cpfsgt	Word_GetPair@pPair& (0+255),b
 19003  014762  D012               	goto	l781
 19004                           
 19005                           ; BSR set to: 0
 19006                           ;Types.c: 159: return Byte_GetPair(&(pInput->MS_Byte), pPair - 4);
 19007  014764  0E01               	movlw	1
 19008  014766  0100               	movlb	0	; () banked
 19009  014768  25C6               	addwf	Word_GetPair@pInput& (0+255),w,b
 19010  01476A  0100               	movlb	0	; () banked
 19011  01476C  6FC3               	movwf	Byte_GetPair@pInput& (0+255),b
 19012  01476E  0E00               	movlw	0
 19013  014770  0100               	movlb	0	; () banked
 19014  014772  21C7               	addwfc	(Word_GetPair@pInput+1)& (0+255),w,b
 19015  014774  0100               	movlb	0	; () banked
 19016  014776  6FC4               	movwf	(Byte_GetPair@pInput+1)& (0+255),b
 19017  014778  0100               	movlb	0	; () banked
 19018  01477A  51C8               	movf	Word_GetPair@pPair& (0+255),w,b
 19019  01477C  0FFC               	addlw	252
 19020  01477E  0100               	movlb	0	; () banked
 19021  014780  6FC5               	movwf	Byte_GetPair@pPair& (0+255),b
 19022  014782  EC3C  F0A5         	call	_Byte_GetPair	;wreg free
 19023  014786  0012               	return	
 19024  014788                     l781:
 19025                           
 19026                           ;Types.c: 160: else
 19027                           ;Types.c: 161: return Byte_GetPair(&(pInput->LS_Byte), pPair);
 19028  014788  C0C6  F0C3         	movff	Word_GetPair@pInput,Byte_GetPair@pInput
 19029  01478C  C0C7  F0C4         	movff	Word_GetPair@pInput+1,Byte_GetPair@pInput+1
 19030  014790  C0C8  F0C5         	movff	Word_GetPair@pPair,Byte_GetPair@pPair
 19031  014794  EC3C  F0A5         	call	_Byte_GetPair	;wreg free
 19032  014798  0012               	return	
 19033  01479A                     __end_of_Word_GetPair:
 19034                           	opt stack 0
 19035                           tosu	equ	0xFFF
 19036                           tosh	equ	0xFFE
 19037                           tosl	equ	0xFFD
 19038                           pclath	equ	0xFFA
 19039                           tblptru	equ	0xFF8
 19040                           tblptrh	equ	0xFF7
 19041                           tblptrl	equ	0xFF6
 19042                           tablat	equ	0xFF5
 19043                           prodh	equ	0xFF4
 19044                           prodl	equ	0xFF3
 19045                           intcon	equ	0xFF2
 19046                           postinc0	equ	0xFEE
 19047                           wreg	equ	0xFE8
 19048                           indf1	equ	0xFE7
 19049                           postdec1	equ	0xFE5
 19050                           fsr1h	equ	0xFE2
 19051                           fsr1l	equ	0xFE1
 19052                           indf2	equ	0xFDF
 19053                           postinc2	equ	0xFDE
 19054                           postdec2	equ	0xFDD
 19055                           plusw2	equ	0xFDB
 19056                           fsr2h	equ	0xFDA
 19057                           fsr2l	equ	0xFD9
 19058                           status	equ	0xFD8
 19059                           
 19060 ;; *************** function _Byte_GetPair *****************
 19061 ;; Defined at:
 19062 ;;		line 87 in file "Library/Types.c"
 19063 ;; Parameters:    Size  Location     Type
 19064 ;;  pInput          2    9[BANK0 ] PTR struct Byte
 19065 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
 19066 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
 19067 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
 19068 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
 19069 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
 19070 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
 19071 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
 19072 ;;		 -> NULL(0), 
 19073 ;;  pPair           1   11[BANK0 ] unsigned char 
 19074 ;; Auto vars:     Size  Location     Type
 19075 ;;		None
 19076 ;; Return value:  Size  Location     Type
 19077 ;;                  1    wreg      unsigned char 
 19078 ;; Registers used:
 19079 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19080 ;; Tracked objects:
 19081 ;;		On entry : 0/0
 19082 ;;		On exit  : 0/0
 19083 ;;		Unchanged: 0/0
 19084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19085 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19088 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19089 ;;Total ram usage:        3 bytes
 19090 ;; Hardware stack levels used:    1
 19091 ;; Hardware stack levels required when called:    8
 19092 ;; This function calls:
 19093 ;;		_Byte_GetZone
 19094 ;; This function is called by:
 19095 ;;		_Word_GetPair
 19096 ;; This function uses a non-reentrant model
 19097 ;;
 19098                           
 19099                           	psect	text87
 19100  014A78                     __ptext87:
 19101                           	opt stack 0
 19102  014A78                     _Byte_GetPair:
 19103                           	opt stack 17
 19104                           
 19105                           ;Types.c: 89: return Byte_GetZone(pInput, 4, pPair, 2);
 19106                           
 19107                           ;incstack = 0
 19108  014A78  C0C3  F0BA         	movff	Byte_GetPair@pInput,Byte_GetZone@pInput
 19109  014A7C  C0C4  F0BB         	movff	Byte_GetPair@pInput+1,Byte_GetZone@pInput+1
 19110  014A80  0E04               	movlw	4
 19111  014A82  0100               	movlb	0	; () banked
 19112  014A84  6FBC               	movwf	Byte_GetZone@pMax& (0+255),b
 19113  014A86  C0C5  F0BD         	movff	Byte_GetPair@pPair,Byte_GetZone@pChunk
 19114  014A8A  0E02               	movlw	2
 19115  014A8C  0100               	movlb	0	; () banked
 19116  014A8E  6FBE               	movwf	Byte_GetZone@pChunkSize& (0+255),b
 19117  014A90  EC6F  F09C         	call	_Byte_GetZone	;wreg free
 19118  014A94  0012               	return	
 19119  014A96                     __end_of_Byte_GetPair:
 19120                           	opt stack 0
 19121                           tosu	equ	0xFFF
 19122                           tosh	equ	0xFFE
 19123                           tosl	equ	0xFFD
 19124                           pclath	equ	0xFFA
 19125                           tblptru	equ	0xFF8
 19126                           tblptrh	equ	0xFF7
 19127                           tblptrl	equ	0xFF6
 19128                           tablat	equ	0xFF5
 19129                           prodh	equ	0xFF4
 19130                           prodl	equ	0xFF3
 19131                           intcon	equ	0xFF2
 19132                           postinc0	equ	0xFEE
 19133                           wreg	equ	0xFE8
 19134                           indf1	equ	0xFE7
 19135                           postdec1	equ	0xFE5
 19136                           fsr1h	equ	0xFE2
 19137                           fsr1l	equ	0xFE1
 19138                           indf2	equ	0xFDF
 19139                           postinc2	equ	0xFDE
 19140                           postdec2	equ	0xFDD
 19141                           plusw2	equ	0xFDB
 19142                           fsr2h	equ	0xFDA
 19143                           fsr2l	equ	0xFD9
 19144                           status	equ	0xFD8
 19145                           
 19146 ;; *************** function _Byte_GetZone *****************
 19147 ;; Defined at:
 19148 ;;		line 64 in file "Library/Types.c"
 19149 ;; Parameters:    Size  Location     Type
 19150 ;;  pInput          2    0[BANK0 ] PTR struct Byte
 19151 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
 19152 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
 19153 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
 19154 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
 19155 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
 19156 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
 19157 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
 19158 ;;		 -> NULL(0), 
 19159 ;;  pMax            1    2[BANK0 ] unsigned char 
 19160 ;;  pChunk          1    3[BANK0 ] unsigned char 
 19161 ;;  pChunkSize      1    4[BANK0 ] unsigned char 
 19162 ;; Auto vars:     Size  Location     Type
 19163 ;;  Output          1    8[BANK0 ] unsigned char 
 19164 ;;  Offset          1    7[BANK0 ] unsigned char 
 19165 ;;  MASK            1    6[BANK0 ] unsigned char 
 19166 ;; Return value:  Size  Location     Type
 19167 ;;                  1    wreg      unsigned char 
 19168 ;; Registers used:
 19169 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19170 ;; Tracked objects:
 19171 ;;		On entry : 0/0
 19172 ;;		On exit  : 0/0
 19173 ;;		Unchanged: 0/0
 19174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19175 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19176 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19177 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19178 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19179 ;;Total ram usage:        9 bytes
 19180 ;; Hardware stack levels used:    1
 19181 ;; Hardware stack levels required when called:    7
 19182 ;; This function calls:
 19183 ;;		Nothing
 19184 ;; This function is called by:
 19185 ;;		_Byte_GetPair
 19186 ;;		_Byte_GetTriple
 19187 ;;		_Byte_GetQuad
 19188 ;; This function uses a non-reentrant model
 19189 ;;
 19190                           
 19191                           	psect	text88
 19192  0138DE                     __ptext88:
 19193                           	opt stack 0
 19194  0138DE                     _Byte_GetZone:
 19195                           	opt stack 17
 19196                           
 19197                           ;Types.c: 66: UINT8 Output = pInput->mBits;
 19198                           
 19199                           ;incstack = 0
 19200  0138DE  C0BA  FFF6         	movff	Byte_GetZone@pInput,tblptrl
 19201  0138E2  C0BB  FFF7         	movff	Byte_GetZone@pInput+1,tblptrh
 19202  0138E6  0E00               	movlw	low (__mediumconst shr (0+16))
 19203  0138E8  6EF8               	movwf	tblptru,c
 19204  0138EA  0E0F               	movlw	(high __ramtop+-1)
 19205  0138EC  64F7               	cpfsgt	tblptrh,c
 19206  0138EE  D003               	bra	u9427
 19207  0138F0  0008               	tblrd		*
 19208  0138F2  50F5               	movf	tablat,w,c
 19209  0138F4  D005               	bra	u9420
 19210  0138F6                     u9427:
 19211  0138F6  CFF6 FFE9          	movff	tblptrl,fsr0l
 19212  0138FA  CFF7 FFEA          	movff	tblptrh,fsr0h
 19213  0138FE  50EF               	movf	indf0,w,c
 19214  013900                     u9420:
 19215  013900  0100               	movlb	0	; () banked
 19216  013902  6FC2               	movwf	Byte_GetZone@Output& (0+255),b
 19217                           
 19218                           ; BSR set to: 0
 19219                           ;Types.c: 67: UINT8 MASK = MASKS[pChunkSize];
 19220  013904  0100               	movlb	0	; () banked
 19221  013906  51BE               	movf	Byte_GetZone@pChunkSize& (0+255),w,b
 19222  013908  0D01               	mullw	1
 19223  01390A  0ECF               	movlw	low _MASKS
 19224  01390C  24F3               	addwf	prodl,w,c
 19225  01390E  6EF6               	movwf	tblptrl,c
 19226  013910  0EFD               	movlw	high _MASKS
 19227  013912  20F4               	addwfc	prodh,w,c
 19228  013914  6EF7               	movwf	tblptrh,c
 19229  013916                     	if	1	;There are 3 active tblptr bytes
 19230  013916  6AF8               	clrf	tblptru,c
 19231  013918  0E00               	movlw	low (__mediumconst shr (0+16))
 19232  01391A  22F8               	addwfc	tblptru,f,c
 19233  01391C                     	endif
 19234  01391C  0008               	tblrd		*
 19235  01391E  CFF5 F0C0          	movff	tablat,Byte_GetZone@MASK
 19236                           
 19237                           ; BSR set to: 0
 19238                           ;Types.c: 68: UINT8 Offset = 0;
 19239  013922  0E00               	movlw	0
 19240  013924  0100               	movlb	0	; () banked
 19241  013926  6FC1               	movwf	Byte_GetZone@Offset& (0+255),b
 19242                           
 19243                           ;Types.c: 70: while (pChunk >= pMax)
 19244  013928  D006               	goto	l732
 19245  01392A                     
 19246                           ; BSR set to: 0
 19247                           ;Types.c: 71: {
 19248                           ;Types.c: 72: pChunk -= pMax;
 19249                           
 19250                           ; BSR set to: 0
 19251  01392A  0100               	movlb	0	; () banked
 19252  01392C  51BC               	movf	Byte_GetZone@pMax& (0+255),w,b
 19253  01392E  0100               	movlb	0	; () banked
 19254  013930  5FBD               	subwf	Byte_GetZone@pChunk& (0+255),f,b
 19255                           
 19256                           ; BSR set to: 0
 19257                           ;Types.c: 73: Offset += 1;
 19258  013932  0100               	movlb	0	; () banked
 19259  013934  2BC1               	incf	Byte_GetZone@Offset& (0+255),f,b
 19260  013936                     l732:
 19261                           
 19262                           ; BSR set to: 0
 19263                           
 19264                           ; BSR set to: 0
 19265  013936  0100               	movlb	0	; () banked
 19266  013938  51BC               	movf	Byte_GetZone@pMax& (0+255),w,b
 19267  01393A  0100               	movlb	0	; () banked
 19268  01393C  5DBD               	subwf	Byte_GetZone@pChunk& (0+255),w,b
 19269  01393E  B0D8               	btfsc	status,0,c
 19270  013940  D7F4               	goto	l733
 19271                           
 19272                           ; BSR set to: 0
 19273                           ;Types.c: 74: }
 19274                           ;Types.c: 75: pChunk *= pChunkSize;
 19275                           
 19276                           ; BSR set to: 0
 19277  013942  0100               	movlb	0	; () banked
 19278  013944  51BE               	movf	Byte_GetZone@pChunkSize& (0+255),w,b
 19279  013946  0100               	movlb	0	; () banked
 19280  013948  03BD               	mulwf	Byte_GetZone@pChunk& (0+255),b
 19281  01394A  50F3               	movf	prodl,w,c
 19282  01394C  6FBD               	movwf	Byte_GetZone@pChunk& (0+255),b
 19283                           
 19284                           ; BSR set to: 0
 19285                           ;Types.c: 76: pChunk += Offset;
 19286  01394E  0100               	movlb	0	; () banked
 19287  013950  51C1               	movf	Byte_GetZone@Offset& (0+255),w,b
 19288  013952  0100               	movlb	0	; () banked
 19289  013954  27BD               	addwf	Byte_GetZone@pChunk& (0+255),f,b
 19290                           
 19291                           ; BSR set to: 0
 19292                           ;Types.c: 78: Output >>= pChunk;
 19293  013956  0100               	movlb	0	; () banked
 19294  013958  29BD               	incf	Byte_GetZone@pChunk& (0+255),w,b
 19295  01395A  0100               	movlb	0	; () banked
 19296  01395C  6FBF               	movwf	??_Byte_GetZone& (0+255),b
 19297  01395E  D003               	goto	u9440
 19298  013960                     u9445:
 19299  013960  0100               	movlb	0	; () banked
 19300  013962  90D8               	bcf	status,0,c
 19301  013964  33C2               	rrcf	Byte_GetZone@Output& (0+255),f,b
 19302  013966                     u9440:
 19303  013966  0100               	movlb	0	; () banked
 19304  013968  2FBF               	decfsz	??_Byte_GetZone& (0+255),f,b
 19305  01396A  D7FA               	goto	u9445
 19306                           
 19307                           ;Types.c: 79: Output &= MASK;
 19308  01396C  0100               	movlb	0	; () banked
 19309  01396E  51C0               	movf	Byte_GetZone@MASK& (0+255),w,b
 19310  013970  0100               	movlb	0	; () banked
 19311  013972  17C2               	andwf	Byte_GetZone@Output& (0+255),f,b
 19312                           
 19313                           ; BSR set to: 0
 19314                           ;Types.c: 80: return Output;
 19315  013974  0100               	movlb	0	; () banked
 19316  013976  51C2               	movf	Byte_GetZone@Output& (0+255),w,b
 19317  013978  0012               	return	
 19318  01397A                     __end_of_Byte_GetZone:
 19319                           	opt stack 0
 19320                           tosu	equ	0xFFF
 19321                           tosh	equ	0xFFE
 19322                           tosl	equ	0xFFD
 19323                           pclath	equ	0xFFA
 19324                           tblptru	equ	0xFF8
 19325                           tblptrh	equ	0xFF7
 19326                           tblptrl	equ	0xFF6
 19327                           tablat	equ	0xFF5
 19328                           prodh	equ	0xFF4
 19329                           prodl	equ	0xFF3
 19330                           intcon	equ	0xFF2
 19331                           indf0	equ	0xFEF
 19332                           postinc0	equ	0xFEE
 19333                           fsr0h	equ	0xFEA
 19334                           fsr0l	equ	0xFE9
 19335                           wreg	equ	0xFE8
 19336                           indf1	equ	0xFE7
 19337                           postdec1	equ	0xFE5
 19338                           fsr1h	equ	0xFE2
 19339                           fsr1l	equ	0xFE1
 19340                           indf2	equ	0xFDF
 19341                           postinc2	equ	0xFDE
 19342                           postdec2	equ	0xFDD
 19343                           plusw2	equ	0xFDB
 19344                           fsr2h	equ	0xFDA
 19345                           fsr2l	equ	0xFD9
 19346                           status	equ	0xFD8
 19347                           
 19348 ;; *************** function _Byte_SetQuad *****************
 19349 ;; Defined at:
 19350 ;;		line 101 in file "Library/Types.c"
 19351 ;; Parameters:    Size  Location     Type
 19352 ;;  pInput          2   11[BANK0 ] PTR struct Byte
 19353 ;;		 -> SSP2CON1(1), SSP1CON1(1), TRISG(1), TRISF(1), 
 19354 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
 19355 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
 19356 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
 19357 ;;		 -> NULL(0), 
 19358 ;;  pQuad           1   13[BANK0 ] unsigned char 
 19359 ;;  pValue          1   14[BANK0 ] unsigned char 
 19360 ;; Auto vars:     Size  Location     Type
 19361 ;;		None
 19362 ;; Return value:  Size  Location     Type
 19363 ;;                  1    wreg      void 
 19364 ;; Registers used:
 19365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19366 ;; Tracked objects:
 19367 ;;		On entry : 0/0
 19368 ;;		On exit  : 0/0
 19369 ;;		Unchanged: 0/0
 19370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19371 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19374 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19375 ;;Total ram usage:        4 bytes
 19376 ;; Hardware stack levels used:    1
 19377 ;; Hardware stack levels required when called:    8
 19378 ;; This function calls:
 19379 ;;		_Byte_SetZone
 19380 ;; This function is called by:
 19381 ;;		_Port_SetQuadType
 19382 ;;		_SPI_Init
 19383 ;;		_SPI_MinSpeed
 19384 ;;		_SPI_MaxSpeed
 19385 ;;		_Port_SetQuad
 19386 ;;		_Word_SetQuad
 19387 ;;		_I2C_Init
 19388 ;; This function uses a non-reentrant model
 19389 ;;
 19390                           
 19391                           	psect	text89
 19392  014982                     __ptext89:
 19393                           	opt stack 0
 19394  014982                     _Byte_SetQuad:
 19395                           	opt stack 19
 19396                           
 19397                           ;Types.c: 103: Byte_SetZone(pInput, 2, pQuad, 4, pValue);
 19398                           
 19399                           ; BSR set to: 0
 19400                           ;incstack = 0
 19401  014982  C0C5  F0BA         	movff	Byte_SetQuad@pInput,Byte_SetZone@pInput
 19402  014986  C0C6  F0BB         	movff	Byte_SetQuad@pInput+1,Byte_SetZone@pInput+1
 19403  01498A  0E02               	movlw	2
 19404  01498C  0100               	movlb	0	; () banked
 19405  01498E  6FBC               	movwf	Byte_SetZone@pMax& (0+255),b
 19406  014990  C0C7  F0BD         	movff	Byte_SetQuad@pQuad,Byte_SetZone@pChunk
 19407  014994  0E04               	movlw	4
 19408  014996  0100               	movlb	0	; () banked
 19409  014998  6FBE               	movwf	Byte_SetZone@pChunkSize& (0+255),b
 19410  01499A  C0C8  F0BF         	movff	Byte_SetQuad@pValue,Byte_SetZone@pValue
 19411  01499E  EC71  F09A         	call	_Byte_SetZone	;wreg free
 19412  0149A2  0012               	return		;funcret
 19413  0149A4                     __end_of_Byte_SetQuad:
 19414                           	opt stack 0
 19415                           tosu	equ	0xFFF
 19416                           tosh	equ	0xFFE
 19417                           tosl	equ	0xFFD
 19418                           pclath	equ	0xFFA
 19419                           tblptru	equ	0xFF8
 19420                           tblptrh	equ	0xFF7
 19421                           tblptrl	equ	0xFF6
 19422                           tablat	equ	0xFF5
 19423                           prodh	equ	0xFF4
 19424                           prodl	equ	0xFF3
 19425                           intcon	equ	0xFF2
 19426                           indf0	equ	0xFEF
 19427                           postinc0	equ	0xFEE
 19428                           fsr0h	equ	0xFEA
 19429                           fsr0l	equ	0xFE9
 19430                           wreg	equ	0xFE8
 19431                           indf1	equ	0xFE7
 19432                           postdec1	equ	0xFE5
 19433                           fsr1h	equ	0xFE2
 19434                           fsr1l	equ	0xFE1
 19435                           indf2	equ	0xFDF
 19436                           postinc2	equ	0xFDE
 19437                           postdec2	equ	0xFDD
 19438                           plusw2	equ	0xFDB
 19439                           fsr2h	equ	0xFDA
 19440                           fsr2l	equ	0xFD9
 19441                           status	equ	0xFD8
 19442                           
 19443 ;; *************** function _Byte_SetZone *****************
 19444 ;; Defined at:
 19445 ;;		line 47 in file "Library/Types.c"
 19446 ;; Parameters:    Size  Location     Type
 19447 ;;  pInput          2    0[BANK0 ] PTR struct Byte
 19448 ;;		 -> PortF..(2), PortC..(2), PortD..(2), PortE..(2), 
 19449 ;;		 -> PortB..(2), PortA..(2), PortG..(2), PortG(10), 
 19450 ;;		 -> PortA(10), PortB(10), PortE(10), SSP2CON1(1), 
 19451 ;;		 -> PortD(10), SSP1CON1(1), TRISG(1), TRISF(1), 
 19452 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
 19453 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
 19454 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
 19455 ;;		 -> PortC(10), PortF(10), NULL(0), 
 19456 ;;  pMax            1    2[BANK0 ] unsigned char 
 19457 ;;  pChunk          1    3[BANK0 ] unsigned char 
 19458 ;;  pChunkSize      1    4[BANK0 ] unsigned char 
 19459 ;;  pValue          1    5[BANK0 ] unsigned char 
 19460 ;; Auto vars:     Size  Location     Type
 19461 ;;  MASK            1   10[BANK0 ] unsigned char 
 19462 ;;  Offset          1    9[BANK0 ] unsigned char 
 19463 ;; Return value:  Size  Location     Type
 19464 ;;                  1    wreg      void 
 19465 ;; Registers used:
 19466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19467 ;; Tracked objects:
 19468 ;;		On entry : 0/0
 19469 ;;		On exit  : 0/0
 19470 ;;		Unchanged: 0/0
 19471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19472 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19473 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19474 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19475 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19476 ;;Total ram usage:       11 bytes
 19477 ;; Hardware stack levels used:    1
 19478 ;; Hardware stack levels required when called:    7
 19479 ;; This function calls:
 19480 ;;		Nothing
 19481 ;; This function is called by:
 19482 ;;		_Byte_SetPair
 19483 ;;		_Byte_SetQuad
 19484 ;;		_Byte_SetTriple
 19485 ;; This function uses a non-reentrant model
 19486 ;;
 19487                           
 19488                           	psect	text90
 19489  0134E2                     __ptext90:
 19490                           	opt stack 0
 19491  0134E2                     _Byte_SetZone:
 19492                           	opt stack 18
 19493                           
 19494                           ;Types.c: 49: UINT8 MASK = MASKS[pChunkSize];
 19495                           
 19496                           ;incstack = 0
 19497  0134E2  0100               	movlb	0	; () banked
 19498  0134E4  51BE               	movf	Byte_SetZone@pChunkSize& (0+255),w,b
 19499  0134E6  0D01               	mullw	1
 19500  0134E8  0ECF               	movlw	low _MASKS
 19501  0134EA  24F3               	addwf	prodl,w,c
 19502  0134EC  6EF6               	movwf	tblptrl,c
 19503  0134EE  0EFD               	movlw	high _MASKS
 19504  0134F0  20F4               	addwfc	prodh,w,c
 19505  0134F2  6EF7               	movwf	tblptrh,c
 19506  0134F4                     	if	1	;There are 3 active tblptr bytes
 19507  0134F4  6AF8               	clrf	tblptru,c
 19508  0134F6  0E00               	movlw	low (__mediumconst shr (0+16))
 19509  0134F8  22F8               	addwfc	tblptru,f,c
 19510  0134FA                     	endif
 19511  0134FA  0008               	tblrd		*
 19512  0134FC  CFF5 F0C4          	movff	tablat,Byte_SetZone@MASK
 19513                           
 19514                           ; BSR set to: 0
 19515                           ;Types.c: 50: UINT8 Offset = 0;
 19516  013500  0E00               	movlw	0
 19517  013502  0100               	movlb	0	; () banked
 19518  013504  6FC3               	movwf	Byte_SetZone@Offset& (0+255),b
 19519                           
 19520                           ;Types.c: 52: while (pChunk >= pMax)
 19521  013506  D006               	goto	l726
 19522  013508                     
 19523                           ; BSR set to: 0
 19524                           ;Types.c: 53: {
 19525                           ;Types.c: 54: pChunk -= pMax;
 19526                           
 19527                           ; BSR set to: 0
 19528  013508  0100               	movlb	0	; () banked
 19529  01350A  51BC               	movf	Byte_SetZone@pMax& (0+255),w,b
 19530  01350C  0100               	movlb	0	; () banked
 19531  01350E  5FBD               	subwf	Byte_SetZone@pChunk& (0+255),f,b
 19532                           
 19533                           ; BSR set to: 0
 19534                           ;Types.c: 55: Offset += 1;
 19535  013510  0100               	movlb	0	; () banked
 19536  013512  2BC3               	incf	Byte_SetZone@Offset& (0+255),f,b
 19537  013514                     l726:
 19538                           
 19539                           ; BSR set to: 0
 19540                           
 19541                           ; BSR set to: 0
 19542  013514  0100               	movlb	0	; () banked
 19543  013516  51BC               	movf	Byte_SetZone@pMax& (0+255),w,b
 19544  013518  0100               	movlb	0	; () banked
 19545  01351A  5DBD               	subwf	Byte_SetZone@pChunk& (0+255),w,b
 19546  01351C  B0D8               	btfsc	status,0,c
 19547  01351E  D7F4               	goto	l727
 19548                           
 19549                           ; BSR set to: 0
 19550                           ;Types.c: 56: }
 19551                           ;Types.c: 57: pChunk *= pChunkSize;
 19552                           
 19553                           ; BSR set to: 0
 19554  013520  0100               	movlb	0	; () banked
 19555  013522  51BE               	movf	Byte_SetZone@pChunkSize& (0+255),w,b
 19556  013524  0100               	movlb	0	; () banked
 19557  013526  03BD               	mulwf	Byte_SetZone@pChunk& (0+255),b
 19558  013528  50F3               	movf	prodl,w,c
 19559  01352A  6FBD               	movwf	Byte_SetZone@pChunk& (0+255),b
 19560                           
 19561                           ; BSR set to: 0
 19562                           ;Types.c: 58: pChunk += Offset;
 19563  01352C  0100               	movlb	0	; () banked
 19564  01352E  51C3               	movf	Byte_SetZone@Offset& (0+255),w,b
 19565  013530  0100               	movlb	0	; () banked
 19566  013532  27BD               	addwf	Byte_SetZone@pChunk& (0+255),f,b
 19567                           
 19568                           ; BSR set to: 0
 19569                           ;Types.c: 60: pValue &= MASK;
 19570  013534  0100               	movlb	0	; () banked
 19571  013536  51C4               	movf	Byte_SetZone@MASK& (0+255),w,b
 19572  013538  0100               	movlb	0	; () banked
 19573  01353A  17BF               	andwf	Byte_SetZone@pValue& (0+255),f,b
 19574                           
 19575                           ; BSR set to: 0
 19576                           ;Types.c: 61: pInput->mBits &= ~(MASK << pChunk);
 19577  01353C  C0BD  F0C0         	movff	Byte_SetZone@pChunk,??_Byte_SetZone
 19578  013540  C0C4  F0C1         	movff	Byte_SetZone@MASK,??_Byte_SetZone+1
 19579  013544  0100               	movlb	0	; () banked
 19580  013546  2BC0               	incf	??_Byte_SetZone& (0+255),f,b
 19581  013548  D003               	goto	u9524
 19582  01354A                     u9525:
 19583  01354A  0100               	movlb	0	; () banked
 19584  01354C  90D8               	bcf	status,0,c
 19585  01354E  37C1               	rlcf	(??_Byte_SetZone+1)& (0+255),f,b
 19586  013550                     u9524:
 19587  013550  0100               	movlb	0	; () banked
 19588  013552  2FC0               	decfsz	??_Byte_SetZone& (0+255),f,b
 19589  013554  D7FA               	goto	u9525
 19590  013556  0100               	movlb	0	; () banked
 19591  013558  51C1               	movf	(??_Byte_SetZone+1)& (0+255),w,b
 19592  01355A  0AFF               	xorlw	255
 19593  01355C  0100               	movlb	0	; () banked
 19594  01355E  6FC2               	movwf	(??_Byte_SetZone+2)& (0+255),b
 19595  013560  C0BA  FFD9         	movff	Byte_SetZone@pInput,fsr2l
 19596  013564  C0BB  FFDA         	movff	Byte_SetZone@pInput+1,fsr2h
 19597  013568  0100               	movlb	0	; () banked
 19598  01356A  51C2               	movf	(??_Byte_SetZone+2)& (0+255),w,b
 19599  01356C  16DF               	andwf	indf2,f,c
 19600                           
 19601                           ; BSR set to: 0
 19602                           ;Types.c: 62: pInput->mBits |= pValue << pChunk;
 19603  01356E  C0BD  F0C0         	movff	Byte_SetZone@pChunk,??_Byte_SetZone
 19604  013572  C0BF  F0C1         	movff	Byte_SetZone@pValue,??_Byte_SetZone+1
 19605  013576  0100               	movlb	0	; () banked
 19606  013578  2BC0               	incf	??_Byte_SetZone& (0+255),f,b
 19607  01357A  D003               	goto	u9534
 19608  01357C                     u9535:
 19609  01357C  0100               	movlb	0	; () banked
 19610  01357E  90D8               	bcf	status,0,c
 19611  013580  37C1               	rlcf	(??_Byte_SetZone+1)& (0+255),f,b
 19612  013582                     u9534:
 19613  013582  0100               	movlb	0	; () banked
 19614  013584  2FC0               	decfsz	??_Byte_SetZone& (0+255),f,b
 19615  013586  D7FA               	goto	u9535
 19616  013588  C0BA  FFD9         	movff	Byte_SetZone@pInput,fsr2l
 19617  01358C  C0BB  FFDA         	movff	Byte_SetZone@pInput+1,fsr2h
 19618  013590  0100               	movlb	0	; () banked
 19619  013592  51C1               	movf	(??_Byte_SetZone+1)& (0+255),w,b
 19620  013594  12DF               	iorwf	indf2,f,c
 19621                           
 19622                           ; BSR set to: 0
 19623  013596  0012               	return		;funcret
 19624  013598                     __end_of_Byte_SetZone:
 19625                           	opt stack 0
 19626                           tosu	equ	0xFFF
 19627                           tosh	equ	0xFFE
 19628                           tosl	equ	0xFFD
 19629                           pclath	equ	0xFFA
 19630                           tblptru	equ	0xFF8
 19631                           tblptrh	equ	0xFF7
 19632                           tblptrl	equ	0xFF6
 19633                           tablat	equ	0xFF5
 19634                           prodh	equ	0xFF4
 19635                           prodl	equ	0xFF3
 19636                           intcon	equ	0xFF2
 19637                           indf0	equ	0xFEF
 19638                           postinc0	equ	0xFEE
 19639                           fsr0h	equ	0xFEA
 19640                           fsr0l	equ	0xFE9
 19641                           wreg	equ	0xFE8
 19642                           indf1	equ	0xFE7
 19643                           postdec1	equ	0xFE5
 19644                           fsr1h	equ	0xFE2
 19645                           fsr1l	equ	0xFE1
 19646                           indf2	equ	0xFDF
 19647                           postinc2	equ	0xFDE
 19648                           postdec2	equ	0xFDD
 19649                           plusw2	equ	0xFDB
 19650                           fsr2h	equ	0xFDA
 19651                           fsr2l	equ	0xFD9
 19652                           status	equ	0xFD8
 19653                           
 19654 ;; *************** function _Console_Init *****************
 19655 ;; Defined at:
 19656 ;;		line 157 in file "Library/Console.c"
 19657 ;; Parameters:    Size  Location     Type
 19658 ;;		None
 19659 ;; Auto vars:     Size  Location     Type
 19660 ;;  y               1    3[BANK0 ] unsigned char 
 19661 ;;  x               1    2[BANK0 ] unsigned char 
 19662 ;; Return value:  Size  Location     Type
 19663 ;;                  1    wreg      void 
 19664 ;; Registers used:
 19665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19666 ;; Tracked objects:
 19667 ;;		On entry : 0/0
 19668 ;;		On exit  : 0/0
 19669 ;;		Unchanged: 0/0
 19670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19672 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19673 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19674 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19675 ;;Total ram usage:        4 bytes
 19676 ;; Hardware stack levels used:    1
 19677 ;; Hardware stack levels required when called:    7
 19678 ;; This function calls:
 19679 ;;		Nothing
 19680 ;; This function is called by:
 19681 ;;		_init
 19682 ;; This function uses a non-reentrant model
 19683 ;;
 19684                           
 19685                           	psect	text91
 19686  013B2E                     __ptext91:
 19687                           	opt stack 0
 19688  013B2E                     _Console_Init:
 19689                           	opt stack 22
 19690                           
 19691                           ;Console.c: 160: lBufferX = 0;
 19692                           
 19693                           ; BSR set to: 0
 19694                           ;incstack = 0
 19695  013B2E  0E00               	movlw	0
 19696  013B30  6E40               	movwf	_lBufferX,c
 19697                           
 19698                           ;Console.c: 161: lBufferY = 0;
 19699  013B32  0E00               	movlw	0
 19700  013B34  6E3F               	movwf	_lBufferY,c
 19701                           
 19702                           ;Console.c: 163: UINT8 x, y;
 19703                           ;Console.c: 164: for (x = 0; x < (UINT8)((128-6)/6); x++)
 19704  013B36  0E00               	movlw	0
 19705  013B38  0100               	movlb	0	; () banked
 19706  013B3A  6FBC               	movwf	Console_Init@x& (0+255),b
 19707  013B3C                     l14394:
 19708                           
 19709                           ; BSR set to: 0
 19710  013B3C  0E13               	movlw	19
 19711  013B3E  0100               	movlb	0	; () banked
 19712  013B40  65BC               	cpfsgt	Console_Init@x& (0+255),b
 19713  013B42  D001               	goto	l976
 19714  013B44  0012               	return	
 19715  013B46                     l976:
 19716                           
 19717                           ; BSR set to: 0
 19718                           ;Console.c: 165: {
 19719                           ;Console.c: 166: for (y = 0; y < (UINT8)((128-6)/8); y++)
 19720                           
 19721                           ; BSR set to: 0
 19722  013B46  0E00               	movlw	0
 19723  013B48  0100               	movlb	0	; () banked
 19724  013B4A  6FBD               	movwf	Console_Init@y& (0+255),b
 19725  013B4C                     l14400:
 19726                           
 19727                           ; BSR set to: 0
 19728  013B4C  0E0E               	movlw	14
 19729  013B4E  0100               	movlb	0	; () banked
 19730  013B50  65BD               	cpfsgt	Console_Init@y& (0+255),b
 19731  013B52  D001               	goto	l978
 19732  013B54  D02C               	goto	u11260
 19733  013B56                     l978:
 19734                           
 19735                           ; BSR set to: 0
 19736                           ;Console.c: 167: {
 19737                           ;Console.c: 168: lBuffer[y][x] = '\0';
 19738                           
 19739                           ; BSR set to: 0
 19740  013B56  0100               	movlb	0	; () banked
 19741  013B58  51BD               	movf	Console_Init@y& (0+255),w,b
 19742  013B5A  0D14               	mullw	20
 19743  013B5C  0E63               	movlw	low _lBuffer
 19744  013B5E  0100               	movlb	0	; () banked
 19745  013B60  6FBA               	movwf	??_Console_Init& (0+255),b
 19746  013B62  0E04               	movlw	high _lBuffer
 19747  013B64  0100               	movlb	0	; () banked
 19748  013B66  6FBB               	movwf	(??_Console_Init+1)& (0+255),b
 19749  013B68  50F3               	movf	prodl,w,c
 19750  013B6A  0100               	movlb	0	; () banked
 19751  013B6C  27BA               	addwf	??_Console_Init& (0+255),f,b
 19752  013B6E  50F4               	movf	prodh,w,c
 19753  013B70  0100               	movlb	0	; () banked
 19754  013B72  23BB               	addwfc	(??_Console_Init+1)& (0+255),f,b
 19755  013B74  0100               	movlb	0	; () banked
 19756  013B76  51BC               	movf	Console_Init@x& (0+255),w,b
 19757  013B78  0D01               	mullw	1
 19758  013B7A  50F3               	movf	prodl,w,c
 19759  013B7C  0100               	movlb	0	; () banked
 19760  013B7E  25BA               	addwf	??_Console_Init& (0+255),w,b
 19761  013B80  6ED9               	movwf	fsr2l,c
 19762  013B82  50F4               	movf	prodh,w,c
 19763  013B84  0100               	movlb	0	; () banked
 19764  013B86  21BB               	addwfc	(??_Console_Init+1)& (0+255),w,b
 19765  013B88  6EDA               	movwf	fsr2h,c
 19766  013B8A  0E00               	movlw	0
 19767  013B8C  6EDF               	movwf	indf2,c
 19768                           
 19769                           ;Console.c: 169: lCBuffer[y] = 0xFFFF;
 19770  013B8E  0100               	movlb	0	; () banked
 19771  013B90  51BD               	movf	Console_Init@y& (0+255),w,b
 19772  013B92  0D02               	mullw	2
 19773  013B94  0E00               	movlw	low _lCBuffer
 19774  013B96  24F3               	addwf	prodl,w,c
 19775  013B98  6ED9               	movwf	fsr2l,c
 19776  013B9A  0E01               	movlw	high _lCBuffer
 19777  013B9C  20F4               	addwfc	prodh,w,c
 19778  013B9E  6EDA               	movwf	fsr2h,c
 19779  013BA0  0EFF               	movlw	255
 19780  013BA2  6EDE               	movwf	postinc2,c
 19781  013BA4  0EFF               	movlw	255
 19782  013BA6  6EDD               	movwf	postdec2,c
 19783                           
 19784                           ; BSR set to: 0
 19785  013BA8  0100               	movlb	0	; () banked
 19786  013BAA  2BBD               	incf	Console_Init@y& (0+255),f,b
 19787  013BAC  D7CF               	goto	l14400
 19788  013BAE                     u11260:
 19789                           
 19790                           ; BSR set to: 0
 19791                           
 19792                           ; BSR set to: 0
 19793  013BAE  0100               	movlb	0	; () banked
 19794  013BB0  2BBC               	incf	Console_Init@x& (0+255),f,b
 19795  013BB2  D7C4               	goto	l14394
 19796  013BB4                     __end_of_Console_Init:
 19797                           	opt stack 0
 19798                           tosu	equ	0xFFF
 19799                           tosh	equ	0xFFE
 19800                           tosl	equ	0xFFD
 19801                           pclath	equ	0xFFA
 19802                           tblptru	equ	0xFF8
 19803                           tblptrh	equ	0xFF7
 19804                           tblptrl	equ	0xFF6
 19805                           tablat	equ	0xFF5
 19806                           prodh	equ	0xFF4
 19807                           prodl	equ	0xFF3
 19808                           intcon	equ	0xFF2
 19809                           indf0	equ	0xFEF
 19810                           postinc0	equ	0xFEE
 19811                           fsr0h	equ	0xFEA
 19812                           fsr0l	equ	0xFE9
 19813                           wreg	equ	0xFE8
 19814                           indf1	equ	0xFE7
 19815                           postdec1	equ	0xFE5
 19816                           fsr1h	equ	0xFE2
 19817                           fsr1l	equ	0xFE1
 19818                           indf2	equ	0xFDF
 19819                           postinc2	equ	0xFDE
 19820                           postdec2	equ	0xFDD
 19821                           plusw2	equ	0xFDB
 19822                           fsr2h	equ	0xFDA
 19823                           fsr2l	equ	0xFD9
 19824                           status	equ	0xFD8
 19825                           
 19826 ;; *************** function _ADC_Start *****************
 19827 ;; Defined at:
 19828 ;;		line 114 in file "Library/ADC.c"
 19829 ;; Parameters:    Size  Location     Type
 19830 ;;  pInput          2    2[BANK0 ] PTR struct ADC
 19831 ;;		 -> ADC_AN3(5), ADC_AN2(5), ADC_AN1(5), ADC_AN0(5), 
 19832 ;;		 -> NULL(0), 
 19833 ;; Auto vars:     Size  Location     Type
 19834 ;;		None
 19835 ;; Return value:  Size  Location     Type
 19836 ;;                  1    wreg      void 
 19837 ;; Registers used:
 19838 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19839 ;; Tracked objects:
 19840 ;;		On entry : 0/0
 19841 ;;		On exit  : 0/0
 19842 ;;		Unchanged: 0/0
 19843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19844 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19846 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19847 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19848 ;;Total ram usage:        4 bytes
 19849 ;; Hardware stack levels used:    1
 19850 ;; Hardware stack levels required when called:    8
 19851 ;; This function calls:
 19852 ;;		_ADC_Off
 19853 ;;		_ADC_On
 19854 ;;		_ADC_SetChannel
 19855 ;; This function is called by:
 19856 ;;		_update_IR_distance
 19857 ;;		_init
 19858 ;;		_FunctADC
 19859 ;; This function uses a non-reentrant model
 19860 ;;
 19861                           
 19862                           	psect	text92
 19863  013BB4                     __ptext92:
 19864                           	opt stack 0
 19865  013BB4                     _ADC_Start:
 19866                           	opt stack 21
 19867                           
 19868                           ;ADC.c: 117: if ((ADCON0bits.GODONE))
 19869                           
 19870                           ; BSR set to: 0
 19871                           ;incstack = 0
 19872  013BB4  B2C2               	btfsc	4034,1,c	;volatile
 19873  013BB6  0012               	return	
 19874  013BB8                     
 19875                           ;ADC.c: 128: {
 19876                           ;ADC.c: 129: ADC_Off();
 19877                           
 19878                           ;ADC.c: 127: for(;;)
 19879  013BB8  ECDE  F0A5         	call	_ADC_Off	;wreg free
 19880                           
 19881                           ;ADC.c: 130: ADC_SetChannel(pInput->mChannel);
 19882  013BBC  C0BC  FFD9         	movff	ADC_Start@pInput,fsr2l
 19883  013BC0  C0BD  FFDA         	movff	ADC_Start@pInput+1,fsr2h
 19884  013BC4  50DF               	movf	indf2,w,c
 19885  013BC6  EC59  F0A5         	call	_ADC_SetChannel
 19886                           
 19887                           ;ADC.c: 131: ADC_On();
 19888  013BCA  ECEB  F0A5         	call	_ADC_On	;wreg free
 19889                           
 19890                           ;ADC.c: 134: (ADCON0bits.GO) = 1;
 19891  013BCE  82C2               	bsf	4034,1,c	;volatile
 19892  013BD0  B2C2               	btfsc	4034,1,c	;volatile
 19893  013BD2  D7FE               	goto	l1280
 19894                           
 19895                           ;ADC.c: 138: pInput->mValue = (ADRESH << 8) | ADRESL;
 19896  013BD4  50C3               	movf	4035,w,c	;volatile
 19897  013BD6  CFC4 F0BE          	movff	4036,??_ADC_Start	;volatile
 19898  013BDA  0100               	movlb	0	; () banked
 19899  013BDC  6BBF               	clrf	(??_ADC_Start+1)& (0+255),b
 19900  013BDE  C0BE  F0BF         	movff	??_ADC_Start,??_ADC_Start+1
 19901  013BE2  0100               	movlb	0	; () banked
 19902  013BE4  6BBE               	clrf	??_ADC_Start& (0+255),b
 19903  013BE6  0100               	movlb	0	; () banked
 19904  013BE8  13BE               	iorwf	??_ADC_Start& (0+255),f,b
 19905  013BEA  0E00               	movlw	0
 19906  013BEC  13BF               	iorwf	(??_ADC_Start+1)& (0+255),f,b
 19907  013BEE  0100               	movlb	0	; () banked
 19908  013BF0  EE20 F001          	lfsr	2,1
 19909  013BF4  51BC               	movf	ADC_Start@pInput& (0+255),w,b
 19910  013BF6  26D9               	addwf	fsr2l,f,c
 19911  013BF8  51BD               	movf	(ADC_Start@pInput+1)& (0+255),w,b
 19912  013BFA  22DA               	addwfc	fsr2h,f,c
 19913  013BFC  C0BE  FFDE         	movff	??_ADC_Start,postinc2
 19914  013C00  C0BF  FFDD         	movff	??_ADC_Start+1,postdec2
 19915                           
 19916                           ;ADC.c: 141: if (pInput->mNext == 0)
 19917  013C04  0100               	movlb	0	; () banked
 19918  013C06  EE20 F003          	lfsr	2,3
 19919  013C0A  51BC               	movf	ADC_Start@pInput& (0+255),w,b
 19920  013C0C  26D9               	addwf	fsr2l,f,c
 19921  013C0E  51BD               	movf	(ADC_Start@pInput+1)& (0+255),w,b
 19922  013C10  22DA               	addwfc	fsr2h,f,c
 19923  013C12  50DE               	movf	postinc2,w,c
 19924  013C14  10DE               	iorwf	postinc2,w,c
 19925  013C16  B4D8               	btfsc	status,2,c
 19926  013C18  D00C               	goto	l1283
 19927                           
 19928                           ; BSR set to: 0
 19929                           ;ADC.c: 145: pInput = pInput->mNext;
 19930                           
 19931                           ; BSR set to: 0
 19932                           
 19933                           ; BSR set to: 0
 19934                           ;ADC.c: 142: break;
 19935  013C1A  0100               	movlb	0	; () banked
 19936  013C1C  EE20 F003          	lfsr	2,3
 19937  013C20  51BC               	movf	ADC_Start@pInput& (0+255),w,b
 19938  013C22  26D9               	addwf	fsr2l,f,c
 19939  013C24  51BD               	movf	(ADC_Start@pInput+1)& (0+255),w,b
 19940  013C26  22DA               	addwfc	fsr2h,f,c
 19941  013C28  CFDE F0BC          	movff	postinc2,ADC_Start@pInput
 19942  013C2C  CFDD F0BD          	movff	postdec2,ADC_Start@pInput+1
 19943                           
 19944                           ;ADC.c: 146: }
 19945  013C30  D7C3               	goto	l1276
 19946  013C32                     l1283:
 19947                           
 19948                           ; BSR set to: 0
 19949                           ;ADC.c: 147: ADC_Off();
 19950                           
 19951                           ; BSR set to: 0
 19952  013C32  ECDE  F0A5         	call	_ADC_Off	;wreg free
 19953  013C36  0012               	return		;funcret
 19954  013C38                     __end_of_ADC_Start:
 19955                           	opt stack 0
 19956                           tosu	equ	0xFFF
 19957                           tosh	equ	0xFFE
 19958                           tosl	equ	0xFFD
 19959                           pclath	equ	0xFFA
 19960                           tblptru	equ	0xFF8
 19961                           tblptrh	equ	0xFF7
 19962                           tblptrl	equ	0xFF6
 19963                           tablat	equ	0xFF5
 19964                           prodh	equ	0xFF4
 19965                           prodl	equ	0xFF3
 19966                           intcon	equ	0xFF2
 19967                           indf0	equ	0xFEF
 19968                           postinc0	equ	0xFEE
 19969                           fsr0h	equ	0xFEA
 19970                           fsr0l	equ	0xFE9
 19971                           wreg	equ	0xFE8
 19972                           indf1	equ	0xFE7
 19973                           postdec1	equ	0xFE5
 19974                           fsr1h	equ	0xFE2
 19975                           fsr1l	equ	0xFE1
 19976                           indf2	equ	0xFDF
 19977                           postinc2	equ	0xFDE
 19978                           postdec2	equ	0xFDD
 19979                           plusw2	equ	0xFDB
 19980                           fsr2h	equ	0xFDA
 19981                           fsr2l	equ	0xFD9
 19982                           status	equ	0xFD8
 19983                           
 19984 ;; *************** function _ADC_Init *****************
 19985 ;; Defined at:
 19986 ;;		line 19 in file "Library/ADC.c"
 19987 ;; Parameters:    Size  Location     Type
 19988 ;;  pInput          2    4[BANK0 ] PTR struct ADC
 19989 ;;		 -> ADC_AN3(5), ADC_AN2(5), ADC_AN1(5), ADC_AN0(5), 
 19990 ;;  pChannel        1    6[BANK0 ] enum E6742
 19991 ;; Auto vars:     Size  Location     Type
 19992 ;;		None
 19993 ;; Return value:  Size  Location     Type
 19994 ;;                  1    wreg      void 
 19995 ;; Registers used:
 19996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19997 ;; Tracked objects:
 19998 ;;		On entry : 0/0
 19999 ;;		On exit  : 0/0
 20000 ;;		Unchanged: 0/0
 20001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20002 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20005 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20006 ;;Total ram usage:        3 bytes
 20007 ;; Hardware stack levels used:    1
 20008 ;; Hardware stack levels required when called:    9
 20009 ;; This function calls:
 20010 ;;		_ADC_Calibrate
 20011 ;;		_ADC_ClockDivision
 20012 ;;		_ADC_ConversionTime
 20013 ;;		_ADC_SetChannel
 20014 ;;		_ADC_SetupIO
 20015 ;; This function is called by:
 20016 ;;		_init
 20017 ;;		_FunctInitADC
 20018 ;; This function uses a non-reentrant model
 20019 ;;
 20020                           
 20021                           	psect	text93
 20022  013D36                     __ptext93:
 20023                           	opt stack 0
 20024  013D36                     _ADC_Init:
 20025                           	opt stack 20
 20026                           
 20027                           ;ADC.c: 21: if(pInput==(void*)0)
 20028                           
 20029                           ;incstack = 0
 20030  013D36  0100               	movlb	0	; () banked
 20031  013D38  51BE               	movf	ADC_Init@pInput& (0+255),w,b
 20032  013D3A  0100               	movlb	0	; () banked
 20033  013D3C  11BF               	iorwf	(ADC_Init@pInput+1)& (0+255),w,b
 20034  013D3E  B4D8               	btfsc	status,2,c
 20035  013D40  0012               	return	
 20036                           
 20037                           ; BSR set to: 0
 20038                           ;ADC.c: 25: lCurrent = pInput;
 20039                           
 20040                           ; BSR set to: 0
 20041                           
 20042                           ; BSR set to: 0
 20043                           ;ADC.c: 22: return;
 20044  013D42  C0BE  F079         	movff	ADC_Init@pInput,_lCurrent
 20045  013D46  C0BF  F07A         	movff	ADC_Init@pInput+1,_lCurrent+1
 20046                           
 20047                           ; BSR set to: 0
 20048                           ;ADC.c: 27: pInput->mChannel = pChannel;
 20049  013D4A  C0BE  FFD9         	movff	ADC_Init@pInput,fsr2l
 20050  013D4E  C0BF  FFDA         	movff	ADC_Init@pInput+1,fsr2h
 20051  013D52  C0C0  FFDF         	movff	ADC_Init@pChannel,indf2
 20052                           
 20053                           ;ADC.c: 28: pInput->mNext = (ADCPtr)0;
 20054  013D56  0100               	movlb	0	; () banked
 20055  013D58  EE20 F003          	lfsr	2,3
 20056  013D5C  51BE               	movf	ADC_Init@pInput& (0+255),w,b
 20057  013D5E  26D9               	addwf	fsr2l,f,c
 20058  013D60  51BF               	movf	(ADC_Init@pInput+1)& (0+255),w,b
 20059  013D62  22DA               	addwfc	fsr2h,f,c
 20060  013D64  0E00               	movlw	0
 20061  013D66  6EDE               	movwf	postinc2,c
 20062  013D68  0E00               	movlw	0
 20063  013D6A  6EDD               	movwf	postdec2,c
 20064                           
 20065                           ;ADC.c: 29: pInput->mValue = 0;
 20066  013D6C  0100               	movlb	0	; () banked
 20067  013D6E  EE20 F001          	lfsr	2,1
 20068  013D72  51BE               	movf	ADC_Init@pInput& (0+255),w,b
 20069  013D74  26D9               	addwf	fsr2l,f,c
 20070  013D76  51BF               	movf	(ADC_Init@pInput+1)& (0+255),w,b
 20071  013D78  22DA               	addwfc	fsr2h,f,c
 20072  013D7A  0E00               	movlw	0
 20073  013D7C  6EDE               	movwf	postinc2,c
 20074  013D7E  0E00               	movlw	0
 20075  013D80  6EDD               	movwf	postdec2,c
 20076                           
 20077                           ; BSR set to: 0
 20078                           ;ADC.c: 32: ADC_SetChannel(pChannel);
 20079  013D82  0100               	movlb	0	; () banked
 20080  013D84  51C0               	movf	ADC_Init@pChannel& (0+255),w,b
 20081  013D86  EC59  F0A5         	call	_ADC_SetChannel
 20082                           
 20083                           ;ADC.c: 35: ADCON0bits.VCFG1 = 0;
 20084  013D8A  9EC2               	bcf	4034,7,c	;volatile
 20085                           
 20086                           ;ADC.c: 36: ADCON0bits.VCFG0 = 0;
 20087  013D8C  9CC2               	bcf	4034,6,c	;volatile
 20088                           
 20089                           ;ADC.c: 39: ADCON1bits.ADFM = 1;
 20090  013D8E  8EC1               	bsf	4033,7,c	;volatile
 20091                           
 20092                           ;ADC.c: 40: ADCON1bits.ADCAL = 1;
 20093  013D90  8CC1               	bsf	4033,6,c	;volatile
 20094                           
 20095                           ;ADC.c: 43: ADC_ConversionTime(12);
 20096  013D92  0E0C               	movlw	12
 20097  013D94  ECA6  F0A2         	call	_ADC_ConversionTime
 20098                           
 20099                           ;ADC.c: 47: ADC_ClockDivision(16);
 20100  013D98  0E10               	movlw	16
 20101  013D9A  EC52  F09D         	call	_ADC_ClockDivision
 20102                           
 20103                           ;ADC.c: 50: ADC_SetupIO(pChannel);
 20104  013D9E  0100               	movlb	0	; () banked
 20105  013DA0  51C0               	movf	ADC_Init@pChannel& (0+255),w,b
 20106  013DA2  ECE8  F0A3         	call	_ADC_SetupIO
 20107                           
 20108                           ;ADC.c: 58: ADC_Initialised = 1;
 20109  013DA6  0E01               	movlw	1
 20110  013DA8  0100               	movlb	0	; () banked
 20111  013DAA  6F8F               	movwf	_ADC_Initialised& (0+255),b
 20112                           
 20113                           ; BSR set to: 0
 20114                           ;ADC.c: 61: ADC_Calibrate();
 20115  013DAC  EC7F  F0A5         	call	_ADC_Calibrate	;wreg free
 20116  013DB0  0012               	return		;funcret
 20117  013DB2                     __end_of_ADC_Init:
 20118                           	opt stack 0
 20119                           tosu	equ	0xFFF
 20120                           tosh	equ	0xFFE
 20121                           tosl	equ	0xFFD
 20122                           pclath	equ	0xFFA
 20123                           tblptru	equ	0xFF8
 20124                           tblptrh	equ	0xFF7
 20125                           tblptrl	equ	0xFF6
 20126                           tablat	equ	0xFF5
 20127                           prodh	equ	0xFF4
 20128                           prodl	equ	0xFF3
 20129                           intcon	equ	0xFF2
 20130                           indf0	equ	0xFEF
 20131                           postinc0	equ	0xFEE
 20132                           fsr0h	equ	0xFEA
 20133                           fsr0l	equ	0xFE9
 20134                           wreg	equ	0xFE8
 20135                           indf1	equ	0xFE7
 20136                           postdec1	equ	0xFE5
 20137                           fsr1h	equ	0xFE2
 20138                           fsr1l	equ	0xFE1
 20139                           indf2	equ	0xFDF
 20140                           postinc2	equ	0xFDE
 20141                           postdec2	equ	0xFDD
 20142                           plusw2	equ	0xFDB
 20143                           fsr2h	equ	0xFDA
 20144                           fsr2l	equ	0xFD9
 20145                           status	equ	0xFD8
 20146                           
 20147 ;; *************** function _ADC_SetupIO *****************
 20148 ;; Defined at:
 20149 ;;		line 150 in file "Library/ADC.c"
 20150 ;; Parameters:    Size  Location     Type
 20151 ;;  pChannel        1    wreg     enum E6742
 20152 ;; Auto vars:     Size  Location     Type
 20153 ;;  pChannel        1    2[BANK0 ] enum E6742
 20154 ;;  MASK            1    3[BANK0 ] unsigned char 
 20155 ;; Return value:  Size  Location     Type
 20156 ;;                  1    wreg      void 
 20157 ;; Registers used:
 20158 ;;		wreg, status,2, status,0
 20159 ;; Tracked objects:
 20160 ;;		On entry : 0/0
 20161 ;;		On exit  : 0/0
 20162 ;;		Unchanged: 0/0
 20163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20165 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20166 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20167 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20168 ;;Total ram usage:        4 bytes
 20169 ;; Hardware stack levels used:    1
 20170 ;; Hardware stack levels required when called:    7
 20171 ;; This function calls:
 20172 ;;		Nothing
 20173 ;; This function is called by:
 20174 ;;		_ADC_Init
 20175 ;; This function uses a non-reentrant model
 20176 ;;
 20177                           
 20178                           	psect	text94
 20179  0147D0                     __ptext94:
 20180                           	opt stack 0
 20181  0147D0                     _ADC_SetupIO:
 20182                           	opt stack 21
 20183                           
 20184                           ;incstack = 0
 20185                           ;ADC_SetupIO@pChannel stored from wreg
 20186  0147D0  0100               	movlb	0	; () banked
 20187  0147D2  6FBC               	movwf	ADC_SetupIO@pChannel& (0+255),b
 20188                           
 20189                           ;ADC.c: 152: UINT8 MASK = ~(1 << pChannel);
 20190  0147D4  C0BC  F0BA         	movff	ADC_SetupIO@pChannel,??_ADC_SetupIO
 20191  0147D8  0E01               	movlw	1
 20192  0147DA  0100               	movlb	0	; () banked
 20193  0147DC  6FBB               	movwf	(??_ADC_SetupIO+1)& (0+255),b
 20194  0147DE  0100               	movlb	0	; () banked
 20195  0147E0  2BBA               	incf	??_ADC_SetupIO& (0+255),f,b
 20196  0147E2  D003               	goto	u10414
 20197  0147E4                     u10415:
 20198  0147E4  0100               	movlb	0	; () banked
 20199  0147E6  90D8               	bcf	status,0,c
 20200  0147E8  37BB               	rlcf	(??_ADC_SetupIO+1)& (0+255),f,b
 20201  0147EA                     u10414:
 20202  0147EA  0100               	movlb	0	; () banked
 20203  0147EC  2FBA               	decfsz	??_ADC_SetupIO& (0+255),f,b
 20204  0147EE  D7FA               	goto	u10415
 20205  0147F0  0100               	movlb	0	; () banked
 20206  0147F2  51BB               	movf	(??_ADC_SetupIO+1)& (0+255),w,b
 20207  0147F4  0AFF               	xorlw	255
 20208  0147F6  0100               	movlb	0	; () banked
 20209  0147F8  6FBD               	movwf	ADC_SetupIO@MASK& (0+255),b
 20210                           
 20211                           ;ADC.c: 153: ANCON0 &= MASK;
 20212  0147FA  0100               	movlb	0	; () banked
 20213  0147FC  51BD               	movf	ADC_SetupIO@MASK& (0+255),w,b
 20214  0147FE  16C1               	andwf	4033,f,c	;volatile
 20215                           
 20216                           ; BSR set to: 0
 20217  014800  0012               	return		;funcret
 20218  014802                     __end_of_ADC_SetupIO:
 20219                           	opt stack 0
 20220                           tosu	equ	0xFFF
 20221                           tosh	equ	0xFFE
 20222                           tosl	equ	0xFFD
 20223                           pclath	equ	0xFFA
 20224                           tblptru	equ	0xFF8
 20225                           tblptrh	equ	0xFF7
 20226                           tblptrl	equ	0xFF6
 20227                           tablat	equ	0xFF5
 20228                           prodh	equ	0xFF4
 20229                           prodl	equ	0xFF3
 20230                           intcon	equ	0xFF2
 20231                           indf0	equ	0xFEF
 20232                           postinc0	equ	0xFEE
 20233                           fsr0h	equ	0xFEA
 20234                           fsr0l	equ	0xFE9
 20235                           wreg	equ	0xFE8
 20236                           indf1	equ	0xFE7
 20237                           postdec1	equ	0xFE5
 20238                           fsr1h	equ	0xFE2
 20239                           fsr1l	equ	0xFE1
 20240                           indf2	equ	0xFDF
 20241                           postinc2	equ	0xFDE
 20242                           postdec2	equ	0xFDD
 20243                           plusw2	equ	0xFDB
 20244                           fsr2h	equ	0xFDA
 20245                           fsr2l	equ	0xFD9
 20246                           status	equ	0xFD8
 20247                           
 20248 ;; *************** function _ADC_SetChannel *****************
 20249 ;; Defined at:
 20250 ;;		line 155 in file "Library/ADC.c"
 20251 ;; Parameters:    Size  Location     Type
 20252 ;;  pChannel        1    wreg     enum E6742
 20253 ;; Auto vars:     Size  Location     Type
 20254 ;;  pChannel        1    1[BANK0 ] enum E6742
 20255 ;; Return value:  Size  Location     Type
 20256 ;;                  1    wreg      void 
 20257 ;; Registers used:
 20258 ;;		wreg, status,2, status,0
 20259 ;; Tracked objects:
 20260 ;;		On entry : 0/0
 20261 ;;		On exit  : 0/0
 20262 ;;		Unchanged: 0/0
 20263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20266 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20267 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20268 ;;Total ram usage:        2 bytes
 20269 ;; Hardware stack levels used:    1
 20270 ;; Hardware stack levels required when called:    7
 20271 ;; This function calls:
 20272 ;;		Nothing
 20273 ;; This function is called by:
 20274 ;;		_ADC_Init
 20275 ;;		_ADC_Start
 20276 ;;		_ADC_ISR
 20277 ;;		_ADC_Sample
 20278 ;; This function uses a non-reentrant model
 20279 ;;
 20280                           
 20281                           	psect	text95
 20282  014AB2                     __ptext95:
 20283                           	opt stack 0
 20284  014AB2                     _ADC_SetChannel:
 20285                           	opt stack 21
 20286                           
 20287                           ; BSR set to: 0
 20288                           ;incstack = 0
 20289                           ;ADC_SetChannel@pChannel stored from wreg
 20290  014AB2  0100               	movlb	0	; () banked
 20291  014AB4  6FBB               	movwf	ADC_SetChannel@pChannel& (0+255),b
 20292                           
 20293                           ;ADC.c: 157: ADCON0bits.CHS = (UINT8)pChannel;
 20294  014AB6  C0BB  F0BA         	movff	ADC_SetChannel@pChannel,??_ADC_SetChannel
 20295  014ABA  0100               	movlb	0	; () banked
 20296  014ABC  47BA               	rlncf	??_ADC_SetChannel& (0+255),f,b
 20297  014ABE  47BA               	rlncf	??_ADC_SetChannel& (0+255),f,b
 20298  014AC0  50C2               	movf	4034,w,c	;volatile
 20299  014AC2  0100               	movlb	0	; () banked
 20300  014AC4  19BA               	xorwf	??_ADC_SetChannel& (0+255),w,b
 20301  014AC6  0BC3               	andlw	-61
 20302  014AC8  19BA               	xorwf	??_ADC_SetChannel& (0+255),w,b
 20303  014ACA  6EC2               	movwf	4034,c	;volatile
 20304                           
 20305                           ; BSR set to: 0
 20306  014ACC  0012               	return		;funcret
 20307  014ACE                     __end_of_ADC_SetChannel:
 20308                           	opt stack 0
 20309                           tosu	equ	0xFFF
 20310                           tosh	equ	0xFFE
 20311                           tosl	equ	0xFFD
 20312                           pclath	equ	0xFFA
 20313                           tblptru	equ	0xFF8
 20314                           tblptrh	equ	0xFF7
 20315                           tblptrl	equ	0xFF6
 20316                           tablat	equ	0xFF5
 20317                           prodh	equ	0xFF4
 20318                           prodl	equ	0xFF3
 20319                           intcon	equ	0xFF2
 20320                           indf0	equ	0xFEF
 20321                           postinc0	equ	0xFEE
 20322                           fsr0h	equ	0xFEA
 20323                           fsr0l	equ	0xFE9
 20324                           wreg	equ	0xFE8
 20325                           indf1	equ	0xFE7
 20326                           postdec1	equ	0xFE5
 20327                           fsr1h	equ	0xFE2
 20328                           fsr1l	equ	0xFE1
 20329                           indf2	equ	0xFDF
 20330                           postinc2	equ	0xFDE
 20331                           postdec2	equ	0xFDD
 20332                           plusw2	equ	0xFDB
 20333                           fsr2h	equ	0xFDA
 20334                           fsr2l	equ	0xFD9
 20335                           status	equ	0xFD8
 20336                           
 20337 ;; *************** function _ADC_ConversionTime *****************
 20338 ;; Defined at:
 20339 ;;		line 199 in file "Library/ADC.c"
 20340 ;; Parameters:    Size  Location     Type
 20341 ;;  pCount          1    wreg     unsigned char 
 20342 ;; Auto vars:     Size  Location     Type
 20343 ;;  pCount          1    1[BANK0 ] unsigned char 
 20344 ;; Return value:  Size  Location     Type
 20345 ;;                  1    wreg      void 
 20346 ;; Registers used:
 20347 ;;		wreg, status,2, status,0
 20348 ;; Tracked objects:
 20349 ;;		On entry : 0/0
 20350 ;;		On exit  : 0/0
 20351 ;;		Unchanged: 0/0
 20352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20354 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20355 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20356 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20357 ;;Total ram usage:        2 bytes
 20358 ;; Hardware stack levels used:    1
 20359 ;; Hardware stack levels required when called:    7
 20360 ;; This function calls:
 20361 ;;		Nothing
 20362 ;; This function is called by:
 20363 ;;		_ADC_Init
 20364 ;; This function uses a non-reentrant model
 20365 ;;
 20366                           
 20367                           	psect	text96
 20368  01454C                     __ptext96:
 20369                           	opt stack 0
 20370  01454C                     _ADC_ConversionTime:
 20371                           	opt stack 21
 20372                           
 20373                           ; BSR set to: 0
 20374                           ;incstack = 0
 20375                           ;ADC_ConversionTime@pCount stored from wreg
 20376  01454C  0100               	movlb	0	; () banked
 20377  01454E  6FBB               	movwf	ADC_ConversionTime@pCount& (0+255),b
 20378                           
 20379                           ;ADC.c: 201: if (pCount == 10)
 20380  014550  0E0A               	movlw	10
 20381  014552  0100               	movlb	0	; () banked
 20382  014554  19BB               	xorwf	ADC_ConversionTime@pCount& (0+255),w,b
 20383  014556  B4D8               	btfsc	status,2,c
 20384  014558  D00A               	goto	u10380
 20385                           
 20386                           ; BSR set to: 0
 20387                           ;ADC.c: 203: else if (pCount == 14)
 20388                           
 20389                           ; BSR set to: 0
 20390                           
 20391                           ; BSR set to: 0
 20392                           ;ADC.c: 202: pCount -= 2;
 20393  01455A  0E0E               	movlw	14
 20394  01455C  0100               	movlb	0	; () banked
 20395  01455E  19BB               	xorwf	ADC_ConversionTime@pCount& (0+255),w,b
 20396  014560  B4D8               	btfsc	status,2,c
 20397  014562  D005               	goto	u10380
 20398                           
 20399                           ; BSR set to: 0
 20400                           ;ADC.c: 205: else if (pCount == 18)
 20401                           
 20402                           ; BSR set to: 0
 20403                           
 20404                           ; BSR set to: 0
 20405                           ;ADC.c: 204: pCount -= 2;
 20406  014564  0E12               	movlw	18
 20407  014566  0100               	movlb	0	; () banked
 20408  014568  19BB               	xorwf	ADC_ConversionTime@pCount& (0+255),w,b
 20409  01456A  A4D8               	btfss	status,2,c
 20410  01456C  D003               	goto	l1313
 20411  01456E                     u10380:
 20412                           
 20413                           ; BSR set to: 0
 20414                           ;ADC.c: 206: pCount -= 2;
 20415  01456E  0E02               	movlw	2
 20416  014570  0100               	movlb	0	; () banked
 20417  014572  5FBB               	subwf	ADC_ConversionTime@pCount& (0+255),f,b
 20418  014574                     l1313:
 20419                           
 20420                           ; BSR set to: 0
 20421                           ;ADC.c: 208: pCount <<= 1;
 20422                           
 20423                           ; BSR set to: 0
 20424                           
 20425                           ; BSR set to: 0
 20426  014574  0100               	movlb	0	; () banked
 20427  014576  90D8               	bcf	status,0,c
 20428  014578  37BB               	rlcf	ADC_ConversionTime@pCount& (0+255),f,b
 20429                           
 20430                           ;ADC.c: 209: ADCON1bits.ACQT = pCount;
 20431  01457A  C0BB  F0BA         	movff	ADC_ConversionTime@pCount,??_ADC_ConversionTime
 20432  01457E  0100               	movlb	0	; () banked
 20433  014580  47BA               	rlncf	??_ADC_ConversionTime& (0+255),f,b
 20434  014582  47BA               	rlncf	??_ADC_ConversionTime& (0+255),f,b
 20435  014584  47BA               	rlncf	??_ADC_ConversionTime& (0+255),f,b
 20436  014586  50C1               	movf	4033,w,c	;volatile
 20437  014588  0100               	movlb	0	; () banked
 20438  01458A  19BA               	xorwf	??_ADC_ConversionTime& (0+255),w,b
 20439  01458C  0BC7               	andlw	-57
 20440  01458E  19BA               	xorwf	??_ADC_ConversionTime& (0+255),w,b
 20441  014590  6EC1               	movwf	4033,c	;volatile
 20442                           
 20443                           ; BSR set to: 0
 20444  014592  0012               	return		;funcret
 20445  014594                     __end_of_ADC_ConversionTime:
 20446                           	opt stack 0
 20447                           tosu	equ	0xFFF
 20448                           tosh	equ	0xFFE
 20449                           tosl	equ	0xFFD
 20450                           pclath	equ	0xFFA
 20451                           tblptru	equ	0xFF8
 20452                           tblptrh	equ	0xFF7
 20453                           tblptrl	equ	0xFF6
 20454                           tablat	equ	0xFF5
 20455                           prodh	equ	0xFF4
 20456                           prodl	equ	0xFF3
 20457                           intcon	equ	0xFF2
 20458                           indf0	equ	0xFEF
 20459                           postinc0	equ	0xFEE
 20460                           fsr0h	equ	0xFEA
 20461                           fsr0l	equ	0xFE9
 20462                           wreg	equ	0xFE8
 20463                           indf1	equ	0xFE7
 20464                           postdec1	equ	0xFE5
 20465                           fsr1h	equ	0xFE2
 20466                           fsr1l	equ	0xFE1
 20467                           indf2	equ	0xFDF
 20468                           postinc2	equ	0xFDE
 20469                           postdec2	equ	0xFDD
 20470                           plusw2	equ	0xFDB
 20471                           fsr2h	equ	0xFDA
 20472                           fsr2l	equ	0xFD9
 20473                           status	equ	0xFD8
 20474                           
 20475 ;; *************** function _ADC_ClockDivision *****************
 20476 ;; Defined at:
 20477 ;;		line 159 in file "Library/ADC.c"
 20478 ;; Parameters:    Size  Location     Type
 20479 ;;  pDivide         1    wreg     unsigned char 
 20480 ;; Auto vars:     Size  Location     Type
 20481 ;;  pDivide         1    0[BANK0 ] unsigned char 
 20482 ;;  unfound         1    2[BANK0 ] unsigned char 
 20483 ;;  reg             1    1[BANK0 ] unsigned char 
 20484 ;; Return value:  Size  Location     Type
 20485 ;;                  1    wreg      void 
 20486 ;; Registers used:
 20487 ;;		wreg, status,2, status,0
 20488 ;; Tracked objects:
 20489 ;;		On entry : 0/0
 20490 ;;		On exit  : 0/0
 20491 ;;		Unchanged: 0/0
 20492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20494 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20496 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20497 ;;Total ram usage:        3 bytes
 20498 ;; Hardware stack levels used:    1
 20499 ;; Hardware stack levels required when called:    7
 20500 ;; This function calls:
 20501 ;;		Nothing
 20502 ;; This function is called by:
 20503 ;;		_ADC_Init
 20504 ;; This function uses a non-reentrant model
 20505 ;;
 20506                           
 20507                           	psect	text97
 20508  013AA4                     __ptext97:
 20509                           	opt stack 0
 20510  013AA4                     _ADC_ClockDivision:
 20511                           	opt stack 21
 20512                           
 20513                           ; BSR set to: 0
 20514                           ;incstack = 0
 20515                           ;ADC_ClockDivision@pDivide stored from wreg
 20516  013AA4  0100               	movlb	0	; () banked
 20517  013AA6  6FBA               	movwf	ADC_ClockDivision@pDivide& (0+255),b
 20518                           
 20519                           ;ADC.c: 161: UINT8 reg = 0;
 20520  013AA8  0E00               	movlw	0
 20521  013AAA  0100               	movlb	0	; () banked
 20522  013AAC  6FBB               	movwf	ADC_ClockDivision@reg& (0+255),b
 20523                           
 20524                           ;ADC.c: 162: bool unfound = 1;
 20525  013AAE  0E01               	movlw	1
 20526  013AB0  D002               	goto	L14
 20527  013AB2                     
 20528                           ; BSR set to: 0
 20529                           ;ADC.c: 167: reg = 0;
 20530                           
 20531                           ; BSR set to: 0
 20532  013AB2  0E00               	movlw	0
 20533  013AB4  D00C               	goto	L19
 20534  013AB6                     L14:
 20535  013AB6  0100               	movlb	0	; () banked
 20536  013AB8  6FBC               	movwf	ADC_ClockDivision@unfound& (0+255),b
 20537                           
 20538                           ;ADC.c: 169: break;
 20539  013ABA  D02D               	goto	l1296
 20540  013ABC                     
 20541                           ; BSR set to: 0
 20542                           ;ADC.c: 171: reg = 0b100;
 20543                           
 20544                           ; BSR set to: 0
 20545  013ABC  0E04               	movlw	4
 20546  013ABE  D007               	goto	L19
 20547  013AC0                     
 20548                           ; BSR set to: 0
 20549                           ;ADC.c: 175: reg = 0b001;
 20550                           
 20551                           ; BSR set to: 0
 20552  013AC0  0E01               	movlw	1
 20553  013AC2  D005               	goto	L19
 20554  013AC4                     
 20555                           ; BSR set to: 0
 20556                           ;ADC.c: 179: reg = 0b101;
 20557                           
 20558                           ; BSR set to: 0
 20559  013AC4  0E05               	movlw	5
 20560  013AC6  D003               	goto	L19
 20561  013AC8                     
 20562                           ; BSR set to: 0
 20563                           ;ADC.c: 183: reg = 0b010;
 20564                           
 20565                           ; BSR set to: 0
 20566  013AC8  0E02               	movlw	2
 20567  013ACA  D001               	goto	L19
 20568  013ACC                     
 20569                           ; BSR set to: 0
 20570                           ;ADC.c: 187: reg = 0b110;
 20571                           
 20572                           ; BSR set to: 0
 20573  013ACC  0E06               	movlw	6
 20574  013ACE                     L19:
 20575  013ACE  0100               	movlb	0	; () banked
 20576  013AD0  6FBB               	movwf	ADC_ClockDivision@reg& (0+255),b
 20577                           
 20578                           ;ADC.c: 188: unfound = 0;
 20579  013AD2  0E00               	movlw	0
 20580  013AD4  D7F0               	goto	L14
 20581  013AD6                     
 20582                           ; BSR set to: 0
 20583                           ;ADC.c: 191: if (pDivide > 2)
 20584                           
 20585                           ; BSR set to: 0
 20586  013AD6  0E02               	movlw	2
 20587  013AD8  0100               	movlb	0	; () banked
 20588  013ADA  65BA               	cpfsgt	ADC_ClockDivision@pDivide& (0+255),b
 20589  013ADC  D003               	goto	l1303
 20590                           
 20591                           ; BSR set to: 0
 20592                           ;ADC.c: 192: pDivide--;
 20593  013ADE  0100               	movlb	0	; () banked
 20594  013AE0  07BA               	decf	ADC_ClockDivision@pDivide& (0+255),f,b
 20595  013AE2  D019               	goto	l1296
 20596  013AE4                     l1303:
 20597                           
 20598                           ; BSR set to: 0
 20599                           ;ADC.c: 193: else
 20600                           ;ADC.c: 194: pDivide = 2;
 20601                           
 20602                           ; BSR set to: 0
 20603  013AE4  0E02               	movlw	2
 20604  013AE6  0100               	movlb	0	; () banked
 20605  013AE8  6FBA               	movwf	ADC_ClockDivision@pDivide& (0+255),b
 20606                           
 20607                           ; BSR set to: 0
 20608                           ;ADC.c: 195: };
 20609  013AEA  D015               	goto	l1296
 20610  013AEC                     
 20611                           ; BSR set to: 0
 20612                           
 20613                           ; BSR set to: 0
 20614  013AEC  0100               	movlb	0	; () banked
 20615  013AEE  51BA               	movf	ADC_ClockDivision@pDivide& (0+255),w,b
 20616                           
 20617                           ; Switch size 1, requested type "space"
 20618                           ; Number of cases is 6, Range of values is 2 to 64
 20619                           ; switch strategies available:
 20620                           ; Name         Instructions Cycles
 20621                           ; simple_byte           19    10 (average)
 20622                           ;	Chosen strategy is simple_byte
 20623  013AF0  0A02               	xorlw	2	; case 2
 20624  013AF2  B4D8               	btfsc	status,2,c
 20625  013AF4  D7DE               	goto	l1295
 20626  013AF6  0A06               	xorlw	6	; case 4
 20627  013AF8  B4D8               	btfsc	status,2,c
 20628  013AFA  D7E0               	goto	l1297
 20629  013AFC  0A0C               	xorlw	12	; case 8
 20630  013AFE  B4D8               	btfsc	status,2,c
 20631  013B00  D7DF               	goto	l1298
 20632  013B02  0A18               	xorlw	24	; case 16
 20633  013B04  B4D8               	btfsc	status,2,c
 20634  013B06  D7DE               	goto	l1299
 20635  013B08  0A30               	xorlw	48	; case 32
 20636  013B0A  B4D8               	btfsc	status,2,c
 20637  013B0C  D7DD               	goto	l1300
 20638  013B0E  0A60               	xorlw	96	; case 64
 20639  013B10  B4D8               	btfsc	status,2,c
 20640  013B12  D7DC               	goto	l1301
 20641  013B14  D7E0               	goto	l1302
 20642  013B16                     l1296:
 20643                           
 20644                           ; BSR set to: 0
 20645                           
 20646                           ; BSR set to: 0
 20647                           
 20648                           ; BSR set to: 0
 20649  013B16  0100               	movlb	0	; () banked
 20650  013B18  51BC               	movf	ADC_ClockDivision@unfound& (0+255),w,b
 20651  013B1A  0100               	movlb	0	; () banked
 20652  013B1C  A4D8               	btfss	status,2,c
 20653  013B1E  D7E6               	goto	l1294
 20654                           
 20655                           ; BSR set to: 0
 20656                           ;ADC.c: 197: ADCON1bits.ADCS = reg;
 20657                           
 20658                           ; BSR set to: 0
 20659  013B20  50C1               	movf	4033,w,c	;volatile
 20660  013B22  0100               	movlb	0	; () banked
 20661  013B24  19BB               	xorwf	ADC_ClockDivision@reg& (0+255),w,b
 20662  013B26  0BF8               	andlw	-8
 20663  013B28  19BB               	xorwf	ADC_ClockDivision@reg& (0+255),w,b
 20664  013B2A  6EC1               	movwf	4033,c	;volatile
 20665                           
 20666                           ; BSR set to: 0
 20667  013B2C  0012               	return		;funcret
 20668  013B2E                     __end_of_ADC_ClockDivision:
 20669                           	opt stack 0
 20670                           tosu	equ	0xFFF
 20671                           tosh	equ	0xFFE
 20672                           tosl	equ	0xFFD
 20673                           pclath	equ	0xFFA
 20674                           tblptru	equ	0xFF8
 20675                           tblptrh	equ	0xFF7
 20676                           tblptrl	equ	0xFF6
 20677                           tablat	equ	0xFF5
 20678                           prodh	equ	0xFF4
 20679                           prodl	equ	0xFF3
 20680                           intcon	equ	0xFF2
 20681                           indf0	equ	0xFEF
 20682                           postinc0	equ	0xFEE
 20683                           fsr0h	equ	0xFEA
 20684                           fsr0l	equ	0xFE9
 20685                           wreg	equ	0xFE8
 20686                           indf1	equ	0xFE7
 20687                           postdec1	equ	0xFE5
 20688                           fsr1h	equ	0xFE2
 20689                           fsr1l	equ	0xFE1
 20690                           indf2	equ	0xFDF
 20691                           postinc2	equ	0xFDE
 20692                           postdec2	equ	0xFDD
 20693                           plusw2	equ	0xFDB
 20694                           fsr2h	equ	0xFDA
 20695                           fsr2l	equ	0xFD9
 20696                           status	equ	0xFD8
 20697                           
 20698 ;; *************** function _ADC_Calibrate *****************
 20699 ;; Defined at:
 20700 ;;		line 63 in file "Library/ADC.c"
 20701 ;; Parameters:    Size  Location     Type
 20702 ;;		None
 20703 ;; Auto vars:     Size  Location     Type
 20704 ;;		None
 20705 ;; Return value:  Size  Location     Type
 20706 ;;                  1    wreg      void 
 20707 ;; Registers used:
 20708 ;;		cstack
 20709 ;; Tracked objects:
 20710 ;;		On entry : 0/0
 20711 ;;		On exit  : 0/0
 20712 ;;		Unchanged: 0/0
 20713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20718 ;;Total ram usage:        0 bytes
 20719 ;; Hardware stack levels used:    1
 20720 ;; Hardware stack levels required when called:    8
 20721 ;; This function calls:
 20722 ;;		_ADC_Off
 20723 ;;		_ADC_On
 20724 ;; This function is called by:
 20725 ;;		_ADC_Init
 20726 ;; This function uses a non-reentrant model
 20727 ;;
 20728                           
 20729                           	psect	text98
 20730  014AFE                     __ptext98:
 20731                           	opt stack 0
 20732  014AFE                     _ADC_Calibrate:
 20733                           	opt stack 20
 20734                           
 20735                           ;ADC.c: 65: ADC_On();
 20736                           
 20737                           ; BSR set to: 0
 20738                           ;incstack = 0
 20739  014AFE  ECEB  F0A5         	call	_ADC_On	;wreg free
 20740                           
 20741                           ;ADC.c: 67: ADCON1bits.ADCAL = 1;
 20742  014B02  8CC1               	bsf	4033,6,c	;volatile
 20743                           
 20744                           ;ADC.c: 69: (ADCON0bits.GO) = 1;
 20745  014B04  82C2               	bsf	4034,1,c	;volatile
 20746  014B06  B2C2               	btfsc	4034,1,c	;volatile
 20747  014B08  D7FE               	goto	l1254
 20748                           
 20749                           ;ADC.c: 71: ADCON1bits.ADCAL = 0;
 20750  014B0A  9CC1               	bcf	4033,6,c	;volatile
 20751                           
 20752                           ;ADC.c: 73: ADC_Off();
 20753  014B0C  ECDE  F0A5         	call	_ADC_Off	;wreg free
 20754  014B10  0012               	return		;funcret
 20755  014B12                     __end_of_ADC_Calibrate:
 20756                           	opt stack 0
 20757                           tosu	equ	0xFFF
 20758                           tosh	equ	0xFFE
 20759                           tosl	equ	0xFFD
 20760                           pclath	equ	0xFFA
 20761                           tblptru	equ	0xFF8
 20762                           tblptrh	equ	0xFF7
 20763                           tblptrl	equ	0xFF6
 20764                           tablat	equ	0xFF5
 20765                           prodh	equ	0xFF4
 20766                           prodl	equ	0xFF3
 20767                           intcon	equ	0xFF2
 20768                           indf0	equ	0xFEF
 20769                           postinc0	equ	0xFEE
 20770                           fsr0h	equ	0xFEA
 20771                           fsr0l	equ	0xFE9
 20772                           wreg	equ	0xFE8
 20773                           indf1	equ	0xFE7
 20774                           postdec1	equ	0xFE5
 20775                           fsr1h	equ	0xFE2
 20776                           fsr1l	equ	0xFE1
 20777                           indf2	equ	0xFDF
 20778                           postinc2	equ	0xFDE
 20779                           postdec2	equ	0xFDD
 20780                           plusw2	equ	0xFDB
 20781                           fsr2h	equ	0xFDA
 20782                           fsr2l	equ	0xFD9
 20783                           status	equ	0xFD8
 20784                           
 20785 ;; *************** function _ADC_On *****************
 20786 ;; Defined at:
 20787 ;;		line 85 in file "Library/ADC.c"
 20788 ;; Parameters:    Size  Location     Type
 20789 ;;		None
 20790 ;; Auto vars:     Size  Location     Type
 20791 ;;		None
 20792 ;; Return value:  Size  Location     Type
 20793 ;;                  1    wreg      void 
 20794 ;; Registers used:
 20795 ;;		None
 20796 ;; Tracked objects:
 20797 ;;		On entry : 0/0
 20798 ;;		On exit  : 0/0
 20799 ;;		Unchanged: 0/0
 20800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20805 ;;Total ram usage:        0 bytes
 20806 ;; Hardware stack levels used:    1
 20807 ;; Hardware stack levels required when called:    7
 20808 ;; This function calls:
 20809 ;;		Nothing
 20810 ;; This function is called by:
 20811 ;;		_ADC_Calibrate
 20812 ;;		_ADC_Start
 20813 ;;		_ADC_ISR
 20814 ;;		_ADC_Sample
 20815 ;; This function uses a non-reentrant model
 20816 ;;
 20817                           
 20818                           	psect	text99
 20819  014BD6                     __ptext99:
 20820                           	opt stack 0
 20821  014BD6                     _ADC_On:
 20822                           	opt stack 21
 20823                           
 20824                           ;ADC.c: 87: ADCON0bits.ADON = 1;
 20825                           
 20826                           ;incstack = 0
 20827  014BD6  80C2               	bsf	4034,0,c	;volatile
 20828                           
 20829                           ;ADC.c: 88: PIR1bits.ADIF = 0;
 20830  014BD8  9C9E               	bcf	3998,6,c	;volatile
 20831  014BDA  0012               	return		;funcret
 20832  014BDC                     __end_of_ADC_On:
 20833                           	opt stack 0
 20834                           tosu	equ	0xFFF
 20835                           tosh	equ	0xFFE
 20836                           tosl	equ	0xFFD
 20837                           pclath	equ	0xFFA
 20838                           tblptru	equ	0xFF8
 20839                           tblptrh	equ	0xFF7
 20840                           tblptrl	equ	0xFF6
 20841                           tablat	equ	0xFF5
 20842                           prodh	equ	0xFF4
 20843                           prodl	equ	0xFF3
 20844                           intcon	equ	0xFF2
 20845                           indf0	equ	0xFEF
 20846                           postinc0	equ	0xFEE
 20847                           fsr0h	equ	0xFEA
 20848                           fsr0l	equ	0xFE9
 20849                           wreg	equ	0xFE8
 20850                           indf1	equ	0xFE7
 20851                           postdec1	equ	0xFE5
 20852                           fsr1h	equ	0xFE2
 20853                           fsr1l	equ	0xFE1
 20854                           indf2	equ	0xFDF
 20855                           postinc2	equ	0xFDE
 20856                           postdec2	equ	0xFDD
 20857                           plusw2	equ	0xFDB
 20858                           fsr2h	equ	0xFDA
 20859                           fsr2l	equ	0xFD9
 20860                           status	equ	0xFD8
 20861                           
 20862 ;; *************** function _ADC_Off *****************
 20863 ;; Defined at:
 20864 ;;		line 94 in file "Library/ADC.c"
 20865 ;; Parameters:    Size  Location     Type
 20866 ;;		None
 20867 ;; Auto vars:     Size  Location     Type
 20868 ;;		None
 20869 ;; Return value:  Size  Location     Type
 20870 ;;                  1    wreg      void 
 20871 ;; Registers used:
 20872 ;;		None
 20873 ;; Tracked objects:
 20874 ;;		On entry : 0/0
 20875 ;;		On exit  : 0/0
 20876 ;;		Unchanged: 0/0
 20877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20882 ;;Total ram usage:        0 bytes
 20883 ;; Hardware stack levels used:    1
 20884 ;; Hardware stack levels required when called:    7
 20885 ;; This function calls:
 20886 ;;		Nothing
 20887 ;; This function is called by:
 20888 ;;		_ADC_Calibrate
 20889 ;;		_ADC_Start
 20890 ;;		_ADC_ISR
 20891 ;;		_ADC_Sample
 20892 ;; This function uses a non-reentrant model
 20893 ;;
 20894                           
 20895                           	psect	text100
 20896  014BBC                     __ptext100:
 20897                           	opt stack 0
 20898  014BBC                     _ADC_Off:
 20899                           	opt stack 21
 20900                           
 20901                           ;ADC.c: 96: ADCON0bits.ADON = 0;
 20902                           
 20903                           ;incstack = 0
 20904  014BBC  90C2               	bcf	4034,0,c	;volatile
 20905                           
 20906                           ;ADC.c: 97: PIR1bits.ADIF = 0;
 20907  014BBE  9C9E               	bcf	3998,6,c	;volatile
 20908                           
 20909                           ;ADC.c: 98: PIE1bits.ADIE = 0;
 20910  014BC0  9C9D               	bcf	3997,6,c	;volatile
 20911  014BC2  0012               	return		;funcret
 20912  014BC4                     __end_of_ADC_Off:
 20913                           	opt stack 0
 20914                           tosu	equ	0xFFF
 20915                           tosh	equ	0xFFE
 20916                           tosl	equ	0xFFD
 20917                           pclath	equ	0xFFA
 20918                           tblptru	equ	0xFF8
 20919                           tblptrh	equ	0xFF7
 20920                           tblptrl	equ	0xFF6
 20921                           tablat	equ	0xFF5
 20922                           prodh	equ	0xFF4
 20923                           prodl	equ	0xFF3
 20924                           intcon	equ	0xFF2
 20925                           indf0	equ	0xFEF
 20926                           postinc0	equ	0xFEE
 20927                           fsr0h	equ	0xFEA
 20928                           fsr0l	equ	0xFE9
 20929                           wreg	equ	0xFE8
 20930                           indf1	equ	0xFE7
 20931                           postdec1	equ	0xFE5
 20932                           fsr1h	equ	0xFE2
 20933                           fsr1l	equ	0xFE1
 20934                           indf2	equ	0xFDF
 20935                           postinc2	equ	0xFDE
 20936                           postdec2	equ	0xFDD
 20937                           plusw2	equ	0xFDB
 20938                           fsr2h	equ	0xFDA
 20939                           fsr2l	equ	0xFD9
 20940                           status	equ	0xFD8
 20941                           
 20942 ;; *************** function _ISR_Function *****************
 20943 ;; Defined at:
 20944 ;;		line 38 in file "Library/ISR.c"
 20945 ;; Parameters:    Size  Location     Type
 20946 ;;		None
 20947 ;; Auto vars:     Size  Location     Type
 20948 ;;		None
 20949 ;; Return value:  Size  Location     Type
 20950 ;;                  1    wreg      void 
 20951 ;; Registers used:
 20952 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20953 ;; Tracked objects:
 20954 ;;		On entry : 0/0
 20955 ;;		On exit  : 0/0
 20956 ;;		Unchanged: 0/0
 20957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20960 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20961 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20962 ;;Total ram usage:       18 bytes
 20963 ;; Hardware stack levels used:    1
 20964 ;; Hardware stack levels required when called:    6
 20965 ;; This function calls:
 20966 ;;		_Timer0_ISR
 20967 ;; This function is called by:
 20968 ;;		Interrupt level 2
 20969 ;; This function uses a non-reentrant model
 20970 ;;
 20971                           
 20972                           	psect	intcode
 20973  001408                     __pintcode:
 20974                           	opt stack 0
 20975  001408                     _ISR_Function:
 20976                           	opt stack 13
 20977                           
 20978                           ;incstack = 0
 20979  001408  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 20980  00140A  CFFA F017          	movff	pclath,??_ISR_Function
 20981  00140E  CFFB F018          	movff	pclatu,??_ISR_Function+1
 20982  001412  CFE9 F019          	movff	fsr0l,??_ISR_Function+2
 20983  001416  CFEA F01A          	movff	fsr0h,??_ISR_Function+3
 20984  00141A  CFE1 F01B          	movff	fsr1l,??_ISR_Function+4
 20985  00141E  CFE2 F01C          	movff	fsr1h,??_ISR_Function+5
 20986  001422  CFD9 F01D          	movff	fsr2l,??_ISR_Function+6
 20987  001426  CFDA F01E          	movff	fsr2h,??_ISR_Function+7
 20988  00142A  CFF3 F01F          	movff	prodl,??_ISR_Function+8
 20989  00142E  CFF4 F020          	movff	prodh,??_ISR_Function+9
 20990  001432  CFF6 F021          	movff	tblptrl,??_ISR_Function+10
 20991  001436  CFF7 F022          	movff	tblptrh,??_ISR_Function+11
 20992  00143A  CFF8 F023          	movff	tblptru,??_ISR_Function+12
 20993  00143E  CFF5 F024          	movff	tablat,??_ISR_Function+13
 20994  001442  C051  F025         	movff	btemp,??_ISR_Function+14
 20995  001446  C052  F026         	movff	btemp+1,??_ISR_Function+15
 20996  00144A  C053  F027         	movff	btemp+2,??_ISR_Function+16
 20997  00144E  C054  F028         	movff	btemp+3,??_ISR_Function+17
 20998                           
 20999                           ;ISR.c: 41: INTCONbits.INT0IF = 0;
 21000  001452  92F2               	bcf	intcon,1,c	;volatile
 21001                           
 21002                           ;ISR.c: 67: if (((INTCONbits.TMR0IF) && (INTCONbits.TMR0IE)))
 21003  001454  B4F2               	btfsc	intcon,2,c	;volatile
 21004  001456  AAF2               	btfss	intcon,5,c	;volatile
 21005  001458  D002               	goto	i2l1590
 21006                           
 21007                           ;ISR.c: 68: Timer0_ISR();
 21008  00145A  EC49  F0A4         	call	_Timer0_ISR	;wreg free
 21009  00145E                     i2l1590:
 21010  00145E  C028  F054         	movff	??_ISR_Function+17,btemp+3
 21011  001462  C027  F053         	movff	??_ISR_Function+16,btemp+2
 21012  001466  C026  F052         	movff	??_ISR_Function+15,btemp+1
 21013  00146A  C025  F051         	movff	??_ISR_Function+14,btemp
 21014  00146E  C024  FFF5         	movff	??_ISR_Function+13,tablat
 21015  001472  C023  FFF8         	movff	??_ISR_Function+12,tblptru
 21016  001476  C022  FFF7         	movff	??_ISR_Function+11,tblptrh
 21017  00147A  C021  FFF6         	movff	??_ISR_Function+10,tblptrl
 21018  00147E  C020  FFF4         	movff	??_ISR_Function+9,prodh
 21019  001482  C01F  FFF3         	movff	??_ISR_Function+8,prodl
 21020  001486  C01E  FFDA         	movff	??_ISR_Function+7,fsr2h
 21021  00148A  C01D  FFD9         	movff	??_ISR_Function+6,fsr2l
 21022  00148E  C01C  FFE2         	movff	??_ISR_Function+5,fsr1h
 21023  001492  C01B  FFE1         	movff	??_ISR_Function+4,fsr1l
 21024  001496  C01A  FFEA         	movff	??_ISR_Function+3,fsr0h
 21025  00149A  C019  FFE9         	movff	??_ISR_Function+2,fsr0l
 21026  00149E  C018  FFFB         	movff	??_ISR_Function+1,pclatu
 21027  0014A2  C017  FFFA         	movff	??_ISR_Function,pclath
 21028  0014A6  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 21029  0014A8  0011               	retfie		f
 21030  0014AA                     __end_of_ISR_Function:
 21031                           	opt stack 0
 21032                           tosu	equ	0xFFF
 21033                           tosh	equ	0xFFE
 21034                           tosl	equ	0xFFD
 21035                           pclatu	equ	0xFFB
 21036                           pclath	equ	0xFFA
 21037                           tblptru	equ	0xFF8
 21038                           tblptrh	equ	0xFF7
 21039                           tblptrl	equ	0xFF6
 21040                           tablat	equ	0xFF5
 21041                           prodh	equ	0xFF4
 21042                           prodl	equ	0xFF3
 21043                           intcon	equ	0xFF2
 21044                           indf0	equ	0xFEF
 21045                           postinc0	equ	0xFEE
 21046                           fsr0h	equ	0xFEA
 21047                           fsr0l	equ	0xFE9
 21048                           wreg	equ	0xFE8
 21049                           indf1	equ	0xFE7
 21050                           postdec1	equ	0xFE5
 21051                           fsr1h	equ	0xFE2
 21052                           fsr1l	equ	0xFE1
 21053                           indf2	equ	0xFDF
 21054                           postinc2	equ	0xFDE
 21055                           postdec2	equ	0xFDD
 21056                           plusw2	equ	0xFDB
 21057                           fsr2h	equ	0xFDA
 21058                           fsr2l	equ	0xFD9
 21059                           status	equ	0xFD8
 21060                           
 21061 ;; *************** function _Timer0_ISR *****************
 21062 ;; Defined at:
 21063 ;;		line 94 in file "Library/Timer0.c"
 21064 ;; Parameters:    Size  Location     Type
 21065 ;;		None
 21066 ;; Auto vars:     Size  Location     Type
 21067 ;;		None
 21068 ;; Return value:  Size  Location     Type
 21069 ;;                  1    wreg      void 
 21070 ;; Registers used:
 21071 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21072 ;; Tracked objects:
 21073 ;;		On entry : 0/0
 21074 ;;		On exit  : 0/0
 21075 ;;		Unchanged: 0/0
 21076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21078 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21080 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21081 ;;Total ram usage:        0 bytes
 21082 ;; Hardware stack levels used:    1
 21083 ;; Hardware stack levels required when called:    5
 21084 ;; This function calls:
 21085 ;;		Absolute function
 21086 ;;		i2_Motor_Step
 21087 ;;		i2_Timer0_Stop
 21088 ;; This function is called by:
 21089 ;;		_ISR_Function
 21090 ;; This function uses a non-reentrant model
 21091 ;;
 21092                           
 21093                           	psect	text102
 21094  014892                     __ptext102:
 21095                           	opt stack 0
 21096  014892                     _Timer0_ISR:
 21097                           	opt stack 13
 21098                           
 21099                           ;Timer0.c: 96: Timer0_Stop();
 21100                           
 21101                           ;incstack = 0
 21102  014892  ECEE  F0A5         	call	i2_Timer0_Stop	;wreg free
 21103                           
 21104                           ;Timer0.c: 99: if (gISR != 0)
 21105  014896  0100               	movlb	0	; () banked
 21106  014898  5160               	movf	_gISR& (0+255),w,b
 21107  01489A  0100               	movlb	0	; () banked
 21108  01489C  1161               	iorwf	(_gISR+1)& (0+255),w,b
 21109  01489E  0100               	movlb	0	; () banked
 21110  0148A0  1162               	iorwf	(_gISR+2)& (0+255),w,b
 21111  0148A2  B4D8               	btfsc	status,2,c
 21112  0148A4  0012               	return	
 21113                           
 21114                           ; BSR set to: 0
 21115                           ;Timer0.c: 100: gISR();
 21116  0148A6  D801               	call	i2u1671_48
 21117  0148A8  0012               	return	
 21118  0148AA                     i2u1671_48:
 21119  0148AA  0005               	push	
 21120  0148AC  6EFA               	movwf	pclath,c
 21121  0148AE  0100               	movlb	0	; () banked
 21122  0148B0  5160               	movf	_gISR& (0+255),w,b
 21123  0148B2  6EFD               	movwf	tosl,c
 21124  0148B4  5161               	movf	(_gISR+1)& (0+255),w,b
 21125  0148B6  6EFE               	movwf	tosh,c
 21126  0148B8  5162               	movf	(_gISR+2)& (0+255),w,b
 21127  0148BA  6EFF               	movwf	tosu,c
 21128  0148BC  50FA               	movf	pclath,w,c
 21129  0148BE  0012               	return		;indir
 21130  0148C0                     __end_of_Timer0_ISR:
 21131                           	opt stack 0
 21132                           tosu	equ	0xFFF
 21133                           tosh	equ	0xFFE
 21134                           tosl	equ	0xFFD
 21135                           pclatu	equ	0xFFB
 21136                           pclath	equ	0xFFA
 21137                           tblptru	equ	0xFF8
 21138                           tblptrh	equ	0xFF7
 21139                           tblptrl	equ	0xFF6
 21140                           tablat	equ	0xFF5
 21141                           prodh	equ	0xFF4
 21142                           prodl	equ	0xFF3
 21143                           intcon	equ	0xFF2
 21144                           indf0	equ	0xFEF
 21145                           postinc0	equ	0xFEE
 21146                           fsr0h	equ	0xFEA
 21147                           fsr0l	equ	0xFE9
 21148                           wreg	equ	0xFE8
 21149                           indf1	equ	0xFE7
 21150                           postdec1	equ	0xFE5
 21151                           fsr1h	equ	0xFE2
 21152                           fsr1l	equ	0xFE1
 21153                           indf2	equ	0xFDF
 21154                           postinc2	equ	0xFDE
 21155                           postdec2	equ	0xFDD
 21156                           plusw2	equ	0xFDB
 21157                           fsr2h	equ	0xFDA
 21158                           fsr2l	equ	0xFD9
 21159                           status	equ	0xFD8
 21160                           
 21161 ;; *************** function i2_Motor_Step *****************
 21162 ;; Defined at:
 21163 ;;		line 75 in file "Library/Motor.c"
 21164 ;; Parameters:    Size  Location     Type
 21165 ;;		None
 21166 ;; Auto vars:     Size  Location     Type
 21167 ;;		None
 21168 ;; Return value:  Size  Location     Type
 21169 ;;                  1    wreg      void 
 21170 ;; Registers used:
 21171 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21172 ;; Tracked objects:
 21173 ;;		On entry : 0/0
 21174 ;;		On exit  : 0/0
 21175 ;;		Unchanged: 0/0
 21176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21178 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21179 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21180 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21181 ;;Total ram usage:        2 bytes
 21182 ;; Hardware stack levels used:    1
 21183 ;; Hardware stack levels required when called:    4
 21184 ;; This function calls:
 21185 ;;		i2_MXK_Queue
 21186 ;;		i2_MXK_Release
 21187 ;;		i2_MXK_SwitchTo
 21188 ;;		i2_Port_SetPin
 21189 ;;		i2_Timer0_Restart
 21190 ;;		i2_Timer0_Stop
 21191 ;; This function is called by:
 21192 ;; This function uses a non-reentrant model
 21193 ;;
 21194                           
 21195                           	psect	text103
 21196  012BF0                     __ptext103:
 21197                           	opt stack 0
 21198  012BF0                     i2_Motor_Step:
 21199                           	opt stack 13
 21200                           
 21201                           ;Motor.c: 77: if (MXK_SwitchTo(lMotor->mAddress))
 21202                           
 21203                           ;incstack = 0
 21204  012BF0  0100               	movlb	0	; () banked
 21205  012BF2  EE20 F004          	lfsr	2,4
 21206  012BF6  5177               	movf	_lMotor& (0+255),w,b
 21207  012BF8  26D9               	addwf	fsr2l,f,c
 21208  012BFA  5178               	movf	(_lMotor+1)& (0+255),w,b
 21209  012BFC  22DA               	addwfc	fsr2h,f,c
 21210  012BFE  50DF               	movf	indf2,w,c
 21211  012C00  ECCD  F0A3         	call	i2_MXK_SwitchTo
 21212  012C04  0900               	iorlw	0
 21213  012C06  B4D8               	btfsc	status,2,c
 21214  012C08  D06A               	goto	i2l1627
 21215                           
 21216                           ;Motor.c: 78: {
 21217                           ;Motor.c: 79: if (lMotor->mDelta != 0)
 21218  012C0A  C077  FFD9         	movff	_lMotor,fsr2l
 21219  012C0E  C078  FFDA         	movff	_lMotor+1,fsr2h
 21220  012C12  50DE               	movf	postinc2,w,c
 21221  012C14  10DE               	iorwf	postinc2,w,c
 21222  012C16  B4D8               	btfsc	status,2,c
 21223  012C18  D05D               	goto	i2l1628
 21224                           
 21225                           ;Motor.c: 80: {
 21226                           ;Motor.c: 82: if (lMotor->mDelta > 0)
 21227  012C1A  C077  FFD9         	movff	_lMotor,fsr2l
 21228  012C1E  C078  FFDA         	movff	_lMotor+1,fsr2h
 21229  012C22  0E01               	movlw	1
 21230  012C24  BEDB               	btfsc	plusw2,7,c
 21231  012C26  D022               	goto	i2l1629
 21232  012C28  0E01               	movlw	1
 21233  012C2A  50DB               	movf	plusw2,w,c
 21234  012C2C  E103               	bnz	i2u775_40
 21235  012C2E  04DE               	decf	postinc2,w,c
 21236  012C30  A0D8               	btfss	status,0,c
 21237  012C32  D01C               	goto	i2l1629
 21238  012C34                     i2u775_40:
 21239                           
 21240                           ;Motor.c: 83: {
 21241                           ;Motor.c: 84: if (lMotor->mDelta != 32767)
 21242  012C34  C077  FFD9         	movff	_lMotor,fsr2l
 21243  012C38  C078  FFDA         	movff	_lMotor+1,fsr2h
 21244  012C3C  28DE               	incf	postinc2,w,c
 21245  012C3E  E104               	bnz	i2u776_40
 21246  012C40  0E7F               	movlw	127
 21247  012C42  18DE               	xorwf	postinc2,w,c
 21248  012C44  B4D8               	btfsc	status,2,c
 21249  012C46  D007               	goto	i2l1630
 21250  012C48                     i2u776_40:
 21251                           
 21252                           ;Motor.c: 85: lMotor->mDelta --;
 21253  012C48  C077  FFD9         	movff	_lMotor,fsr2l
 21254  012C4C  C078  FFDA         	movff	_lMotor+1,fsr2h
 21255  012C50  06DE               	decf	postinc2,f,c
 21256  012C52  0E00               	movlw	0
 21257  012C54  5ADD               	subwfb	postdec2,f,c
 21258  012C56                     i2l1630:
 21259                           
 21260                           ;Motor.c: 87: Port_SetPin(&PortE, eP0, 1);
 21261  012C56  0E90               	movlw	low _PortE
 21262  012C58  6E10               	movwf	i2Port_SetPin@pInput,c
 21263  012C5A  0E00               	movlw	high _PortE
 21264  012C5C  6E11               	movwf	i2Port_SetPin@pInput+1,c
 21265  012C5E  0E00               	movlw	0
 21266  012C60  6E12               	movwf	i2Port_SetPin@pPin,c
 21267  012C62  0E01               	movlw	1
 21268  012C64  6E13               	movwf	i2Port_SetPin@pValue,c
 21269  012C66  EC21  F09B         	call	i2_Port_SetPin	;wreg free
 21270                           
 21271                           ;Motor.c: 88: }
 21272  012C6A  D01B               	goto	i2l1631
 21273  012C6C                     i2l1629:
 21274                           
 21275                           ;Motor.c: 89: else
 21276                           ;Motor.c: 90: {
 21277                           ;Motor.c: 91: if (lMotor->mDelta != -32767)
 21278  012C6C  C077  FFD9         	movff	_lMotor,fsr2l
 21279  012C70  C078  FFDA         	movff	_lMotor+1,fsr2h
 21280  012C74  04DE               	decf	postinc2,w,c
 21281  012C76  E104               	bnz	i2u777_40
 21282  012C78  0E80               	movlw	128
 21283  012C7A  18DE               	xorwf	postinc2,w,c
 21284  012C7C  B4D8               	btfsc	status,2,c
 21285  012C7E  D007               	goto	i2l1632
 21286  012C80                     i2u777_40:
 21287                           
 21288                           ;Motor.c: 92: lMotor->mDelta ++;
 21289  012C80  C077  FFD9         	movff	_lMotor,fsr2l
 21290  012C84  C078  FFDA         	movff	_lMotor+1,fsr2h
 21291  012C88  2ADE               	incf	postinc2,f,c
 21292  012C8A  0E00               	movlw	0
 21293  012C8C  22DD               	addwfc	postdec2,f,c
 21294  012C8E                     i2l1632:
 21295                           
 21296                           ;Motor.c: 94: Port_SetPin(&PortE, eP0, 0);
 21297  012C8E  0E90               	movlw	low _PortE
 21298  012C90  6E10               	movwf	i2Port_SetPin@pInput,c
 21299  012C92  0E00               	movlw	high _PortE
 21300  012C94  6E11               	movwf	i2Port_SetPin@pInput+1,c
 21301  012C96  0E00               	movlw	0
 21302  012C98  6E12               	movwf	i2Port_SetPin@pPin,c
 21303  012C9A  0E00               	movlw	0
 21304  012C9C  6E13               	movwf	i2Port_SetPin@pValue,c
 21305  012C9E  EC21  F09B         	call	i2_Port_SetPin	;wreg free
 21306  012CA2                     i2l1631:
 21307                           
 21308                           ;Motor.c: 95: }
 21309                           ;Motor.c: 98: Port_SetPin(&PortE, eP1, 1);
 21310  012CA2  0E90               	movlw	low _PortE
 21311  012CA4  6E10               	movwf	i2Port_SetPin@pInput,c
 21312  012CA6  0E00               	movlw	high _PortE
 21313  012CA8  6E11               	movwf	i2Port_SetPin@pInput+1,c
 21314  012CAA  0E01               	movlw	1
 21315  012CAC  6E12               	movwf	i2Port_SetPin@pPin,c
 21316  012CAE  0E01               	movlw	1
 21317  012CB0  6E13               	movwf	i2Port_SetPin@pValue,c
 21318  012CB2  EC21  F09B         	call	i2_Port_SetPin	;wreg free
 21319                           
 21320                           ;Motor.c: 99: Port_SetPin(&PortE, eP1, 0);
 21321  012CB6  0E90               	movlw	low _PortE
 21322  012CB8  6E10               	movwf	i2Port_SetPin@pInput,c
 21323  012CBA  0E00               	movlw	high _PortE
 21324  012CBC  6E11               	movwf	i2Port_SetPin@pInput+1,c
 21325  012CBE  0E01               	movlw	1
 21326  012CC0  6E12               	movwf	i2Port_SetPin@pPin,c
 21327  012CC2  0E00               	movlw	0
 21328  012CC4  6E13               	movwf	i2Port_SetPin@pValue,c
 21329  012CC6  EC21  F09B         	call	i2_Port_SetPin	;wreg free
 21330                           
 21331                           ;Motor.c: 101: MXK_Release();
 21332  012CCA  ECF1  F0A5         	call	i2_MXK_Release	;wreg free
 21333                           
 21334                           ;Motor.c: 102: Timer0_Restart();
 21335  012CCE  ECCF  F0A5         	call	i2_Timer0_Restart	;wreg free
 21336                           
 21337                           ;Motor.c: 103: return;
 21338  012CD2  0012               	return	
 21339  012CD4                     i2l1628:
 21340                           
 21341                           ;Motor.c: 104: }
 21342                           ;Motor.c: 105: MXK_Release();
 21343  012CD4  ECF1  F0A5         	call	i2_MXK_Release	;wreg free
 21344                           
 21345                           ;Motor.c: 106: Timer0_Stop();
 21346  012CD8  ECEE  F0A5         	call	i2_Timer0_Stop	;wreg free
 21347                           
 21348                           ;Motor.c: 107: return;
 21349  012CDC  0012               	return	
 21350  012CDE                     i2l1627:
 21351                           
 21352                           ;Motor.c: 108: }
 21353                           ;Motor.c: 111: MXK_Queue(lStepFunction);
 21354  012CDE  C066  F001         	movff	_lStepFunction,i2MXK_Queue@pCallback
 21355  012CE2  C067  F002         	movff	_lStepFunction+1,i2MXK_Queue@pCallback+1
 21356  012CE6  C068  F003         	movff	_lStepFunction+2,i2MXK_Queue@pCallback+2
 21357  012CEA  ECB6  F0A5         	call	i2_MXK_Queue	;wreg free
 21358  012CEE  0012               	return		;funcret
 21359  012CF0                     __end_ofi2_Motor_Step:
 21360                           	opt stack 0
 21361                           tosu	equ	0xFFF
 21362                           tosh	equ	0xFFE
 21363                           tosl	equ	0xFFD
 21364                           pclatu	equ	0xFFB
 21365                           pclath	equ	0xFFA
 21366                           tblptru	equ	0xFF8
 21367                           tblptrh	equ	0xFF7
 21368                           tblptrl	equ	0xFF6
 21369                           tablat	equ	0xFF5
 21370                           prodh	equ	0xFF4
 21371                           prodl	equ	0xFF3
 21372                           intcon	equ	0xFF2
 21373                           indf0	equ	0xFEF
 21374                           postinc0	equ	0xFEE
 21375                           fsr0h	equ	0xFEA
 21376                           fsr0l	equ	0xFE9
 21377                           wreg	equ	0xFE8
 21378                           indf1	equ	0xFE7
 21379                           postdec1	equ	0xFE5
 21380                           fsr1h	equ	0xFE2
 21381                           fsr1l	equ	0xFE1
 21382                           indf2	equ	0xFDF
 21383                           postinc2	equ	0xFDE
 21384                           postdec2	equ	0xFDD
 21385                           plusw2	equ	0xFDB
 21386                           fsr2h	equ	0xFDA
 21387                           fsr2l	equ	0xFD9
 21388                           status	equ	0xFD8
 21389                           
 21390 ;; *************** function i2_Timer0_Stop *****************
 21391 ;; Defined at:
 21392 ;;		line 89 in file "Library/Timer0.c"
 21393 ;; Parameters:    Size  Location     Type
 21394 ;;		None
 21395 ;; Auto vars:     Size  Location     Type
 21396 ;;		None
 21397 ;; Return value:  Size  Location     Type
 21398 ;;                  1    wreg      void 
 21399 ;; Registers used:
 21400 ;;		None
 21401 ;; Tracked objects:
 21402 ;;		On entry : 0/0
 21403 ;;		On exit  : 0/0
 21404 ;;		Unchanged: 0/0
 21405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21410 ;;Total ram usage:        0 bytes
 21411 ;; Hardware stack levels used:    1
 21412 ;; This function calls:
 21413 ;;		Nothing
 21414 ;; This function is called by:
 21415 ;;		_Timer0_ISR
 21416 ;;		i2_Motor_Step
 21417 ;; This function uses a non-reentrant model
 21418 ;;
 21419                           
 21420                           	psect	text104
 21421  014BDC                     __ptext104:
 21422                           	opt stack 0
 21423  014BDC                     i2_Timer0_Stop:
 21424                           	opt stack 17
 21425                           
 21426                           ;Timer0.c: 91: INTCONbits.TMR0IE = 0;
 21427                           
 21428                           ;incstack = 0
 21429  014BDC  9AF2               	bcf	intcon,5,c	;volatile
 21430                           
 21431                           ;Timer0.c: 92: INTCONbits.TMR0IF = 0;
 21432  014BDE  94F2               	bcf	intcon,2,c	;volatile
 21433  014BE0  0012               	return		;funcret
 21434  014BE2                     __end_ofi2_Timer0_Stop:
 21435                           	opt stack 0
 21436                           tosu	equ	0xFFF
 21437                           tosh	equ	0xFFE
 21438                           tosl	equ	0xFFD
 21439                           pclatu	equ	0xFFB
 21440                           pclath	equ	0xFFA
 21441                           tblptru	equ	0xFF8
 21442                           tblptrh	equ	0xFF7
 21443                           tblptrl	equ	0xFF6
 21444                           tablat	equ	0xFF5
 21445                           prodh	equ	0xFF4
 21446                           prodl	equ	0xFF3
 21447                           intcon	equ	0xFF2
 21448                           indf0	equ	0xFEF
 21449                           postinc0	equ	0xFEE
 21450                           fsr0h	equ	0xFEA
 21451                           fsr0l	equ	0xFE9
 21452                           wreg	equ	0xFE8
 21453                           indf1	equ	0xFE7
 21454                           postdec1	equ	0xFE5
 21455                           fsr1h	equ	0xFE2
 21456                           fsr1l	equ	0xFE1
 21457                           indf2	equ	0xFDF
 21458                           postinc2	equ	0xFDE
 21459                           postdec2	equ	0xFDD
 21460                           plusw2	equ	0xFDB
 21461                           fsr2h	equ	0xFDA
 21462                           fsr2l	equ	0xFD9
 21463                           status	equ	0xFD8
 21464                           
 21465 ;; *************** function i2_Timer0_Restart *****************
 21466 ;; Defined at:
 21467 ;;		line 83 in file "Library/Timer0.c"
 21468 ;; Parameters:    Size  Location     Type
 21469 ;;		None
 21470 ;; Auto vars:     Size  Location     Type
 21471 ;;		None
 21472 ;; Return value:  Size  Location     Type
 21473 ;;                  1    wreg      void 
 21474 ;; Registers used:
 21475 ;;		None
 21476 ;; Tracked objects:
 21477 ;;		On entry : 0/0
 21478 ;;		On exit  : 0/0
 21479 ;;		Unchanged: 0/0
 21480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21484 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21485 ;;Total ram usage:        0 bytes
 21486 ;; Hardware stack levels used:    1
 21487 ;; This function calls:
 21488 ;;		Nothing
 21489 ;; This function is called by:
 21490 ;;		i2_Motor_Step
 21491 ;; This function uses a non-reentrant model
 21492 ;;
 21493                           
 21494                           	psect	text105
 21495  014B9E                     __ptext105:
 21496                           	opt stack 0
 21497  014B9E                     i2_Timer0_Restart:
 21498                           	opt stack 16
 21499                           
 21500                           ;Timer0.c: 85: TMR0 = COUNTER;
 21501                           
 21502                           ;incstack = 0
 21503  014B9E  C075  FFD6         	movff	_COUNTER,4054	;volatile
 21504  014BA2  C076  FFD7         	movff	_COUNTER+1,4055	;volatile
 21505                           
 21506                           ;Timer0.c: 87: INTCONbits.TMR0IE = 1;
 21507  014BA6  8AF2               	bsf	intcon,5,c	;volatile
 21508  014BA8  0012               	return		;funcret
 21509  014BAA                     __end_ofi2_Timer0_Restart:
 21510                           	opt stack 0
 21511                           tosu	equ	0xFFF
 21512                           tosh	equ	0xFFE
 21513                           tosl	equ	0xFFD
 21514                           pclatu	equ	0xFFB
 21515                           pclath	equ	0xFFA
 21516                           tblptru	equ	0xFF8
 21517                           tblptrh	equ	0xFF7
 21518                           tblptrl	equ	0xFF6
 21519                           tablat	equ	0xFF5
 21520                           prodh	equ	0xFF4
 21521                           prodl	equ	0xFF3
 21522                           intcon	equ	0xFF2
 21523                           indf0	equ	0xFEF
 21524                           postinc0	equ	0xFEE
 21525                           fsr0h	equ	0xFEA
 21526                           fsr0l	equ	0xFE9
 21527                           wreg	equ	0xFE8
 21528                           indf1	equ	0xFE7
 21529                           postdec1	equ	0xFE5
 21530                           fsr1h	equ	0xFE2
 21531                           fsr1l	equ	0xFE1
 21532                           indf2	equ	0xFDF
 21533                           postinc2	equ	0xFDE
 21534                           postdec2	equ	0xFDD
 21535                           plusw2	equ	0xFDB
 21536                           fsr2h	equ	0xFDA
 21537                           fsr2l	equ	0xFD9
 21538                           status	equ	0xFD8
 21539                           
 21540 ;; *************** function i2_Port_SetPin *****************
 21541 ;; Defined at:
 21542 ;;		line 247 in file "Library/Port.c"
 21543 ;; Parameters:    Size  Location     Type
 21544 ;;  pInput          2   15[COMRAM] const PTR struct Port
 21545 ;;		 -> PortG(10), PortE(10), PortC(10), PortF(10), 
 21546 ;;  pPin            1   17[COMRAM] enum E6750
 21547 ;;  pValue          1   18[COMRAM] unsigned char 
 21548 ;; Auto vars:     Size  Location     Type
 21549 ;;  Port_SetPin     1   19[COMRAM] enum E6795
 21550 ;; Return value:  Size  Location     Type
 21551 ;;                  1    wreg      void 
 21552 ;; Registers used:
 21553 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21554 ;; Tracked objects:
 21555 ;;		On entry : 0/0
 21556 ;;		On exit  : 0/0
 21557 ;;		Unchanged: 0/0
 21558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21559 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21560 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21562 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21563 ;;Total ram usage:        5 bytes
 21564 ;; Hardware stack levels used:    1
 21565 ;; Hardware stack levels required when called:    3
 21566 ;; This function calls:
 21567 ;;		i2_Byte_SetBit
 21568 ;;		i2_Word_GetPair
 21569 ;; This function is called by:
 21570 ;;		i2_Motor_Step
 21571 ;; This function uses a non-reentrant model
 21572 ;;
 21573                           
 21574                           	psect	text106
 21575  013642                     __ptext106:
 21576                           	opt stack 0
 21577  013642                     i2_Port_SetPin:
 21578                           	opt stack 13
 21579                           
 21580                           ;Port.c: 249: ePinType Type = (ePinType)Word_GetPair(&pInput->mType, (UINT8)pPin);
 21581                           
 21582                           ;incstack = 0
 21583  013642  0E08               	movlw	8
 21584  013644  2410               	addwf	i2Port_SetPin@pInput,w,c
 21585  013646  6E0D               	movwf	i2Word_GetPair@pInput,c
 21586  013648  0E00               	movlw	0
 21587  01364A  2011               	addwfc	i2Port_SetPin@pInput+1,w,c
 21588  01364C  6E0E               	movwf	i2Word_GetPair@pInput+1,c
 21589  01364E  C012  F00F         	movff	i2Port_SetPin@pPin,i2Word_GetPair@pPair
 21590  013652  EC31  F0A4         	call	i2_Word_GetPair	;wreg free
 21591  013656  6E14               	movwf	i2Port_SetPin@Type,c
 21592                           
 21593                           ;Port.c: 250: switch (Type)
 21594  013658  D03B               	goto	i2l427
 21595  01365A                     
 21596                           ;Port.c: 256: pValue &= 1;
 21597  01365A  0E01               	movlw	1
 21598  01365C  1613               	andwf	i2Port_SetPin@pValue,f,c
 21599                           
 21600                           ;Port.c: 257: Byte_SetBit(pInput->mDirection, pPin, pValue);
 21601  01365E  EE20 F002          	lfsr	2,2
 21602  013662  5010               	movf	i2Port_SetPin@pInput,w,c
 21603  013664  26D9               	addwf	fsr2l,f,c
 21604  013666  5011               	movf	i2Port_SetPin@pInput+1,w,c
 21605  013668  22DA               	addwfc	fsr2h,f,c
 21606  01366A  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
 21607  01366E  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
 21608  013672  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
 21609  013676  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
 21610  01367A  EC38  F0A2         	call	i2_Byte_SetBit	;wreg free
 21611                           
 21612                           ;Port.c: 258: break;
 21613  01367E  0012               	return	
 21614  013680                     
 21615                           ;Port.c: 261: pValue &= 1;
 21616  013680  0E01               	movlw	1
 21617  013682  1613               	andwf	i2Port_SetPin@pValue,f,c
 21618                           
 21619                           ;Port.c: 262: pValue ^= 1;
 21620  013684  0E01               	movlw	1
 21621  013686  1A13               	xorwf	i2Port_SetPin@pValue,f,c
 21622                           
 21623                           ;Port.c: 263: Byte_SetBit(pInput->mDirection, pPin, pValue);
 21624  013688  EE20 F002          	lfsr	2,2
 21625  01368C  5010               	movf	i2Port_SetPin@pInput,w,c
 21626  01368E  26D9               	addwf	fsr2l,f,c
 21627  013690  5011               	movf	i2Port_SetPin@pInput+1,w,c
 21628  013692  22DA               	addwfc	fsr2h,f,c
 21629  013694  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
 21630  013698  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
 21631  01369C  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
 21632  0136A0  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
 21633  0136A4  EC38  F0A2         	call	i2_Byte_SetBit	;wreg free
 21634                           
 21635                           ;Port.c: 264: break;
 21636  0136A8  0012               	return	
 21637  0136AA                     
 21638                           ;Port.c: 266: pValue &= 1;
 21639  0136AA  0E01               	movlw	1
 21640  0136AC  1613               	andwf	i2Port_SetPin@pValue,f,c
 21641                           
 21642                           ;Port.c: 267: Byte_SetBit(pInput->mOutput, pPin, pValue);
 21643  0136AE  EE20 F004          	lfsr	2,4
 21644  0136B2  5010               	movf	i2Port_SetPin@pInput,w,c
 21645  0136B4  26D9               	addwf	fsr2l,f,c
 21646  0136B6  5011               	movf	i2Port_SetPin@pInput+1,w,c
 21647  0136B8  22DA               	addwfc	fsr2h,f,c
 21648  0136BA  CFDE F001          	movff	postinc2,i2Byte_SetBit@pInput
 21649  0136BE  CFDD F002          	movff	postdec2,i2Byte_SetBit@pInput+1
 21650  0136C2  C012  F003         	movff	i2Port_SetPin@pPin,i2Byte_SetBit@pBit
 21651  0136C6  C013  F004         	movff	i2Port_SetPin@pValue,i2Byte_SetBit@pValue
 21652  0136CA  EC38  F0A2         	call	i2_Byte_SetBit	;wreg free
 21653                           
 21654                           ;Port.c: 269: }
 21655                           
 21656                           ;Port.c: 268: break;
 21657  0136CE  0012               	return	
 21658  0136D0                     i2l427:
 21659  0136D0  5014               	movf	i2Port_SetPin@Type,w,c
 21660                           
 21661                           ; Switch size 1, requested type "space"
 21662                           ; Number of cases is 4, Range of values is 0 to 3
 21663                           ; switch strategies available:
 21664                           ; Name         Instructions Cycles
 21665                           ; simple_byte           13     7 (average)
 21666                           ;	Chosen strategy is simple_byte
 21667  0136D2  0A00               	xorlw	0	; case 0
 21668  0136D4  B4D8               	btfsc	status,2,c
 21669  0136D6  0012               	return	
 21670  0136D8  0A01               	xorlw	1	; case 1
 21671  0136DA  B4D8               	btfsc	status,2,c
 21672  0136DC  D7BE               	goto	i2l430
 21673  0136DE  0A03               	xorlw	3	; case 2
 21674  0136E0  B4D8               	btfsc	status,2,c
 21675  0136E2  D7CE               	goto	i2l432
 21676  0136E4  0A01               	xorlw	1	; case 3
 21677  0136E6  A4D8               	btfss	status,2,c
 21678  0136E8  0012               	return	
 21679  0136EA  D7DF               	goto	i2l433
 21680  0136EC                     __end_ofi2_Port_SetPin:
 21681                           	opt stack 0
 21682                           tosu	equ	0xFFF
 21683                           tosh	equ	0xFFE
 21684                           tosl	equ	0xFFD
 21685                           pclatu	equ	0xFFB
 21686                           pclath	equ	0xFFA
 21687                           tblptru	equ	0xFF8
 21688                           tblptrh	equ	0xFF7
 21689                           tblptrl	equ	0xFF6
 21690                           tablat	equ	0xFF5
 21691                           prodh	equ	0xFF4
 21692                           prodl	equ	0xFF3
 21693                           intcon	equ	0xFF2
 21694                           indf0	equ	0xFEF
 21695                           postinc0	equ	0xFEE
 21696                           fsr0h	equ	0xFEA
 21697                           fsr0l	equ	0xFE9
 21698                           wreg	equ	0xFE8
 21699                           indf1	equ	0xFE7
 21700                           postdec1	equ	0xFE5
 21701                           fsr1h	equ	0xFE2
 21702                           fsr1l	equ	0xFE1
 21703                           indf2	equ	0xFDF
 21704                           postinc2	equ	0xFDE
 21705                           postdec2	equ	0xFDD
 21706                           plusw2	equ	0xFDB
 21707                           fsr2h	equ	0xFDA
 21708                           fsr2l	equ	0xFD9
 21709                           status	equ	0xFD8
 21710                           
 21711 ;; *************** function i2_Word_GetPair *****************
 21712 ;; Defined at:
 21713 ;;		line 156 in file "Library/Types.c"
 21714 ;; Parameters:    Size  Location     Type
 21715 ;;  pInput          2   12[COMRAM] PTR struct Word
 21716 ;;		 -> PortG(10), PortA(10), PortB(10), PortE(10), 
 21717 ;;		 -> PortD(10), PortG_Property(2), PortF_Property(2), PortE_Property(2), 
 21718 ;;		 -> PortD_Property(2), PortC_Property(2), PortB_Property(2), PortA_Property(2), 
 21719 ;;		 -> PortC(10), PortF(10), NULL(0), 
 21720 ;;  pPair           1   14[COMRAM] unsigned char 
 21721 ;; Auto vars:     Size  Location     Type
 21722 ;;		None
 21723 ;; Return value:  Size  Location     Type
 21724 ;;                  1    wreg      unsigned char 
 21725 ;; Registers used:
 21726 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21727 ;; Tracked objects:
 21728 ;;		On entry : 0/0
 21729 ;;		On exit  : 0/0
 21730 ;;		Unchanged: 0/0
 21731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21732 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21735 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21736 ;;Total ram usage:        3 bytes
 21737 ;; Hardware stack levels used:    1
 21738 ;; Hardware stack levels required when called:    2
 21739 ;; This function calls:
 21740 ;;		i2_Byte_GetPair
 21741 ;; This function is called by:
 21742 ;;		i2_Port_SetPin
 21743 ;; This function uses a non-reentrant model
 21744 ;;
 21745                           
 21746                           	psect	text107
 21747  014862                     __ptext107:
 21748                           	opt stack 0
 21749  014862                     i2_Word_GetPair:
 21750                           	opt stack 13
 21751                           
 21752                           ;Types.c: 158: if (pPair >= 4)
 21753                           
 21754                           ;incstack = 0
 21755  014862  0E03               	movlw	3
 21756  014864  640F               	cpfsgt	i2Word_GetPair@pPair,c
 21757  014866  D00C               	goto	i2l781
 21758                           
 21759                           ;Types.c: 159: return Byte_GetPair(&(pInput->MS_Byte), pPair - 4);
 21760  014868  0E01               	movlw	1
 21761  01486A  240D               	addwf	i2Word_GetPair@pInput,w,c
 21762  01486C  6E0A               	movwf	i2Byte_GetPair@pInput,c
 21763  01486E  0E00               	movlw	0
 21764  014870  200E               	addwfc	i2Word_GetPair@pInput+1,w,c
 21765  014872  6E0B               	movwf	i2Byte_GetPair@pInput+1,c
 21766  014874  500F               	movf	i2Word_GetPair@pPair,w,c
 21767  014876  0FFC               	addlw	252
 21768  014878  6E0C               	movwf	i2Byte_GetPair@pPair,c
 21769  01487A  EC67  F0A5         	call	i2_Byte_GetPair	;wreg free
 21770  01487E  0012               	return	
 21771  014880                     i2l781:
 21772                           
 21773                           ;Types.c: 160: else
 21774                           ;Types.c: 161: return Byte_GetPair(&(pInput->LS_Byte), pPair);
 21775  014880  C00D  F00A         	movff	i2Word_GetPair@pInput,i2Byte_GetPair@pInput
 21776  014884  C00E  F00B         	movff	i2Word_GetPair@pInput+1,i2Byte_GetPair@pInput+1
 21777  014888  C00F  F00C         	movff	i2Word_GetPair@pPair,i2Byte_GetPair@pPair
 21778  01488C  EC67  F0A5         	call	i2_Byte_GetPair	;wreg free
 21779  014890  0012               	return	
 21780  014892                     __end_ofi2_Word_GetPair:
 21781                           	opt stack 0
 21782                           tosu	equ	0xFFF
 21783                           tosh	equ	0xFFE
 21784                           tosl	equ	0xFFD
 21785                           pclatu	equ	0xFFB
 21786                           pclath	equ	0xFFA
 21787                           tblptru	equ	0xFF8
 21788                           tblptrh	equ	0xFF7
 21789                           tblptrl	equ	0xFF6
 21790                           tablat	equ	0xFF5
 21791                           prodh	equ	0xFF4
 21792                           prodl	equ	0xFF3
 21793                           intcon	equ	0xFF2
 21794                           indf0	equ	0xFEF
 21795                           postinc0	equ	0xFEE
 21796                           fsr0h	equ	0xFEA
 21797                           fsr0l	equ	0xFE9
 21798                           wreg	equ	0xFE8
 21799                           indf1	equ	0xFE7
 21800                           postdec1	equ	0xFE5
 21801                           fsr1h	equ	0xFE2
 21802                           fsr1l	equ	0xFE1
 21803                           indf2	equ	0xFDF
 21804                           postinc2	equ	0xFDE
 21805                           postdec2	equ	0xFDD
 21806                           plusw2	equ	0xFDB
 21807                           fsr2h	equ	0xFDA
 21808                           fsr2l	equ	0xFD9
 21809                           status	equ	0xFD8
 21810                           
 21811 ;; *************** function i2_Byte_GetPair *****************
 21812 ;; Defined at:
 21813 ;;		line 87 in file "Library/Types.c"
 21814 ;; Parameters:    Size  Location     Type
 21815 ;;  pInput          2    9[COMRAM] PTR struct Byte
 21816 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
 21817 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
 21818 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
 21819 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
 21820 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
 21821 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
 21822 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
 21823 ;;		 -> NULL(0), 
 21824 ;;  pPair           1   11[COMRAM] unsigned char 
 21825 ;; Auto vars:     Size  Location     Type
 21826 ;;		None
 21827 ;; Return value:  Size  Location     Type
 21828 ;;                  1    wreg      unsigned char 
 21829 ;; Registers used:
 21830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21831 ;; Tracked objects:
 21832 ;;		On entry : 0/0
 21833 ;;		On exit  : 0/0
 21834 ;;		Unchanged: 0/0
 21835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21836 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21840 ;;Total ram usage:        3 bytes
 21841 ;; Hardware stack levels used:    1
 21842 ;; Hardware stack levels required when called:    1
 21843 ;; This function calls:
 21844 ;;		i2_Byte_GetZone
 21845 ;; This function is called by:
 21846 ;;		i2_Word_GetPair
 21847 ;; This function uses a non-reentrant model
 21848 ;;
 21849                           
 21850                           	psect	text108
 21851  014ACE                     __ptext108:
 21852                           	opt stack 0
 21853  014ACE                     i2_Byte_GetPair:
 21854                           	opt stack 13
 21855                           
 21856                           ;Types.c: 89: return Byte_GetZone(pInput, 4, pPair, 2);
 21857                           
 21858                           ;incstack = 0
 21859  014ACE  C00A  F001         	movff	i2Byte_GetPair@pInput,i2Byte_GetZone@pInput
 21860  014AD2  C00B  F002         	movff	i2Byte_GetPair@pInput+1,i2Byte_GetZone@pInput+1
 21861  014AD6  0E04               	movlw	4
 21862  014AD8  6E03               	movwf	i2Byte_GetZone@pMax,c
 21863  014ADA  C00C  F004         	movff	i2Byte_GetPair@pPair,i2Byte_GetZone@pChunk
 21864  014ADE  0E02               	movlw	2
 21865  014AE0  6E05               	movwf	i2Byte_GetZone@pChunkSize,c
 21866  014AE2  EC15  F09F         	call	i2_Byte_GetZone	;wreg free
 21867  014AE6  0012               	return	
 21868  014AE8                     __end_ofi2_Byte_GetPair:
 21869                           	opt stack 0
 21870                           tosu	equ	0xFFF
 21871                           tosh	equ	0xFFE
 21872                           tosl	equ	0xFFD
 21873                           pclatu	equ	0xFFB
 21874                           pclath	equ	0xFFA
 21875                           tblptru	equ	0xFF8
 21876                           tblptrh	equ	0xFF7
 21877                           tblptrl	equ	0xFF6
 21878                           tablat	equ	0xFF5
 21879                           prodh	equ	0xFF4
 21880                           prodl	equ	0xFF3
 21881                           intcon	equ	0xFF2
 21882                           indf0	equ	0xFEF
 21883                           postinc0	equ	0xFEE
 21884                           fsr0h	equ	0xFEA
 21885                           fsr0l	equ	0xFE9
 21886                           wreg	equ	0xFE8
 21887                           indf1	equ	0xFE7
 21888                           postdec1	equ	0xFE5
 21889                           fsr1h	equ	0xFE2
 21890                           fsr1l	equ	0xFE1
 21891                           indf2	equ	0xFDF
 21892                           postinc2	equ	0xFDE
 21893                           postdec2	equ	0xFDD
 21894                           plusw2	equ	0xFDB
 21895                           fsr2h	equ	0xFDA
 21896                           fsr2l	equ	0xFD9
 21897                           status	equ	0xFD8
 21898                           
 21899 ;; *************** function i2_Byte_GetZone *****************
 21900 ;; Defined at:
 21901 ;;		line 64 in file "Library/Types.c"
 21902 ;; Parameters:    Size  Location     Type
 21903 ;;  pInput          2    0[COMRAM] PTR struct Byte
 21904 ;;		 -> PortA_Property..(2), PortB_Property..(2), PortC_Property..(2), PortD_Property..(2), 
 21905 ;;		 -> PortE_Property..(2), PortF_Property..(2), PortG_Property..(2), PortF..(2), 
 21906 ;;		 -> PortC..(2), PortD..(2), PortE..(2), PortB..(2), 
 21907 ;;		 -> PortA..(2), PortG..(2), PortG(10), PortA(10), 
 21908 ;;		 -> PortB(10), PortE(10), PortD(10), PortG_Property(2), 
 21909 ;;		 -> PortF_Property(2), PortE_Property(2), PortD_Property(2), PortC_Property(2), 
 21910 ;;		 -> PortB_Property(2), PortA_Property(2), PortC(10), PortF(10), 
 21911 ;;		 -> NULL(0), 
 21912 ;;  pMax            1    2[COMRAM] unsigned char 
 21913 ;;  pChunk          1    3[COMRAM] unsigned char 
 21914 ;;  pChunkSize      1    4[COMRAM] unsigned char 
 21915 ;; Auto vars:     Size  Location     Type
 21916 ;;  Byte_GetZone    1    8[COMRAM] unsigned char 
 21917 ;;  Byte_GetZone    1    7[COMRAM] unsigned char 
 21918 ;;  Byte_GetZone    1    6[COMRAM] unsigned char 
 21919 ;; Return value:  Size  Location     Type
 21920 ;;                  1    wreg      unsigned char 
 21921 ;; Registers used:
 21922 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21923 ;; Tracked objects:
 21924 ;;		On entry : 0/0
 21925 ;;		On exit  : 0/0
 21926 ;;		Unchanged: 0/0
 21927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21928 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21930 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21931 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21932 ;;Total ram usage:        9 bytes
 21933 ;; Hardware stack levels used:    1
 21934 ;; This function calls:
 21935 ;;		Nothing
 21936 ;; This function is called by:
 21937 ;;		i2_Byte_GetPair
 21938 ;; This function uses a non-reentrant model
 21939 ;;
 21940                           
 21941                           	psect	text109
 21942  013E2A                     __ptext109:
 21943                           	opt stack 0
 21944  013E2A                     i2_Byte_GetZone:
 21945                           	opt stack 13
 21946                           
 21947                           ;Types.c: 66: UINT8 Output = pInput->mBits;
 21948                           
 21949                           ;incstack = 0
 21950  013E2A  C001  FFF6         	movff	i2Byte_GetZone@pInput,tblptrl
 21951  013E2E  C002  FFF7         	movff	i2Byte_GetZone@pInput+1,tblptrh
 21952  013E32  0E00               	movlw	low (__mediumconst shr (0+16))
 21953  013E34  6EF8               	movwf	tblptru,c
 21954  013E36  0E0F               	movlw	(high __ramtop+-1)
 21955  013E38  64F7               	cpfsgt	tblptrh,c
 21956  013E3A  D003               	bra	i2u488_47
 21957  013E3C  0008               	tblrd		*
 21958  013E3E  50F5               	movf	tablat,w,c
 21959  013E40  D005               	bra	i2u488_40
 21960  013E42                     i2u488_47:
 21961  013E42  CFF6 FFE9          	movff	tblptrl,fsr0l
 21962  013E46  CFF7 FFEA          	movff	tblptrh,fsr0h
 21963  013E4A  50EF               	movf	indf0,w,c
 21964  013E4C                     i2u488_40:
 21965  013E4C  6E09               	movwf	i2Byte_GetZone@Output,c
 21966                           
 21967                           ;Types.c: 67: UINT8 MASK = MASKS[pChunkSize];
 21968  013E4E  5005               	movf	i2Byte_GetZone@pChunkSize,w,c
 21969  013E50  0D01               	mullw	1
 21970  013E52  0ECF               	movlw	low _MASKS
 21971  013E54  24F3               	addwf	prodl,w,c
 21972  013E56  6EF6               	movwf	tblptrl,c
 21973  013E58  0EFD               	movlw	high _MASKS
 21974  013E5A  20F4               	addwfc	prodh,w,c
 21975  013E5C  6EF7               	movwf	tblptrh,c
 21976  013E5E                     	if	1	;There are 3 active tblptr bytes
 21977  013E5E  6AF8               	clrf	tblptru,c
 21978  013E60  0E00               	movlw	low (__mediumconst shr (0+16))
 21979  013E62  22F8               	addwfc	tblptru,f,c
 21980  013E64                     	endif
 21981  013E64  0008               	tblrd		*
 21982  013E66  CFF5 F007          	movff	tablat,i2Byte_GetZone@MASK
 21983                           
 21984                           ;Types.c: 68: UINT8 Offset = 0;
 21985  013E6A  0E00               	movlw	0
 21986  013E6C  6E08               	movwf	i2Byte_GetZone@Offset,c
 21987                           
 21988                           ;Types.c: 70: while (pChunk >= pMax)
 21989  013E6E  D003               	goto	i2l732
 21990  013E70                     
 21991                           ;Types.c: 71: {
 21992                           ;Types.c: 72: pChunk -= pMax;
 21993  013E70  5003               	movf	i2Byte_GetZone@pMax,w,c
 21994  013E72  5E04               	subwf	i2Byte_GetZone@pChunk,f,c
 21995                           
 21996                           ;Types.c: 73: Offset += 1;
 21997  013E74  2A08               	incf	i2Byte_GetZone@Offset,f,c
 21998  013E76                     i2l732:
 21999  013E76  5003               	movf	i2Byte_GetZone@pMax,w,c
 22000  013E78  5C04               	subwf	i2Byte_GetZone@pChunk,w,c
 22001  013E7A  B0D8               	btfsc	status,0,c
 22002  013E7C  D7F9               	goto	i2l733
 22003                           
 22004                           ;Types.c: 74: }
 22005                           ;Types.c: 75: pChunk *= pChunkSize;
 22006  013E7E  5005               	movf	i2Byte_GetZone@pChunkSize,w,c
 22007  013E80  0204               	mulwf	i2Byte_GetZone@pChunk,c
 22008  013E82  50F3               	movf	prodl,w,c
 22009  013E84  6E04               	movwf	i2Byte_GetZone@pChunk,c
 22010                           
 22011                           ;Types.c: 76: pChunk += Offset;
 22012  013E86  5008               	movf	i2Byte_GetZone@Offset,w,c
 22013  013E88  2604               	addwf	i2Byte_GetZone@pChunk,f,c
 22014                           
 22015                           ;Types.c: 78: Output >>= pChunk;
 22016  013E8A  2804               	incf	i2Byte_GetZone@pChunk,w,c
 22017  013E8C  6E06               	movwf	??i2_Byte_GetZone& (0+255),c
 22018  013E8E  D002               	goto	i2u490_40
 22019  013E90                     i2u490_45:
 22020  013E90  90D8               	bcf	status,0,c
 22021  013E92  3209               	rrcf	i2Byte_GetZone@Output,f,c
 22022  013E94                     i2u490_40:
 22023  013E94  2E06               	decfsz	??i2_Byte_GetZone& (0+255),f,c
 22024  013E96  D7FC               	goto	i2u490_45
 22025                           
 22026                           ;Types.c: 79: Output &= MASK;
 22027  013E98  5007               	movf	i2Byte_GetZone@MASK,w,c
 22028  013E9A  1609               	andwf	i2Byte_GetZone@Output,f,c
 22029                           
 22030                           ;Types.c: 80: return Output;
 22031  013E9C  5009               	movf	i2Byte_GetZone@Output,w,c
 22032  013E9E  0012               	return	
 22033  013EA0                     __end_ofi2_Byte_GetZone:
 22034                           	opt stack 0
 22035                           tosu	equ	0xFFF
 22036                           tosh	equ	0xFFE
 22037                           tosl	equ	0xFFD
 22038                           pclatu	equ	0xFFB
 22039                           pclath	equ	0xFFA
 22040                           tblptru	equ	0xFF8
 22041                           tblptrh	equ	0xFF7
 22042                           tblptrl	equ	0xFF6
 22043                           tablat	equ	0xFF5
 22044                           prodh	equ	0xFF4
 22045                           prodl	equ	0xFF3
 22046                           intcon	equ	0xFF2
 22047                           indf0	equ	0xFEF
 22048                           postinc0	equ	0xFEE
 22049                           fsr0h	equ	0xFEA
 22050                           fsr0l	equ	0xFE9
 22051                           wreg	equ	0xFE8
 22052                           indf1	equ	0xFE7
 22053                           postdec1	equ	0xFE5
 22054                           fsr1h	equ	0xFE2
 22055                           fsr1l	equ	0xFE1
 22056                           indf2	equ	0xFDF
 22057                           postinc2	equ	0xFDE
 22058                           postdec2	equ	0xFDD
 22059                           plusw2	equ	0xFDB
 22060                           fsr2h	equ	0xFDA
 22061                           fsr2l	equ	0xFD9
 22062                           status	equ	0xFD8
 22063                           
 22064 ;; *************** function i2_Byte_SetBit *****************
 22065 ;; Defined at:
 22066 ;;		line 32 in file "Library/Types.c"
 22067 ;; Parameters:    Size  Location     Type
 22068 ;;  pInput          2    0[COMRAM] PTR struct Byte
 22069 ;;		 -> SSP2CON2(1), SSP1CON2(1), SSP2CON1(1), SSP2STAT(1), 
 22070 ;;		 -> SSP1CON1(1), SSP1STAT(1), TRISG(1), TRISF(1), 
 22071 ;;		 -> TRISE(1), TRISD(1), TRISC(1), TRISB(1), 
 22072 ;;		 -> TRISA(1), PORTG(1), PORTF(1), PORTE(1), 
 22073 ;;		 -> PORTD(1), PORTC(1), PORTB(1), PORTA(1), 
 22074 ;;		 -> NULL(0), 
 22075 ;;  pBit            1    2[COMRAM] unsigned char 
 22076 ;;  pValue          1    3[COMRAM] unsigned char 
 22077 ;; Auto vars:     Size  Location     Type
 22078 ;;		None
 22079 ;; Return value:  Size  Location     Type
 22080 ;;                  1    wreg      void 
 22081 ;; Registers used:
 22082 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22083 ;; Tracked objects:
 22084 ;;		On entry : 0/0
 22085 ;;		On exit  : 0/0
 22086 ;;		Unchanged: 0/0
 22087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22088 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22090 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22091 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22092 ;;Total ram usage:        7 bytes
 22093 ;; Hardware stack levels used:    1
 22094 ;; This function calls:
 22095 ;;		Nothing
 22096 ;; This function is called by:
 22097 ;;		i2_Port_SetPin
 22098 ;; This function uses a non-reentrant model
 22099 ;;
 22100                           
 22101                           	psect	text110
 22102  014470                     __ptext110:
 22103                           	opt stack 0
 22104  014470                     i2_Byte_SetBit:
 22105                           	opt stack 15
 22106                           
 22107                           ;Types.c: 34: pValue &= 1;
 22108                           
 22109                           ;incstack = 0
 22110  014470  0E01               	movlw	1
 22111  014472  1604               	andwf	i2Byte_SetBit@pValue,f,c
 22112                           
 22113                           ;Types.c: 35: pInput->mBits &= ~(1 << pBit);
 22114  014474  C003  F005         	movff	i2Byte_SetBit@pBit,??i2_Byte_SetBit
 22115  014478  0E01               	movlw	1
 22116  01447A  6E06               	movwf	(??i2_Byte_SetBit+1)& (0+255),c
 22117  01447C  2A05               	incf	??i2_Byte_SetBit,f,c
 22118  01447E  D002               	goto	i2u556_44
 22119  014480                     i2u556_45:
 22120  014480  90D8               	bcf	status,0,c
 22121  014482  3606               	rlcf	??i2_Byte_SetBit+1,f,c
 22122  014484                     i2u556_44:
 22123  014484  2E05               	decfsz	??i2_Byte_SetBit,f,c
 22124  014486  D7FC               	goto	i2u556_45
 22125  014488  5006               	movf	??i2_Byte_SetBit+1,w,c
 22126  01448A  0AFF               	xorlw	255
 22127  01448C  6E07               	movwf	(??i2_Byte_SetBit+2)& (0+255),c
 22128  01448E  C001  FFD9         	movff	i2Byte_SetBit@pInput,fsr2l
 22129  014492  C002  FFDA         	movff	i2Byte_SetBit@pInput+1,fsr2h
 22130  014496  5007               	movf	??i2_Byte_SetBit+2,w,c
 22131  014498  16DF               	andwf	indf2,f,c
 22132                           
 22133                           ;Types.c: 36: pInput->mBits |= pValue << pBit;
 22134  01449A  C003  F005         	movff	i2Byte_SetBit@pBit,??i2_Byte_SetBit
 22135  01449E  C004  F006         	movff	i2Byte_SetBit@pValue,??i2_Byte_SetBit+1
 22136  0144A2  2A05               	incf	??i2_Byte_SetBit,f,c
 22137  0144A4  D002               	goto	i2u557_44
 22138  0144A6                     i2u557_45:
 22139  0144A6  90D8               	bcf	status,0,c
 22140  0144A8  3606               	rlcf	??i2_Byte_SetBit+1,f,c
 22141  0144AA                     i2u557_44:
 22142  0144AA  2E05               	decfsz	??i2_Byte_SetBit,f,c
 22143  0144AC  D7FC               	goto	i2u557_45
 22144  0144AE  C001  FFD9         	movff	i2Byte_SetBit@pInput,fsr2l
 22145  0144B2  C002  FFDA         	movff	i2Byte_SetBit@pInput+1,fsr2h
 22146  0144B6  5006               	movf	??i2_Byte_SetBit+1,w,c
 22147  0144B8  12DF               	iorwf	indf2,f,c
 22148  0144BA  0012               	return		;funcret
 22149  0144BC                     __end_ofi2_Byte_SetBit:
 22150                           	opt stack 0
 22151                           tosu	equ	0xFFF
 22152                           tosh	equ	0xFFE
 22153                           tosl	equ	0xFFD
 22154                           pclatu	equ	0xFFB
 22155                           pclath	equ	0xFFA
 22156                           tblptru	equ	0xFF8
 22157                           tblptrh	equ	0xFF7
 22158                           tblptrl	equ	0xFF6
 22159                           tablat	equ	0xFF5
 22160                           prodh	equ	0xFF4
 22161                           prodl	equ	0xFF3
 22162                           intcon	equ	0xFF2
 22163                           indf0	equ	0xFEF
 22164                           postinc0	equ	0xFEE
 22165                           fsr0h	equ	0xFEA
 22166                           fsr0l	equ	0xFE9
 22167                           wreg	equ	0xFE8
 22168                           indf1	equ	0xFE7
 22169                           postdec1	equ	0xFE5
 22170                           fsr1h	equ	0xFE2
 22171                           fsr1l	equ	0xFE1
 22172                           indf2	equ	0xFDF
 22173                           postinc2	equ	0xFDE
 22174                           postdec2	equ	0xFDD
 22175                           plusw2	equ	0xFDB
 22176                           fsr2h	equ	0xFDA
 22177                           fsr2l	equ	0xFD9
 22178                           status	equ	0xFD8
 22179                           
 22180 ;; *************** function i2_MXK_SwitchTo *****************
 22181 ;; Defined at:
 22182 ;;		line 105 in file "Library/MXK.c"
 22183 ;; Parameters:    Size  Location     Type
 22184 ;;  pModule         1    wreg     enum E6927
 22185 ;; Auto vars:     Size  Location     Type
 22186 ;;  pModule         1    7[COMRAM] enum E6927
 22187 ;;  MXK_SwitchTo    1    6[COMRAM] unsigned char 
 22188 ;; Return value:  Size  Location     Type
 22189 ;;                  1    wreg      unsigned char 
 22190 ;; Registers used:
 22191 ;;		wreg, status,2, status,0, cstack
 22192 ;; Tracked objects:
 22193 ;;		On entry : 0/0
 22194 ;;		On exit  : 0/0
 22195 ;;		Unchanged: 0/0
 22196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22198 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22200 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22201 ;;Total ram usage:        2 bytes
 22202 ;; Hardware stack levels used:    1
 22203 ;; Hardware stack levels required when called:    1
 22204 ;; This function calls:
 22205 ;;		i2_delay_us
 22206 ;; This function is called by:
 22207 ;;		i2_Motor_Step
 22208 ;; This function uses a non-reentrant model
 22209 ;;
 22210                           
 22211                           	psect	text111
 22212  01479A                     __ptext111:
 22213                           	opt stack 0
 22214  01479A                     i2_MXK_SwitchTo:
 22215                           	opt stack 15
 22216                           
 22217                           ;incstack = 0
 22218                           ;i2MXK_SwitchTo@pModule stored from wreg
 22219  01479A  6E08               	movwf	i2MXK_SwitchTo@pModule,c
 22220                           
 22221                           ;MXK.c: 107: UINT8 CUR = 0xF & PORTG;
 22222  01479C  5086               	movf	3974,w,c	;volatile
 22223  01479E  0B0F               	andlw	15
 22224  0147A0  6E07               	movwf	i2MXK_SwitchTo@CUR,c
 22225                           
 22226                           ;MXK.c: 109: if (Bus_State == eMXK_Busy)
 22227  0147A2  504C               	movf	_Bus_State,w,c
 22228  0147A4  A4D8               	btfss	status,2,c
 22229  0147A6  D002               	goto	i2l1730
 22230                           
 22231                           ;MXK.c: 110: return 0;
 22232  0147A8  0E00               	movlw	0
 22233  0147AA  0012               	return	
 22234  0147AC                     i2l1730:
 22235                           
 22236                           ;MXK.c: 112: Bus_State = eMXK_Busy;
 22237  0147AC  0E00               	movlw	0
 22238  0147AE  6E4C               	movwf	_Bus_State,c
 22239                           
 22240                           ;MXK.c: 114: if (CUR != pModule)
 22241  0147B0  5008               	movf	i2MXK_SwitchTo@pModule,w,c
 22242  0147B2  1807               	xorwf	i2MXK_SwitchTo@CUR,w,c
 22243  0147B4  B4D8               	btfsc	status,2,c
 22244  0147B6  D00A               	goto	i2l1732
 22245                           
 22246                           ;MXK.c: 115: {
 22247                           ;MXK.c: 116: PORTG &= ~(0xF);
 22248  0147B8  0EF0               	movlw	240
 22249  0147BA  1686               	andwf	3974,f,c	;volatile
 22250                           
 22251                           ;MXK.c: 117: PORTG |= pModule;
 22252  0147BC  5008               	movf	i2MXK_SwitchTo@pModule,w,c
 22253  0147BE  1286               	iorwf	3974,f,c	;volatile
 22254                           
 22255                           ;MXK.c: 120: delay_us(10);
 22256  0147C0  0E00               	movlw	0
 22257  0147C2  6E02               	movwf	i2delay_us@us+1,c
 22258  0147C4  0E0A               	movlw	10
 22259  0147C6  6E01               	movwf	i2delay_us@us,c
 22260  0147C8  EC31  F0A3         	call	i2_delay_us	;wreg free
 22261  0147CC                     i2l1732:
 22262                           
 22263                           ;MXK.c: 121: }
 22264                           ;MXK.c: 122: return 1;
 22265  0147CC  0E01               	movlw	1
 22266  0147CE  0012               	return	
 22267  0147D0                     __end_ofi2_MXK_SwitchTo:
 22268                           	opt stack 0
 22269                           tosu	equ	0xFFF
 22270                           tosh	equ	0xFFE
 22271                           tosl	equ	0xFFD
 22272                           pclatu	equ	0xFFB
 22273                           pclath	equ	0xFFA
 22274                           tblptru	equ	0xFF8
 22275                           tblptrh	equ	0xFF7
 22276                           tblptrl	equ	0xFF6
 22277                           tablat	equ	0xFF5
 22278                           prodh	equ	0xFF4
 22279                           prodl	equ	0xFF3
 22280                           intcon	equ	0xFF2
 22281                           indf0	equ	0xFEF
 22282                           postinc0	equ	0xFEE
 22283                           fsr0h	equ	0xFEA
 22284                           fsr0l	equ	0xFE9
 22285                           wreg	equ	0xFE8
 22286                           indf1	equ	0xFE7
 22287                           postdec1	equ	0xFE5
 22288                           fsr1h	equ	0xFE2
 22289                           fsr1l	equ	0xFE1
 22290                           indf2	equ	0xFDF
 22291                           postinc2	equ	0xFDE
 22292                           postdec2	equ	0xFDD
 22293                           plusw2	equ	0xFDB
 22294                           fsr2h	equ	0xFDA
 22295                           fsr2l	equ	0xFD9
 22296                           status	equ	0xFD8
 22297                           
 22298 ;; *************** function i2_delay_us *****************
 22299 ;; Defined at:
 22300 ;;		line 255 in file "Library/Types.c"
 22301 ;; Parameters:    Size  Location     Type
 22302 ;;  us              2    0[COMRAM] unsigned short 
 22303 ;; Auto vars:     Size  Location     Type
 22304 ;;  delay_us        4    2[COMRAM] unsigned long 
 22305 ;; Return value:  Size  Location     Type
 22306 ;;                  1    wreg      void 
 22307 ;; Registers used:
 22308 ;;		wreg, status,2, status,0
 22309 ;; Tracked objects:
 22310 ;;		On entry : 0/0
 22311 ;;		On exit  : 0/0
 22312 ;;		Unchanged: 0/0
 22313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22315 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22317 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22318 ;;Total ram usage:        6 bytes
 22319 ;; Hardware stack levels used:    1
 22320 ;; This function calls:
 22321 ;;		Nothing
 22322 ;; This function is called by:
 22323 ;;		i2_MXK_SwitchTo
 22324 ;; This function uses a non-reentrant model
 22325 ;;
 22326                           
 22327                           	psect	text112
 22328  014662                     __ptext112:
 22329                           	opt stack 0
 22330  014662                     i2_delay_us:
 22331                           	opt stack 15
 22332                           
 22333                           ;Types.c: 256: unsigned long u;
 22334                           ;Types.c: 257: while (us--) {
 22335                           
 22336                           ;incstack = 0
 22337  014662  D016               	goto	i2u560_40
 22338  014664                     i2l9220:
 22339                           
 22340                           ;Types.c: 259: for (u = 0; u < ((((48*1000000L) / 4000UL) / 10UL)/1000UL); u++) {
 22341  014664  0E00               	movlw	0
 22342  014666  6E03               	movwf	i2delay_us@u,c
 22343  014668  0E00               	movlw	0
 22344  01466A  6E04               	movwf	i2delay_us@u+1,c
 22345  01466C  0E00               	movlw	0
 22346  01466E  6E05               	movwf	i2delay_us@u+2,c
 22347  014670  0E00               	movlw	0
 22348  014672  6E06               	movwf	i2delay_us@u+3,c
 22349  014674                     i2l9222:
 22350  014674  5003               	movf	i2delay_us@u,w,c
 22351  014676  1004               	iorwf	i2delay_us@u+1,w,c
 22352  014678  1005               	iorwf	i2delay_us@u+2,w,c
 22353  01467A  1006               	iorwf	i2delay_us@u+3,w,c
 22354  01467C  A4D8               	btfss	status,2,c
 22355  01467E  D008               	goto	i2u560_40
 22356  014680  F000               	nop		; ;# 
 22357  014682  0E01               	movlw	1
 22358  014684  2603               	addwf	i2delay_us@u,f,c
 22359  014686  0E00               	movlw	0
 22360  014688  2204               	addwfc	i2delay_us@u+1,f,c
 22361  01468A  2205               	addwfc	i2delay_us@u+2,f,c
 22362  01468C  2206               	addwfc	i2delay_us@u+3,f,c
 22363  01468E  D7F2               	goto	i2l9222
 22364  014690                     i2u560_40:
 22365  014690  0601               	decf	i2delay_us@us,f,c
 22366  014692  A0D8               	btfss	status,0,c
 22367  014694  0602               	decf	i2delay_us@us+1,f,c
 22368  014696  2801               	incf	i2delay_us@us,w,c
 22369  014698  E1E5               	bnz	i2l9220
 22370  01469A  2802               	incf	i2delay_us@us+1,w,c
 22371  01469C  B4D8               	btfsc	status,2,c
 22372  01469E  0012               	return	
 22373  0146A0  D7E1               	goto	i2l832
 22374  0146A2                     __end_ofi2_delay_us:
 22375                           	opt stack 0
 22376                           tosu	equ	0xFFF
 22377                           tosh	equ	0xFFE
 22378                           tosl	equ	0xFFD
 22379                           pclatu	equ	0xFFB
 22380                           pclath	equ	0xFFA
 22381                           tblptru	equ	0xFF8
 22382                           tblptrh	equ	0xFF7
 22383                           tblptrl	equ	0xFF6
 22384                           tablat	equ	0xFF5
 22385                           prodh	equ	0xFF4
 22386                           prodl	equ	0xFF3
 22387                           intcon	equ	0xFF2
 22388                           indf0	equ	0xFEF
 22389                           postinc0	equ	0xFEE
 22390                           fsr0h	equ	0xFEA
 22391                           fsr0l	equ	0xFE9
 22392                           wreg	equ	0xFE8
 22393                           indf1	equ	0xFE7
 22394                           postdec1	equ	0xFE5
 22395                           fsr1h	equ	0xFE2
 22396                           fsr1l	equ	0xFE1
 22397                           indf2	equ	0xFDF
 22398                           postinc2	equ	0xFDE
 22399                           postdec2	equ	0xFDD
 22400                           plusw2	equ	0xFDB
 22401                           fsr2h	equ	0xFDA
 22402                           fsr2l	equ	0xFD9
 22403                           status	equ	0xFD8
 22404                           
 22405 ;; *************** function i2_MXK_Release *****************
 22406 ;; Defined at:
 22407 ;;		line 130 in file "Library/MXK.c"
 22408 ;; Parameters:    Size  Location     Type
 22409 ;;		None
 22410 ;; Auto vars:     Size  Location     Type
 22411 ;;		None
 22412 ;; Return value:  Size  Location     Type
 22413 ;;                  1    wreg      unsigned char 
 22414 ;; Registers used:
 22415 ;;		wreg, status,2, status,0
 22416 ;; Tracked objects:
 22417 ;;		On entry : 0/0
 22418 ;;		On exit  : 0/0
 22419 ;;		Unchanged: 0/0
 22420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22425 ;;Total ram usage:        0 bytes
 22426 ;; Hardware stack levels used:    1
 22427 ;; This function calls:
 22428 ;;		Nothing
 22429 ;; This function is called by:
 22430 ;;		i2_Motor_Step
 22431 ;; This function uses a non-reentrant model
 22432 ;;
 22433                           
 22434                           	psect	text113
 22435  014BE2                     __ptext113:
 22436                           	opt stack 0
 22437  014BE2                     i2_MXK_Release:
 22438                           	opt stack 16
 22439                           
 22440                           ;MXK.c: 132: Bus_State = eMXK_Idle;
 22441                           
 22442                           ;incstack = 0
 22443  014BE2  0E01               	movlw	1
 22444  014BE4  6E4C               	movwf	_Bus_State,c
 22445                           
 22446                           ;MXK.c: 135: return 1;
 22447                           ;	Return value of i2_MXK_Release is never used
 22448  014BE6  0012               	return	
 22449  014BE8                     __end_ofi2_MXK_Release:
 22450                           	opt stack 0
 22451                           tosu	equ	0xFFF
 22452                           tosh	equ	0xFFE
 22453                           tosl	equ	0xFFD
 22454                           pclatu	equ	0xFFB
 22455                           pclath	equ	0xFFA
 22456                           tblptru	equ	0xFF8
 22457                           tblptrh	equ	0xFF7
 22458                           tblptrl	equ	0xFF6
 22459                           tablat	equ	0xFF5
 22460                           prodh	equ	0xFF4
 22461                           prodl	equ	0xFF3
 22462                           intcon	equ	0xFF2
 22463                           indf0	equ	0xFEF
 22464                           postinc0	equ	0xFEE
 22465                           fsr0h	equ	0xFEA
 22466                           fsr0l	equ	0xFE9
 22467                           wreg	equ	0xFE8
 22468                           indf1	equ	0xFE7
 22469                           postdec1	equ	0xFE5
 22470                           fsr1h	equ	0xFE2
 22471                           fsr1l	equ	0xFE1
 22472                           indf2	equ	0xFDF
 22473                           postinc2	equ	0xFDE
 22474                           postdec2	equ	0xFDD
 22475                           plusw2	equ	0xFDB
 22476                           fsr2h	equ	0xFDA
 22477                           fsr2l	equ	0xFD9
 22478                           status	equ	0xFD8
 22479                           
 22480 ;; *************** function i2_MXK_Queue *****************
 22481 ;; Defined at:
 22482 ;;		line 144 in file "Library/MXK.c"
 22483 ;; Parameters:    Size  Location     Type
 22484 ;;  pCallback       3    0[COMRAM] PTR FTN()void 
 22485 ;;		 -> Absolute function(1), Motor_Step(1), 
 22486 ;; Auto vars:     Size  Location     Type
 22487 ;;		None
 22488 ;; Return value:  Size  Location     Type
 22489 ;;                  1    wreg      void 
 22490 ;; Registers used:
 22491 ;;		wreg, status,2, status,0
 22492 ;; Tracked objects:
 22493 ;;		On entry : 0/0
 22494 ;;		On exit  : 0/0
 22495 ;;		Unchanged: 0/0
 22496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22497 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22500 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22501 ;;Total ram usage:        3 bytes
 22502 ;; Hardware stack levels used:    1
 22503 ;; This function calls:
 22504 ;;		Nothing
 22505 ;; This function is called by:
 22506 ;;		i2_Motor_Step
 22507 ;; This function uses a non-reentrant model
 22508 ;;
 22509                           
 22510                           	psect	text114
 22511  014B6C                     __ptext114:
 22512                           	opt stack 0
 22513  014B6C                     i2_MXK_Queue:
 22514                           	opt stack 16
 22515                           
 22516                           ;MXK.c: 146: lQueue = pCallback;
 22517                           
 22518                           ;incstack = 0
 22519  014B6C  C001  F063         	movff	i2MXK_Queue@pCallback,_lQueue	;volatile
 22520  014B70  C002  F064         	movff	i2MXK_Queue@pCallback+1,_lQueue+1	;volatile
 22521  014B74  C003  F065         	movff	i2MXK_Queue@pCallback+2,_lQueue+2	;volatile
 22522  014B78  0012               	return		;funcret
 22523  014B7A                     __end_ofi2_MXK_Queue:
 22524                           	opt stack 0
 22525                           tosu	equ	0xFFF
 22526                           tosh	equ	0xFFE
 22527                           tosl	equ	0xFFD
 22528                           pclatu	equ	0xFFB
 22529                           pclath	equ	0xFFA
 22530                           tblptru	equ	0xFF8
 22531                           tblptrh	equ	0xFF7
 22532                           tblptrl	equ	0xFF6
 22533                           tablat	equ	0xFF5
 22534                           prodh	equ	0xFF4
 22535                           prodl	equ	0xFF3
 22536                           intcon	equ	0xFF2
 22537                           indf0	equ	0xFEF
 22538                           postinc0	equ	0xFEE
 22539                           fsr0h	equ	0xFEA
 22540                           fsr0l	equ	0xFE9
 22541                           wreg	equ	0xFE8
 22542                           indf1	equ	0xFE7
 22543                           postdec1	equ	0xFE5
 22544                           fsr1h	equ	0xFE2
 22545                           fsr1l	equ	0xFE1
 22546                           indf2	equ	0xFDF
 22547                           postinc2	equ	0xFDE
 22548                           postdec2	equ	0xFDD
 22549                           plusw2	equ	0xFDB
 22550                           fsr2h	equ	0xFDA
 22551                           fsr2l	equ	0xFD9
 22552                           status	equ	0xFD8
 22553                           tosu	equ	0xFFF
 22554                           tosh	equ	0xFFE
 22555                           tosl	equ	0xFFD
 22556                           pclatu	equ	0xFFB
 22557                           pclath	equ	0xFFA
 22558                           tblptru	equ	0xFF8
 22559                           tblptrh	equ	0xFF7
 22560                           tblptrl	equ	0xFF6
 22561                           tablat	equ	0xFF5
 22562                           prodh	equ	0xFF4
 22563                           prodl	equ	0xFF3
 22564                           intcon	equ	0xFF2
 22565                           indf0	equ	0xFEF
 22566                           postinc0	equ	0xFEE
 22567                           fsr0h	equ	0xFEA
 22568                           fsr0l	equ	0xFE9
 22569                           wreg	equ	0xFE8
 22570                           indf1	equ	0xFE7
 22571                           postdec1	equ	0xFE5
 22572                           fsr1h	equ	0xFE2
 22573                           fsr1l	equ	0xFE1
 22574                           indf2	equ	0xFDF
 22575                           postinc2	equ	0xFDE
 22576                           postdec2	equ	0xFDD
 22577                           plusw2	equ	0xFDB
 22578                           fsr2h	equ	0xFDA
 22579                           fsr2l	equ	0xFD9
 22580                           status	equ	0xFD8
 22581                           
 22582                           	psect	text115
 22583  000000                     __ptext115:
 22584                           	opt stack 0
 22585                           tosu	equ	0xFFF
 22586                           tosh	equ	0xFFE
 22587                           tosl	equ	0xFFD
 22588                           pclatu	equ	0xFFB
 22589                           pclath	equ	0xFFA
 22590                           tblptru	equ	0xFF8
 22591                           tblptrh	equ	0xFF7
 22592                           tblptrl	equ	0xFF6
 22593                           tablat	equ	0xFF5
 22594                           prodh	equ	0xFF4
 22595                           prodl	equ	0xFF3
 22596                           intcon	equ	0xFF2
 22597                           indf0	equ	0xFEF
 22598                           postinc0	equ	0xFEE
 22599                           fsr0h	equ	0xFEA
 22600                           fsr0l	equ	0xFE9
 22601                           wreg	equ	0xFE8
 22602                           indf1	equ	0xFE7
 22603                           postdec1	equ	0xFE5
 22604                           fsr1h	equ	0xFE2
 22605                           fsr1l	equ	0xFE1
 22606                           indf2	equ	0xFDF
 22607                           postinc2	equ	0xFDE
 22608                           postdec2	equ	0xFDD
 22609                           plusw2	equ	0xFDB
 22610                           fsr2h	equ	0xFDA
 22611                           fsr2l	equ	0xFD9
 22612                           status	equ	0xFD8
 22613                           
 22614                           	psect	rparam
 22615  0000                     tosu	equ	0xFFF
 22616                           tosh	equ	0xFFE
 22617                           tosl	equ	0xFFD
 22618                           pclatu	equ	0xFFB
 22619                           pclath	equ	0xFFA
 22620                           tblptru	equ	0xFF8
 22621                           tblptrh	equ	0xFF7
 22622                           tblptrl	equ	0xFF6
 22623                           tablat	equ	0xFF5
 22624                           prodh	equ	0xFF4
 22625                           prodl	equ	0xFF3
 22626                           intcon	equ	0xFF2
 22627                           indf0	equ	0xFEF
 22628                           postinc0	equ	0xFEE
 22629                           fsr0h	equ	0xFEA
 22630                           fsr0l	equ	0xFE9
 22631                           wreg	equ	0xFE8
 22632                           indf1	equ	0xFE7
 22633                           postdec1	equ	0xFE5
 22634                           fsr1h	equ	0xFE2
 22635                           fsr1l	equ	0xFE1
 22636                           indf2	equ	0xFDF
 22637                           postinc2	equ	0xFDE
 22638                           postdec2	equ	0xFDD
 22639                           plusw2	equ	0xFDB
 22640                           fsr2h	equ	0xFDA
 22641                           fsr2l	equ	0xFD9
 22642                           status	equ	0xFD8
 22643                           
 22644                           	psect	temp
 22645  000051                     btemp:
 22646                           	opt stack 0
 22647  000051                     	ds	1
 22648  0000                     int$flags	set	btemp
 22649  0000                     wtemp6	set	btemp+1
 22650                           tosu	equ	0xFFF
 22651                           tosh	equ	0xFFE
 22652                           tosl	equ	0xFFD
 22653                           pclatu	equ	0xFFB
 22654                           pclath	equ	0xFFA
 22655                           tblptru	equ	0xFF8
 22656                           tblptrh	equ	0xFF7
 22657                           tblptrl	equ	0xFF6
 22658                           tablat	equ	0xFF5
 22659                           prodh	equ	0xFF4
 22660                           prodl	equ	0xFF3
 22661                           intcon	equ	0xFF2
 22662                           indf0	equ	0xFEF
 22663                           postinc0	equ	0xFEE
 22664                           fsr0h	equ	0xFEA
 22665                           fsr0l	equ	0xFE9
 22666                           wreg	equ	0xFE8
 22667                           indf1	equ	0xFE7
 22668                           postdec1	equ	0xFE5
 22669                           fsr1h	equ	0xFE2
 22670                           fsr1l	equ	0xFE1
 22671                           indf2	equ	0xFDF
 22672                           postinc2	equ	0xFDE
 22673                           postdec2	equ	0xFDD
 22674                           plusw2	equ	0xFDB
 22675                           fsr2h	equ	0xFDA
 22676                           fsr2l	equ	0xFD9
 22677                           status	equ	0xFD8


Data Sizes:
    Strings     13
    Constant    766
    Data        231
    BSS         924
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      80
    BANK0           160     64     160
    BANK1           256      4     256
    BANK2           256     13     183
    BANK3           256      0     198
    BANK4           256      0      99
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           64      0       0

Pointer List with Targets:

    ADC_AN0.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    ADC_AN1.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    ADC_AN2.mNext.mNext	PTR struct ADC size(2) Largest target is 0
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    HMIBoard.mGetState	PTR FTN()unsigned char  size(3) Largest target is 0
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 0
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    I2C1_More$0	const PTR struct I2CT size(2) Largest target is 7
		 -> I2C1T(BANK0[7]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> iRScriptStack(BANK2[100]), 

    ADC_AN3.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    ADC_AN2.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    ADC_AN1.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    ADC_AN0.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    gISR	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    MXK_Queue@pCallback	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    lQueue	volatile PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    DIPSwitch.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    DIPSwitch.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    TestButton.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    TestButton.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    lMotor	PTR struct Motor size(2) Largest target is 6
		 -> Stepper(BANK1[6]), NULL(NULL[0]), 

    lStepFunction	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), Motor_Step(), 

    Motor_Init@pMotor	PTR struct Motor size(2) Largest target is 6
		 -> Stepper(BANK1[6]), 

    I2C2_More	PTR FTN(const PTR struct I2CT,)unsigned char  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C2_Done	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C1_More	PTR FTN(const PTR struct I2CT,)unsigned char  size(3) Largest target is 1
		 -> Absolute function(), 

    I2C1_Done	PTR FTN()void  size(3) Largest target is 1
		 -> Absolute function(), 

    I2CT_WAddress@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Stop@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Continue@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Next@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_IsWrite@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_IsRead@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_At@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Put@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Get@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Reset@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_InitW@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_InitR@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2CT_Init@pInput.mData	PTR unsigned char  size(2) Largest target is 0

    I2C2T.mData	PTR unsigned char  size(2) Largest target is 0

    S11800I2CT$mData	PTR unsigned char  size(2) Largest target is 0

    I2C1T.mData	PTR unsigned char  size(2) Largest target is 0

    ADC_Voltage@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    ADC_Voltage@pInput	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN0(BANK0[5]), 

    ADC_Start@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    ADC_Start@pInput	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), ADC_AN0(BANK0[5]), 
		 -> NULL(NULL[0]), 

    ADC_Sequence@pItemB.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemA.mNext.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    ADC_Sequence@pItemA.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    ADC_Init@pInput.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    S11482ADC$mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    lCurrent.mNext	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), NULL(NULL[0]), 

    lCurrent	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), ADC_AN0(BANK0[5]), 
		 -> NULL(NULL[0]), 

    ADC_Init@pInput	PTR struct ADC size(2) Largest target is 6
		 -> ADC_AN3(BANK1[5]), ADC_AN2(BANK1[5]), ADC_AN1(BANK1[5]), ADC_AN0(BANK0[5]), 

    HMI_SetSegments@pString	PTR unsigned char  size(2) Largest target is 58
		 -> HMIBoard..(BANK1[8]), HMIBoard(BANK1[58]), 

    HMIBoard.mDIP.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mDIP.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    HMIBoard.mDown.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mDown.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    HMIBoard.mUp.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mUp.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    HMIBoard.mLeft.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mLeft.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    HMIBoard.mRight.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    HMIBoard.mRight.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    sp__Console_MakeField	PTR unsigned short  size(2) Largest target is 70
		 -> Console_MakeField@Fill(BANK2[70]), 

    itos@destination	PTR unsigned char  size(2) Largest target is 58
		 -> HMIBoard..(BANK1[8]), HMIBoard(BANK1[58]), 

    itos@Data	PTR unsigned char  size(2) Largest target is 58
		 -> HMIBoard..(BANK1[8]), HMIBoard(BANK1[58]), 

    reverse@input	PTR unsigned char  size(2) Largest target is 58
		 -> HMIBoard..(BANK1[8]), HMIBoard(BANK1[58]), 

    reverse@iterator	PTR unsigned char  size(2) Largest target is 58
		 -> HMIBoard..(BANK1[8]), HMIBoard(BANK1[58]), 

    PortProperty_Valid@pInput	PTR struct PortProperty size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK1[10]), NULL(NULL[0]), 

    Word_GetPair@pInput	PTR struct Word size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK1[10]), NULL(NULL[0]), 

    Word_SetPair@pInput	PTR struct Word size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Byte_SetByte@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON2(SFR_1[1]), SSP1CON2(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    Byte_SetQuad@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON1(SFR_1[1]), SSP1CON1(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    Byte_GetPair@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortA_Property..(CODE[2]), PortB_Property..(CODE[2]), PortC_Property..(CODE[2]), PortD_Property..(CODE[2]), 
		 -> PortE_Property..(CODE[2]), PortF_Property..(CODE[2]), PortG_Property..(CODE[2]), PortF..(BANK1[2]), 
		 -> PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), PortB..(BANK1[2]), 
		 -> PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), PortA(BANK1[10]), 
		 -> PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), PortG_Property(CODE[2]), 
		 -> PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), PortC_Property(CODE[2]), 
		 -> PortB_Property(CODE[2]), PortA_Property(CODE[2]), PortC(BANK0[10]), PortF(BANK1[10]), 
		 -> NULL(NULL[0]), 

    Byte_SetPair@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortF..(BANK1[2]), PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), 
		 -> PortB..(BANK1[2]), PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), 
		 -> PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), 
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), PORTG(SFR_1[1]), 
		 -> PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), PORTC(SFR_1[1]), 
		 -> PORTB(SFR_1[1]), PORTA(SFR_1[1]), PortC(BANK0[10]), PortF(BANK1[10]), 
		 -> NULL(NULL[0]), 

    Byte_GetZone@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortA_Property..(CODE[2]), PortB_Property..(CODE[2]), PortC_Property..(CODE[2]), PortD_Property..(CODE[2]), 
		 -> PortE_Property..(CODE[2]), PortF_Property..(CODE[2]), PortG_Property..(CODE[2]), PortF..(BANK1[2]), 
		 -> PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), PortB..(BANK1[2]), 
		 -> PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), PortA(BANK1[10]), 
		 -> PortB(BANK1[10]), PortE(BANK0[10]), PortD(BANK0[10]), PortG_Property(CODE[2]), 
		 -> PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), PortC_Property(CODE[2]), 
		 -> PortB_Property(CODE[2]), PortA_Property(CODE[2]), PortC(BANK0[10]), PortF(BANK1[10]), 
		 -> NULL(NULL[0]), 

    Byte_SetZone@pInput	PTR struct Byte size(2) Largest target is 14
		 -> PortF..(BANK1[2]), PortC..(BANK0[2]), PortD..(BANK0[2]), PortE..(BANK0[2]), 
		 -> PortB..(BANK1[2]), PortA..(BANK1[2]), PortG..(BANK1[2]), PortG(BANK1[10]), 
		 -> PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), SSP2CON1(SFR_1[1]), 
		 -> PortD(BANK0[10]), SSP1CON1(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> PortC(BANK0[10]), PortF(BANK1[10]), NULL(NULL[0]), 

    Byte_SetBit@pInput	PTR struct Byte size(2) Largest target is 1
		 -> SSP2CON2(SFR_1[1]), SSP1CON2(SFR_1[1]), SSP2CON1(SFR_1[1]), SSP2STAT(SFR_1[1]), 
		 -> SSP1CON1(SFR_1[1]), SSP1STAT(SFR_1[1]), TRISG(SFR_1[1]), TRISF(SFR_1[1]), 
		 -> TRISE(SFR_1[1]), TRISD(SFR_1[1]), TRISC(SFR_1[1]), TRISB(SFR_1[1]), 
		 -> TRISA(SFR_1[1]), PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), 
		 -> PORTD(SFR_1[1]), PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), 
		 -> NULL(NULL[0]), 

    SPI_Send9@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Send9@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Send9@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Send9@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_Send@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Send@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Send@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Send@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_Send@pInput	PTR struct SPI size(2) Largest target is 12
		 -> SPI1(BANK1[11]), SPI2(BANK1[11]), 

    SPI_DCS@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_DCS@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_DCS@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_DCS@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_DCS@pInput	PTR struct SPI size(2) Largest target is 12
		 -> SPI1(BANK1[11]), SPI2(BANK1[11]), 

    SPI_CS@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_CS@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_CS@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_CS@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_MaxSpeed@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_MaxSpeed@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_MaxSpeed@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_MaxSpeed@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_MaxSpeed@pInput	PTR struct SPI size(2) Largest target is 12
		 -> SPI2(BANK1[11]), 

    SPI_MinSpeed@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_MinSpeed@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_MinSpeed@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_MinSpeed@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_MinSpeed@pInput	PTR struct SPI size(2) Largest target is 12
		 -> SPI1(BANK1[11]), 

    SPI_DisableISR@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_DisableISR@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_DisableISR@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_DisableISR@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_DisableISR@pInput	PTR struct SPI size(2) Largest target is 12
		 -> SPI1(BANK1[11]), SPI2(BANK1[11]), 

    SPI_EnableISR@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_EnableISR@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_EnableISR@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_EnableISR@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_SetFlags@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_SetFlags@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_SetFlags@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_SetFlags@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_ClearFlags@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_ClearFlags@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_ClearFlags@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_ClearFlags@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    sp__SPI_Buffer	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Buffer@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Buffer@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Buffer@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Buffer@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_BF@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_BF@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_BF@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_BF@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_Init@pInput.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI_Init@pInput...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI_Init@pInput...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI_Init@pInput...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI_Init@pInput	PTR struct SPI size(2) Largest target is 12
		 -> SPI1(BANK1[11]), SPI2(BANK1[11]), 

    SPI1.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI1...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI1...SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI1...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    Port_Get@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Get@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Set@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Set@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Set@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_SetType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_GetQuad@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetQuad@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuad@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetQuadType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetQuadType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortB(BANK1[10]), PortD(BANK0[10]), 

    Port_GetPair@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPair@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPair@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPair@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPairType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_TogglePin@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortC(BANK0[10]), 

    Port_GetPin@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_GetPin@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_GetPin@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortB(BANK1[10]), PortE(BANK0[10]), PortC(BANK0[10]), 

    Port_SetPin@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPin@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPin@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortE(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_SetPinType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_SetPinType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_SetPinType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_SetPinType@Props	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Init@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_Init@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_Init@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_CheckPortType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_CheckQuadType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_CheckPairType@pInput.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    Port_CheckPairType@pInput.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Port_CheckPairType@pInput	const PTR struct Port size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortC(BANK0[10]), PortF(BANK1[10]), 

    Port_CheckPairType@Props	PTR struct PortProperty size(2) Largest target is 14
		 -> PortG(BANK1[10]), PortA(BANK1[10]), PortB(BANK1[10]), PortE(BANK0[10]), 
		 -> PortD(BANK0[10]), PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), 
		 -> PortD_Property(CODE[2]), PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), 
		 -> PortC(BANK0[10]), PortF(BANK1[10]), NULL(NULL[0]), 

    sp__GetPortLAT	PTR struct Byte size(2) Largest target is 1
		 -> LATG(SFR_1[1]), LATF(SFR_1[1]), LATE(SFR_1[1]), LATD(SFR_1[1]), 
		 -> LATC(SFR_1[1]), LATB(SFR_1[1]), LATA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortTRIS	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortPORT	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    sp__GetPortProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortG.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortG.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortE.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortE.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortD.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortD.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortB.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortB.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortA.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortA.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortC.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortC.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    S509SPI$SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    SPI2.SSPBUF	PTR unsigned char  size(2) Largest target is 1
		 -> SSP2BUF(SFR_1[1]), SSP1BUF(SFR_1[1]), 

    S506$SSPCON1T	PTR struct Byte size(2) Largest target is 0

    SPI2...SSPCON1T	PTR struct Byte size(2) Largest target is 0

    S479$SSPSTATTb	PTR struct . size(2) Largest target is 0

    SPI2...SSPSTATTb	PTR struct . size(2) Largest target is 0

    S479$SSPSTATT	PTR struct Byte size(2) Largest target is 0

    SPI2...SSPSTATT	PTR struct Byte size(2) Largest target is 0

    S139Port$mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mInput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mOutput	PTR struct Byte size(2) Largest target is 1
		 -> PORTG(SFR_1[1]), PORTF(SFR_1[1]), PORTE(SFR_1[1]), PORTD(SFR_1[1]), 
		 -> PORTC(SFR_1[1]), PORTB(SFR_1[1]), PORTA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    PortF.mDirection	PTR struct Byte size(2) Largest target is 1
		 -> TRISG(SFR_1[1]), TRISF(SFR_1[1]), TRISE(SFR_1[1]), TRISD(SFR_1[1]), 
		 -> TRISC(SFR_1[1]), TRISB(SFR_1[1]), TRISA(SFR_1[1]), NULL(NULL[0]), 

    S139Port$mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    PortF.mProperties	PTR struct PortProperty size(2) Largest target is 2
		 -> PortG_Property(CODE[2]), PortF_Property(CODE[2]), PortE_Property(CODE[2]), PortD_Property(CODE[2]), 
		 -> PortC_Property(CODE[2]), PortB_Property(CODE[2]), PortA_Property(CODE[2]), NULL(NULL[0]), 

    Button_Poll@pButton.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    Button_Poll@pButton.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    S23Button$mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    Button_Init@pInput.mGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    S23Button$mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    Button_Init@pInput.mFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    Button_Init@pFunction	PTR FTN(unsigned char ,)void  size(3) Largest target is 1
		 -> Event_TestButton(), Event_DIPSwitch(), Event_NULL(), 

    Button_Init@pGetState	PTR FTN()unsigned char  size(3) Largest target is 1
		 -> MXK_DIPSwitch(), MXK_TestButton(), HMI_DIPSwitch(), HMI_DownSwitch(), 
		 -> HMI_UpSwitch(), HMI_RightSwitch(), HMI_LeftSwitch(), 

    Button_Init@pInitIO	PTR FTN()void  size(3) Largest target is 1
		 -> MXK_InitDIPSwitch(), MXK_InitTestButton(), HMI_InitButtons(), 

    Button_Init@pInput	const PTR struct Button size(2) Largest target is 58
		 -> DIPSwitch(BANK1[10]), TestButton(BANK1[10]), HMIBoard(BANK1[58]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR_Function in COMRAM

    _Timer0_ISR->i2_Motor_Step
    i2_Motor_Step->i2_Port_SetPin
    i2_Port_SetPin->i2_Word_GetPair
    i2_Word_GetPair->i2_Byte_GetPair
    i2_Byte_GetPair->i2_Byte_GetZone
    i2_MXK_SwitchTo->i2_delay_us

Critical Paths under _main in BANK0

    _HMI_SetNumber->_itos
    _itos->___lwdiv
    _itos->_reverse
    _HMI_SetSegments->_ToSegment
    _HMI_Render->_OutSeg
    _OutSeg->_SPI_Send
    _update_IR_distance->___fladd
    ___fladd->_ADC_Voltage
    ___awdiv->___fltol
    _ADC_Voltage->___fldiv
    _ADC_Voltage->___flmul
    _irobot_init_song_0->_eusart_putch
    _irobot_init->_eusart_putch
    _Motor_Init->_Port_SetPinType
    _Timer0_Init->___lldiv
    _MXK_Init->_Port_SetType
    _Port_Init->_Port_SetType
    _Port_SetType->_Port_CheckPortType
    _Port_CheckPortType->_Port_CheckQuadType
    _Port_Set->_Word_GetPair
    _LED_Init->_Port_SetPinType
    _LED_Set->_Port_SetPin
    _MXK_Dequeue->_Motor_Step
    _Motor_Step->_Port_SetPin
    _MXK_SwitchTo->_delay_us
    _MXK_BlockSwitchTo->_delay_us
    _Set_Rotation->_LCD_Write
    _LCD_Fill->_Set_Addr_Window
    _Set_Addr_Window->_LCD_Write
    _LCD_Word_Write->_LCD_Write
    _LCD_Write->_SPI_Send
    _Configure_GPIOs->_SPI_Init
    _SPI_MaxSpeed->_Byte_SetQuad
    _LCD_Reset->_LED_Toggle
    _Reset_Low->_Port_SetPin
    _Reset_High->_Port_SetPin
    _LED_Toggle->_Port_TogglePin
    _Port_TogglePin->_Port_SetPin
    _Port_SetPin->_Word_GetPair
    _SPI_MinSpeed->_Byte_SetQuad
    _SPI_Init->_Port_SetPinType
    _Timer2_Init->___lldiv
    _MXK_InitTestButton->_Port_SetPinType
    _Port_SetPinType->_PortProperty_Valid
    _MXK_InitDIPSwitch->_Port_SetQuadType
    _Port_SetQuadType->_Port_CheckQuadType
    _Word_SetPair->_Byte_SetPair
    _Byte_SetPair->_Byte_SetZone
    _Port_CheckQuadType->_Port_CheckPairType
    _Port_CheckPairType->_PortProperty_Valid
    _PortProperty_Valid->_Word_GetPair
    _Word_GetPair->_Byte_GetPair
    _Byte_GetPair->_Byte_GetZone
    _Byte_SetQuad->_Byte_SetZone
    _ADC_Start->_ADC_SetChannel
    _ADC_Init->_ADC_SetupIO

Critical Paths under _ISR_Function in BANK0

    None.

Critical Paths under _main in BANK1

    _MXK_Init->_Port_Init

Critical Paths under _ISR_Function in BANK1

    None.

Critical Paths under _main in BANK2

    _MXK_Init->_Port_Init
    _HMI_Init->_Button_Init

Critical Paths under _ISR_Function in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR_Function in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR_Function in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR_Function in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR_Function in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR_Function in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR_Function in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR_Function in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR_Function in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR_Function in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR_Function in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _ISR_Function in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _ISR_Function in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _ISR_Function in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1066425
                               _init
                 _update_IR_distance
                         _update_SSD
 ---------------------------------------------------------------------------------
 (1) _update_SSD                                           2     0      2   37223
                                             22 BANK0      2     0      2
                         _HMI_Render
                      _HMI_SetNumber
                        _MXK_Dequeue
                        _MXK_Release
                       _MXK_SwitchTo
 ---------------------------------------------------------------------------------
 (2) _HMI_SetNumber                                        2     0      2    4030
                                             17 BANK0      2     0      2
                    _HMI_SetSegments
                               _itos
 ---------------------------------------------------------------------------------
 (3) _itos                                                10     6      4    2945
                                              7 BANK0     10     6      4
                            ___lwdiv
                            ___lwmod
                            _reverse
 ---------------------------------------------------------------------------------
 (4) _reverse                                              7     3      4     592
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     808
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     817
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) _HMI_SetSegments                                      5     3      2     446
                                              1 BANK0      5     3      2
                          _ToSegment
 ---------------------------------------------------------------------------------
 (4) _ToSegment                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _HMI_Render                                           2     2      0    1593
                                              8 BANK0      2     2      0
                             _OutSeg
 ---------------------------------------------------------------------------------
 (3) _OutSeg                                               5     4      1    1463
                                              3 BANK0      5     4      1
                           _SPI_Send
 ---------------------------------------------------------------------------------
 (1) _update_IR_distance                                  13    13      0   32577
                                              0 BANK1      2     2      0
                                              0 BANK2     11    11      0
                          _ADC_Start
                        _ADC_Voltage
                            ___awdiv
                            ___fladd
                            ___fldiv
                            ___fltol
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1392
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             20    12      8    8386
                                             43 BANK0     20    12      8
                        _ADC_Voltage (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    2019
                                             10 BANK0      8     4      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC_Voltage                                         18    14      4   14159
                                             25 BANK0     18    14      4
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1564
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    6661
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    5360
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0  996625
                           _ADC_Init
                          _ADC_Start
                       _Console_Init
                           _HMI_Init
                         _ISR_Enable
                           _LCD_Init
                  _MXK_BlockSwitchTo
                        _MXK_Dequeue
                           _MXK_Init
                        _MXK_Release
                         _Motor_Init
                        _eusart_init
                        _irobot_init
                 _irobot_init_song_0
 ---------------------------------------------------------------------------------
 (2) _irobot_init_song_0                                   0     0      0      31
                       _eusart_putch
 ---------------------------------------------------------------------------------
 (2) _irobot_init                                          0     0      0      31
                       _eusart_putch
 ---------------------------------------------------------------------------------
 (3) _eusart_putch                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _eusart_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Motor_Init                                           4     0      4   88478
                                             45 BANK0      4     0      4
                        _Port_SetPin
                    _Port_SetPinType
                        _Timer0_Init
 ---------------------------------------------------------------------------------
 (3) _Timer0_Init                                         14    10      4    3138
                                             13 BANK0     14    10      4
                       _Timer0_Clear
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _Timer0_Clear                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MXK_Init                                             0     0      0  362920
                           _LED_Init
                          _Port_Init
                        _Port_SetPin
                    _Port_SetPinType
                   _Port_SetQuadType
                       _Port_SetType
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _Port_Init                                            6     3      3  111429
                                              0 BANK1      4     1      3
                                              0 BANK2      2     2      0
                        _GetPortPORT
                  _GetPortProperties
                        _GetPortTRIS
                           _Port_Set
                    _Port_SetPinType
                       _Port_SetType
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (3) _Port_SetType                                         6     3      3   34613
                                             58 BANK0      6     3      3
                 _Port_CheckPortType
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (4) _Port_CheckPortType                                   4     1      3   16921
                                             54 BANK0      4     1      3
                 _Port_CheckQuadType
 ---------------------------------------------------------------------------------
 (4) _Port_Set                                            24    21      3   10910
                                             15 BANK0     24    21      3
                       _Byte_SetByte
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (5) _Byte_SetByte                                         3     0      3    1278
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (4) _GetPortTRIS                                          3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _GetPortProperties                                    3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _GetPortPORT                                          3     1      2      31
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _LED_Init                                             1     1      0   85371
                                             45 BANK0      1     1      0
                            _LED_Set
                    _Port_SetPinType
 ---------------------------------------------------------------------------------
 (4) _LED_Set                                              2     1      1   30528
                                             20 BANK0      2     1      1
                        _Port_SetPin
 ---------------------------------------------------------------------------------
 (2) _MXK_Dequeue                                          0     0      0   30813
                   Absolute function *
                         _Motor_Step *
 ---------------------------------------------------------------------------------
 (3) _Motor_Step                                           2     2      0   30813
                                             20 BANK0      2     2      0
                          _MXK_Queue
                        _MXK_Release
                       _MXK_SwitchTo
                        _Port_SetPin
                     _Timer0_Restart
                        _Timer0_Stop
 ---------------------------------------------------------------------------------
 (4) _Timer0_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Timer0_Restart                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MXK_SwitchTo                                         2     2      0     499
                                              6 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (2) _MXK_Release                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _MXK_Queue                                            3     0      3     183
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MXK_BlockSwitchTo                                    2     2      0     499
                                              6 BANK0      2     2      0
                           _delay_us
 ---------------------------------------------------------------------------------
 (3) _delay_us                                             6     4      2     403
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             4     4      0  292036
                                             53 BANK0      4     4      0
                    _Configure_GPIOs
                           _LCD_Fill
                          _LCD_Write
                       _Set_Rotation
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _Set_Rotation                                         2     2      0    6057
                                              5 BANK0      2     2      0
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (3) _LCD_Fill                                             4     2      2   15389
                                              9 BANK0      4     2      2
                     _LCD_Word_Write
                    _Set_Addr_Window
 ---------------------------------------------------------------------------------
 (4) _Set_Addr_Window                                      4     1      3    8405
                                              5 BANK0      4     1      3
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (4) _LCD_Word_Write                                       2     0      2    6659
                                              5 BANK0      2     0      2
                          _LCD_Write
 ---------------------------------------------------------------------------------
 (4) _LCD_Write                                            2     1      1    5989
                                              3 BANK0      2     1      1
                           _Mode_Set
                           _SPI_Send
 ---------------------------------------------------------------------------------
 (4) _SPI_Send                                             3     0      3    1032
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (5) _Mode_Set                                             1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _Configure_GPIOs                                      0     0      0  262421
                          _LCD_Reset
                    _Port_SetPinType
                           _SPI_Init
                       _SPI_MaxSpeed
 ---------------------------------------------------------------------------------
 (4) _SPI_MaxSpeed                                         2     0      2   26456
                                             15 BANK0      2     0      2
                        _Byte_SetBit
                       _Byte_SetQuad
 ---------------------------------------------------------------------------------
 (4) _LCD_Reset                                            0     0      0   95045
                         _LED_Toggle
                         _Reset_High
                          _Reset_Low
                           _delay_ms
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                             6     4      2    1926
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _Reset_Low                                            0     0      0   30131
                        _Port_SetPin
 ---------------------------------------------------------------------------------
 (5) _Reset_High                                           0     0      0   30131
                        _Port_SetPin
 ---------------------------------------------------------------------------------
 (5) _LED_Toggle                                           1     1      0   32857
                                             24 BANK0      1     1      0
                     _Port_TogglePin
 ---------------------------------------------------------------------------------
 (6) _Port_TogglePin                                       4     1      3   32826
                                             20 BANK0      4     1      3
                        _Port_GetPin
                        _Port_SetPin
 ---------------------------------------------------------------------------------
 (4) _Port_SetPin                                          5     1      4   30131
                                             15 BANK0      5     1      4
                        _Byte_SetBit
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (7) _Port_GetPin                                          6     3      3    1926
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _ISR_Enable                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _HMI_Init                                             2     2      0  217901
                                             59 BANK0      2     2      0
                        _Button_Init
                           _SPI_Init
                       _SPI_MinSpeed
 ---------------------------------------------------------------------------------
 (3) _SPI_MinSpeed                                         2     0      2   26456
                                             15 BANK0      2     0      2
                        _Byte_SetBit
                       _Byte_SetQuad
 ---------------------------------------------------------------------------------
 (4) _SPI_Init                                             8     2      6   86139
                                             45 BANK0      8     2      6
                        _Byte_SetBit
                       _Byte_SetQuad
                    _Port_SetPinType
                            _SPI_DCS
                     _SPI_DisableISR
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (5) _Timer2_Init                                         17    13      4    2964
                                             13 BANK0     17    13      4
                       _Timer2_Clear
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    2673
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (6) _Timer2_Clear                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _SPI_DisableISR                                       2     0      2     183
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SPI_DCS                                              2     0      2     183
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _Button_Init                                         13     0     13  105207
                                              0 BANK2     13     0     13
                    _HMI_InitButtons *
                  _MXK_InitDIPSwitch *
                 _MXK_InitTestButton *
 ---------------------------------------------------------------------------------
 (4) _MXK_InitTestButton                                   0     0      0   54781
                    _Port_SetPinType
 ---------------------------------------------------------------------------------
 (3) _Port_SetPinType                                      7     3      4   54781
                                             38 BANK0      7     3      4
                        _Byte_SetBit
                 _PortProperty_Valid
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (5) _Byte_SetBit                                          7     3      4   15662
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _MXK_InitDIPSwitch                                    0     0      0   44669
                   _Port_SetQuadType
 ---------------------------------------------------------------------------------
 (3) _Port_SetQuadType                                     5     1      4   44669
                                             54 BANK0      5     1      4
                       _Byte_SetQuad
                 _Port_CheckQuadType
                       _Word_SetPair
 ---------------------------------------------------------------------------------
 (4) _Word_SetPair                                         4     0      4   16238
                                             15 BANK0      4     0      4
                       _Byte_SetPair
 ---------------------------------------------------------------------------------
 (5) _Byte_SetPair                                         4     0      4    8725
                                             11 BANK0      4     0      4
                       _Byte_SetZone
 ---------------------------------------------------------------------------------
 (5) _Port_CheckQuadType                                   7     3      4   15845
                                             47 BANK0      7     3      4
                 _Port_CheckPairType
 ---------------------------------------------------------------------------------
 (6) _Port_CheckPairType                                   9     5      4   13271
                                             38 BANK0      9     5      4
                 _PortProperty_Valid
 ---------------------------------------------------------------------------------
 (4) _PortProperty_Valid                                  23    19      4   10663
                                             15 BANK0     23    19      4
                       _Word_GetPair
 ---------------------------------------------------------------------------------
 (5) _Word_GetPair                                         3     0      3    8154
                                             12 BANK0      3     0      3
                       _Byte_GetPair
 ---------------------------------------------------------------------------------
 (6) _Byte_GetPair                                         3     0      3    2831
                                              9 BANK0      3     0      3
                       _Byte_GetZone
 ---------------------------------------------------------------------------------
 (7) _Byte_GetZone                                         9     4      5    2161
                                              0 BANK0      9     4      5
 ---------------------------------------------------------------------------------
 (4) _Byte_SetQuad                                         4     0      4   10549
                                             11 BANK0      4     0      4
                       _Byte_SetZone
 ---------------------------------------------------------------------------------
 (6) _Byte_SetZone                                        11     5      6    2704
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (4) _HMI_InitButtons                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Console_Init                                         4     4      0     229
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Start                                            4     2      2     871
                                              2 BANK0      4     2      2
                            _ADC_Off
                             _ADC_On
                     _ADC_SetChannel
 ---------------------------------------------------------------------------------
 (2) _ADC_Init                                             3     0      3    2816
                                              4 BANK0      3     0      3
                      _ADC_Calibrate
                  _ADC_ClockDivision
                 _ADC_ConversionTime
                     _ADC_SetChannel
                        _ADC_SetupIO
 ---------------------------------------------------------------------------------
 (3) _ADC_SetupIO                                          4     4      0      65
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (3) _ADC_SetChannel                                       2     2      0      55
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ADC_ConversionTime                                   2     2      0     136
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _ADC_ClockDivision                                    3     3      0     172
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _ADC_Calibrate                                        0     0      0       0
                            _ADC_Off
                             _ADC_On
 ---------------------------------------------------------------------------------
 (3) _ADC_On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ISR_Function                                       18    18      0    1778
                                             22 COMRAM    18    18      0
                         _Timer0_ISR
 ---------------------------------------------------------------------------------
 (13) _Timer0_ISR                                          0     0      0    1778
                   Absolute function *
                       i2_Motor_Step *
                      i2_Timer0_Stop
 ---------------------------------------------------------------------------------
 (14) i2_Motor_Step                                        2     2      0    1778
                                             20 COMRAM     2     2      0
                        i2_MXK_Queue
                      i2_MXK_Release
                     i2_MXK_SwitchTo
                      i2_Port_SetPin
                   i2_Timer0_Restart
                      i2_Timer0_Stop
 ---------------------------------------------------------------------------------
 (14) i2_Timer0_Stop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_Timer0_Restart                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_Port_SetPin                                       5     1      4    1569
                                             15 COMRAM     5     1      4
                      i2_Byte_SetBit
                     i2_Word_GetPair
 ---------------------------------------------------------------------------------
 (16) i2_Word_GetPair                                      3     0      3     643
                                             12 COMRAM     3     0      3
                     i2_Byte_GetPair
 ---------------------------------------------------------------------------------
 (17) i2_Byte_GetPair                                      3     0      3     481
                                              9 COMRAM     3     0      3
                     i2_Byte_GetZone
 ---------------------------------------------------------------------------------
 (18) i2_Byte_GetZone                                      9     4      5     333
                                              0 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (16) i2_Byte_SetBit                                       7     3      4     345
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (15) i2_MXK_SwitchTo                                      2     2      0     161
                                              6 COMRAM     2     2      0
                         i2_delay_us
 ---------------------------------------------------------------------------------
 (16) i2_delay_us                                          6     4      2      94
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (15) i2_MXK_Release                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) i2_MXK_Queue                                         3     0      3      48
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _ADC_Init
       _ADC_Calibrate
         _ADC_Off
         _ADC_On
       _ADC_ClockDivision
       _ADC_ConversionTime
       _ADC_SetChannel
       _ADC_SetupIO
     _ADC_Start
       _ADC_Off
       _ADC_On
       _ADC_SetChannel
     _Console_Init
     _HMI_Init
       _Button_Init
         _HMI_InitButtons *
         _MXK_InitDIPSwitch *
           _Port_SetQuadType
             _Byte_SetQuad
               _Byte_SetZone
             _Port_CheckQuadType
               _Port_CheckPairType
                 _PortProperty_Valid
                   _Word_GetPair
                     _Byte_GetPair
                       _Byte_GetZone
             _Word_SetPair
               _Byte_SetPair
                 _Byte_SetZone
         _MXK_InitTestButton *
           _Port_SetPinType
             _Byte_SetBit
             _PortProperty_Valid
               _Word_GetPair
                 _Byte_GetPair
                   _Byte_GetZone
             _Word_SetPair
               _Byte_SetPair
                 _Byte_SetZone
       _SPI_Init
         _Byte_SetBit
         _Byte_SetQuad
           _Byte_SetZone
         _Port_SetPinType
           _Byte_SetBit
           _PortProperty_Valid
             _Word_GetPair
               _Byte_GetPair
                 _Byte_GetZone
           _Word_SetPair
             _Byte_SetPair
               _Byte_SetZone
         _SPI_DCS
         _SPI_DisableISR
         _Timer2_Init
           _Timer2_Clear
           ___lldiv
       _SPI_MinSpeed
         _Byte_SetBit
         _Byte_SetQuad
           _Byte_SetZone
     _ISR_Enable
     _LCD_Init
       _Configure_GPIOs
         _LCD_Reset
           _LED_Toggle
             _Port_TogglePin
               _Port_GetPin
               _Port_SetPin
                 _Byte_SetBit
                 _Word_GetPair
                   _Byte_GetPair
                     _Byte_GetZone
           _Reset_High
             _Port_SetPin
               _Byte_SetBit
               _Word_GetPair
                 _Byte_GetPair
                   _Byte_GetZone
           _Reset_Low
             _Port_SetPin
               _Byte_SetBit
               _Word_GetPair
                 _Byte_GetPair
                   _Byte_GetZone
           _delay_ms
         _Port_SetPinType
           _Byte_SetBit
           _PortProperty_Valid
             _Word_GetPair
               _Byte_GetPair
                 _Byte_GetZone
           _Word_SetPair
             _Byte_SetPair
               _Byte_SetZone
         _SPI_Init
           _Byte_SetBit
           _Byte_SetQuad
             _Byte_SetZone
           _Port_SetPinType
             _Byte_SetBit
             _PortProperty_Valid
               _Word_GetPair
                 _Byte_GetPair
                   _Byte_GetZone
             _Word_SetPair
               _Byte_SetPair
                 _Byte_SetZone
           _SPI_DCS
           _SPI_DisableISR
           _Timer2_Init
             _Timer2_Clear
             ___lldiv
         _SPI_MaxSpeed
           _Byte_SetBit
           _Byte_SetQuad
             _Byte_SetZone
       _LCD_Fill
         _LCD_Word_Write
           _LCD_Write
             _Mode_Set
             _SPI_Send
         _Set_Addr_Window
           _LCD_Write
             _Mode_Set
             _SPI_Send
       _LCD_Write
         _Mode_Set
         _SPI_Send
       _Set_Rotation
         _LCD_Write
           _Mode_Set
           _SPI_Send
       _delay_ms
     _MXK_BlockSwitchTo
       _delay_us
     _MXK_Dequeue
       Absolute function(Fake) *
       _Motor_Step *
         _MXK_Queue
         _MXK_Release
         _MXK_SwitchTo
           _delay_us
         _Port_SetPin
           _Byte_SetBit
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Timer0_Restart
         _Timer0_Stop
     _MXK_Init
       _LED_Init
         _LED_Set
           _Port_SetPin
             _Byte_SetBit
             _Word_GetPair
               _Byte_GetPair
                 _Byte_GetZone
         _Port_SetPinType
           _Byte_SetBit
           _PortProperty_Valid
             _Word_GetPair
               _Byte_GetPair
                 _Byte_GetZone
           _Word_SetPair
             _Byte_SetPair
               _Byte_SetZone
       _Port_Init
         _GetPortPORT
         _GetPortProperties
         _GetPortTRIS
         _Port_Set
           _Byte_SetByte
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Port_SetPinType
           _Byte_SetBit
           _PortProperty_Valid
             _Word_GetPair
               _Byte_GetPair
                 _Byte_GetZone
           _Word_SetPair
             _Byte_SetPair
               _Byte_SetZone
         _Port_SetType
           _Port_CheckPortType
             _Port_CheckQuadType
               _Port_CheckPairType
                 _PortProperty_Valid
                   _Word_GetPair
                     _Byte_GetPair
                       _Byte_GetZone
           _Word_SetPair
             _Byte_SetPair
               _Byte_SetZone
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Port_SetPin
         _Byte_SetBit
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Port_SetPinType
         _Byte_SetBit
         _PortProperty_Valid
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _Port_SetQuadType
         _Byte_SetQuad
           _Byte_SetZone
         _Port_CheckQuadType
           _Port_CheckPairType
             _PortProperty_Valid
               _Word_GetPair
                 _Byte_GetPair
                   _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _Port_SetType
         _Port_CheckPortType
           _Port_CheckQuadType
             _Port_CheckPairType
               _PortProperty_Valid
                 _Word_GetPair
                   _Byte_GetPair
                     _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _delay_ms
     _MXK_Release
     _Motor_Init
       _Port_SetPin
         _Byte_SetBit
         _Word_GetPair
           _Byte_GetPair
             _Byte_GetZone
       _Port_SetPinType
         _Byte_SetBit
         _PortProperty_Valid
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Word_SetPair
           _Byte_SetPair
             _Byte_SetZone
       _Timer0_Init
         _Timer0_Clear
         ___lldiv
     _eusart_init
     _irobot_init
       _eusart_putch
     _irobot_init_song_0
       _eusart_putch
   _update_IR_distance
     _ADC_Start
       _ADC_Off
       _ADC_On
       _ADC_SetChannel
     _ADC_Voltage
       ___fldiv
       ___flmul
       ___xxtofl
     ___awdiv
       ___fltol (ARG)
     ___fladd
       _ADC_Voltage (ARG)
         ___fldiv
         ___flmul
         ___xxtofl
       ___fldiv (ARG)
     ___fldiv
     ___fltol
   _update_SSD
     _HMI_Render
       _OutSeg
         _SPI_Send
     _HMI_SetNumber
       _HMI_SetSegments
         _ToSegment
       _itos
         ___lwdiv
         ___lwmod
         _reverse
     _MXK_Dequeue
       Absolute function(Fake) *
       _Motor_Step *
         _MXK_Queue
         _MXK_Release
         _MXK_SwitchTo
           _delay_us
         _Port_SetPin
           _Byte_SetBit
           _Word_GetPair
             _Byte_GetPair
               _Byte_GetZone
         _Timer0_Restart
         _Timer0_Stop
     _MXK_Release
     _MXK_SwitchTo
       _delay_us

 _ISR_Function (ROOT)
   _Timer0_ISR
     Absolute function(Fake) *
     i2_Motor_Step *
       i2_MXK_Queue
       i2_MXK_Release
       i2_MXK_SwitchTo
         i2_delay_us
       i2_Port_SetPin
         i2_Byte_SetBit
         i2_Word_GetPair
           i2_Byte_GetPair
             i2_Byte_GetZone
       i2_Timer0_Restart
       i2_Timer0_Stop
     i2_Timer0_Stop *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F3F      0     12C      37        7.7%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      63      14       38.7%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      D      B7       9       71.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     40      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      50       1       85.1%
BITBANK15           40      0       0      35        0.0%
BANK15              40      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D0      12        0.0%
DATA                 0      0     4FC       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Wed Sep 27 10:52:38 2017

                  i2_Timer0_Stop 4BDC                 SPI_Init@pChannel 00EB  
     __size_of_MXK_BlockSwitchTo 003E                     i2_Motor_Step 2BF0  
                              _A 00FE                                l8 30A2  
                   ___fldiv@aexp 00D2                     ___fldiv@bexp 00D1  
                              _a 00FF                                _i 008A  
                              _j 0089                                _l 004F  
                              _u 0088                                _w 0050  
                   ___fldiv@sign 00C6                               l90 25AA  
                             l85 24A6                               l87 2514  
                             l89 2580                     ___awdiv@sign 00C9  
             __size_of_ADC_Start 0084                    _HMI_DIPSwitch 000000  
               i2_Timer0_Restart 4B9E             ADC_ClockDivision@reg 00BB  
                            l120 39B2                              l121 39C8  
                            l122 39DE                              l220 42AC  
                            l117 39F4                              l221 4270  
                            l118 399C                              l230 43F2  
                            l222 42BC                              l223 428E  
                    ?_LED_Toggle 0001                              l234 453A  
                            l235 450A                              l227 440E  
                            l403 22BA                              l412 2134  
                            l228 43D6                              l340 37A6  
                            l404 225A                              l421 20C8  
                            l413 1FCA                              l237 4522  
                            l341 37B4                              l405 22EA  
                            l414 2150                              l430 320C  
                            l350 38AE                              l342 37C2  
                            l510 19C8                              l406 2272  
                            l415 1FF0                              l351 383E  
                            l343 37D0                              l511 1AD8  
                            l407 228A                              l600 095A  
                            l432 3236                              l344 37DE  
                            l512 19EA                              l408 22A2  
                            l417 205C                              l601 0AEE  
                            l433 3266                              l353 384C  
                            l337 3808                              l345 37EC  
                            l610 0B76                              l602 098C  
                            l354 385A                              l346 37FA  
                            l338 3798                              l370 3738  
                            l611 0BC4                              l603 0B00  
                            l427 3290                              l355 3868  
                            l363 3762                              l371 3746  
                            l531 1482                              l612 0C12  
                            l604 0A3A                              l356 3876  
                            l372 3754                              l364 36F2  
                            l532 14A6                              l516 1A32  
                            l357 3884                              l509 1ABC  
                            l614 0CF4                              l358 3892  
                            l366 3700                              l526 14C6  
                            l615 0CEC                              l607 0C60  
                            l359 38A0                              l367 370E  
                            l519 1A7A                              l616 0D06  
                            l608 0B28                              l368 371C  
                            l528 14E4                              l393 4320  
                            l617 0CF0                              l609 0C7E  
                            l369 372A                              l529 1462  
                            l483 1828                              l732 3936  
                            l476 1900                              l900 15A0  
                            l733 392A                              l389 419E  
                            l477 1772                              l397 44FE  
                            l901 15A4                              l726 3514  
                            l478 191C                              l486 1894  
                            l654 4920                              l910 15C8  
                            l902 15A8                              l727 3508  
                            l479 17BC                              l655 4918  
                            l911 15CC                              l903 15AC  
                            l824 40D2                              l832 4380  
                            l912 15D0                              l904 15B0  
                            l673 4854                              l657 491C  
                            l681 4076                              l913 15D4  
                            l905 15B4                              l921 4046  
                            l914 15D8                              l906 15B8  
                            l922 4012                              l930 2E08  
                            l819 3D32                              l915 15DC  
                            l907 15BC                              l684 408C  
                            l916 15E0                              l908 15C0  
                            l860 1500                              l781 4788  
                            l597 0968                              l853 15E8  
                            l917 15E4                              l909 15C4  
                            l861 1504                              l598 0950  
                            l678 40B2                              l686 409C  
                            l870 1528                              l862 1508  
                            l854 14EC                              l599 0978  
                            l679 4066                              l871 152C  
                            l863 150C                              l776 460A  
                            l880 1550                              l872 1530  
                            l864 1510                              l856 14F0  
                            l928 2E88                              l881 1554  
                            l873 1534                              l865 1514  
                            l857 14F4                              l929 2E58  
                            l890 1578                              l882 1558  
                            l874 1538                              l866 1518  
                            l858 14F8                              l891 157C  
                            l883 155C                              l875 153C  
                            l867 151C                              l859 14FC  
                            l892 1580                              l884 1560  
                            l876 1540                              l868 1520  
                            l893 1584                              l885 1564  
                            l877 1544                              l869 1524  
                            l894 1588                              l886 1568  
                            l878 1548                              l895 158C  
                            l887 156C                              l879 154C  
                            l976 3B46                              l896 1590  
                            l888 1570                              l897 1594  
                            l889 1574                              l978 3B56  
                            l898 1598                              l899 159C  
                            _PR2 000FCB                              _val 0073  
                __end_of_ADC_Off 4BC4                     _Word_GetPair 475C  
                            prod 000FF3                      ?_HMI_Render 0001  
            MXK_SwitchTo@pModule 00C1       __end_of_ADC_ConversionTime 4594  
                            tosl 000FFD                              wreg 000FE8  
                     _TXSTA1bits 000FAD       __size_of_ADC_ClockDivision 008A  
                   ___flmul@aexp 00C7                     ___flmul@bexp 00C8  
                     i2_delay_us 4662             Port_Set@TypeRequired 00DC  
                   ___flmul@sign 00C6                     ___flmul@temp 00D1  
                   ___flmul@prod 00CD            Port_SetPinType@Output 00E4  
                Port_SetPin@Type 00CD                  Port_SetPin@pPin 00CB  
                  ?_Byte_GetPair 00C3                  __end_of_LED_Set 4420  
        __size_ofi2_Word_GetPair 0030                    i2_Port_SetPin 3642  
                   ___fltol@exp1 00C3                     _Word_SetPair 45DA  
                  ?_Byte_GetZone 00BA                             l1200 3434  
                           l1201 3488                             l1202 34A4  
                           l1300 3AC8                             l1204 34CE  
                           l1301 3ACC                             l1205 34B4  
                           l1302 3AD6                             l1303 3AE4  
                           l1207 34E0                             l3000 008C  
                           l1313 4574                             l1153 1DE2  
                           l3001 00BA                             l3010 01B4  
                           l3002 00B0                             l1146 3C54  
                           l3011 01BA                             l3100 07F8  
                           l3020 0252                             l3012 01C4  
                           l3004 0120                             l3005 00E4  
                           l1254 4B06                             l3110 090A  
                           l3022 0334                             l3014 0264  
                           l2310 2B10                             l1158 46DE  
                           l3111 0934                             l3031 03BC  
                           l3015 0204                             l1280 3BD0  
                           l3112 092A                             l3120 1E6E  
                           l3024 0354                             l3008 01D4  
                           l3105 0866                             l3009 01A0  
                           l3130 1F4E                             l3122 1EDA  
                           l3018 0242                             l1283 3C32  
                           l3107 08B6                             l3131 1FA0  
                           l3123 1EBC                             l3115 1E2E  
                           l3043 0472                             l3027 0386  
                           l3019 0248                             l1276 3BB8  
                           l3060 0E6A                             l3052 0D8A  
                           l3108 08DC                             l3116 1E3E  
                           l3044 047E                             l3036 03E8  
                           l3028 039C                             l3053 0DB8  
                           l3125 1F28                             l3117 1E66  
                           l3045 0482                             l3029 03A8  
                           l2309 2BA0                             l1294 3AEC  
                           l1630 2926                             l3070 0FE6  
                           l3062 0E98                             l3054 0DAE  
                           l3126 1F18                             l3046 0496  
                           l1295 3AB2                             l1631 2982  
                           l3071 0FBC                             l3063 0F9A  
                           l3119 1E7E                             l3039 043E  
                           l1296 3B16                             l1632 2966  
                           l3080 10BE                             l3072 0FD2  
                           l3064 0F16                             l3056 0DE8  
                           l1297 3ABC                             l3081 10F4  
                           l3065 0F4E                             l3057 0E16  
                           l1298 3AC0                             l1730 4636  
                           l3082 1104                             l3066 0F42  
                           l3058 0E0C                             l3090 0520  
                           l1299 3AC4                             l1627 29CE  
                           l3083 1108                             l3067 0F96  
                           l3091 054A                             l2507 4AEC  
                           l1724 472A                             l1732 465E  
                           l1628 29C4                             l3092 0544  
                           l1629 2944                             l3077 1040  
                           l3093 055C                             l1726 4758  
                           l3094 0584                             l3086 04C6  
                           l1735 4AAE                             l3079 1090  
                           l3087 04F0                             l2711 330A  
                           l3088 04EA                             l2712 32FE  
                           l3089 0502                             l3098 080C  
                           l1827 27C6                             l3099 07E2  
                           l2715 3340                             l1828 27E6  
                           l2716 334E                             l2708 32CA  
                           l2901 3404                             l2717 3362  
                           l2709 32E0                             l2902 3416  
                           l1784 265C                             l1785 266A  
                           l2497 3A3E                             l1787 2674  
                           l2499 3A70                             l2950 3DDC  
                           l2951 3DD0                             l2784 2AB4  
                           l2776 2A06                             l2960 4228  
                           l2785 2AA4                             l2961 421C  
                           l2778 2A88                             l2954 3E12  
                           l2787 2ADA                             l2779 2A74  
                           l2955 3E20                             l2964 4252  
                           l2965 4260                             l2897 33AA  
                           l2898 339A                             l2995 001E  
                           l2996 004C                             l2997 0042  
                           l2999 0078                   ??_Console_Init 00BA  
          Port_SetPinType@pInput 00E0                             STR_1 FFFB  
                           STR_2 FFF1                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _LATD 000F8C                             _LATE 000F8D  
                           _LATF 000F8E      __size_of_MXK_InitTestButton 001E  
                           _LATG 000F8F              __end_of_GetPortPORT 38DE  
                           _PIR1 000F9E                             _PIR2 000FA1  
                           _PIR3 000FA4              __end_of_GetPortTRIS 3792  
                           u9420 3900                             u9440 3966  
                           u9504 41F2                             u9505 41EC  
                           u9427 38F6                             u9524 3550  
                           u9460 3CCC                             u9620 33B0  
                           u9525 354A                             u9445 3960  
                           u9534 3582                             u9550 45C8  
                           u9535 357C                             u9555 45C2  
                           _SPI1 017A                             _SPI2 0185  
                           u9565 4B20                             u9494 41C0  
                           u9566 4B22                             u9495 41BA  
                           u9760 2832                             u9680 4110  
                           u9745 277E                             u9905 13EC  
                           u9915 142E                             u9845 115A  
                           u9790 43B8                             u9855 1172  
                           _TMR0 000FD6                             u9865 118A  
                           u9875 11AC                             u9885 132C  
                           u9895 13AA                             _gISR 0060  
                  _iRVirtualWall 0038             __size_of_ADC_SetupIO 0032  
             SPI_MaxSpeed@pInput 00C9                    ?_Byte_SetByte 00BA  
                  ?_Byte_SetPair 00C5                  __end_of_SPI_DCS 4862  
                           _main 4AE8                             _maze 0300  
                           _init 3A12                             _xPos 0048  
                           _yPos 0046                  ??i2_Byte_SetBit 0005  
                  ?_Byte_SetQuad 00C5                             _itos 2DCA  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr2h 000FDA  
                           fsr0l 000FE9                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           fsr2l 000FD9                    ?_Byte_SetZone 00BA  
                           btemp 0051                             _zero 004E  
               __end_of_ADC_Init 3DB2                    ??_Byte_SetBit 00BE  
             __size_of_LCD_Reset 0050             __size_of_ADC_Voltage 00D8  
                           prodh 000FF4                             prodl 000FF3  
                           start 14AA               __size_of_LCD_Write 0022  
                  __CFG_IESO$OFF 000000                  ___fldiv@new_exp 00CB  
              Timer0_Init@DIVIDE 00D1                  ?_SPI_DisableISR 00BA  
                  Console_Init@x 00BC                    Console_Init@y 00BD  
                 ?i2_Timer0_Stop 0001                i2Byte_SetBit@pBit 0003  
                   ___param_bank 000000                  __end_of_Font5x7 FFBF  
           Set_Rotation@rotation 00C0                     _stepperMoved 0037  
         __size_of_HMI_SetNumber 002A                      ?_ISR_Enable 0001  
             _irobot_init_song_0 49A4                 __end_of_LCD_Fill 437E  
               __end_of_LCD_Init 25F6                    __CFG_PLLDIV$3 000000  
               __end_of_LED_Init 42CC                     _BAUDCON1bits 000F7E  
                  ??_Button_Init 00F5          GetPortProperties@pInput 00BC  
               __end_of_HMI_Init 1DE4                            l14400 3B4C  
                          l14330 2514                            l12732 40D2  
                          l12740 4110                            l14340 25B8  
                          l12734 40E4                            l12826 4380  
                          l13644 434E                            l12828 4392  
                          l13812 34CE                            l14470 1DB6  
                          l13648 435C                            l13736 2E74  
                          l14394 3B3C                            l14482 46AC  
                          l12788 27C6                            l13684 2250  
                          l13774 3C4C                            l13874 265C  
                          l13958 4B46                            l17728 10F4  
                          _I2C1T 00AE                            _I2C2T 01CC  
                  ___fltol@sign1 00C2                  __end_of___fladd 04A8  
                          ?_main 0001                            ?_init 0001  
                __end_of___fldiv 112C                  __end_of___awdiv 336C  
                          ?_itos 00C1                  __end_of___flmul 094E  
                __end_of___fltol 2AEC                  _Event_DIPSwitch 000000  
                __end_of___lldiv 3428                            u10100 422E  
                          u10200 4378                            u10230 22F0  
                          u10310 3CA2                            u10070 3DE2  
                          u10305 3C64                            u11140 24A4  
                          u10500 2918                            u10260 2E74  
                          u10414 47EA                            u10510 2958  
                          u10415 47E4                            u10178 310E  
                          u10380 456E                            u11260 3BAE  
                          u11180 25B8                            u10460 26C8  
                ___awdiv@divisor 00C6                            u10490 2904  
                          u16300 01E0                            u16250 016A  
                          u16068 46F4                            u15620 103A  
                          u16260 0182                            u16069 470A  
                          u16510 0450                            u16430 03C2  
                          u16270 0184                            u15650 10A4  
                          u15810 0860                            u15660 10D2  
                          u16460 03E2                            u16620 2A26  
                          u15750 0570                            u15840 08CA  
                          u15760 0784                            u16625 2A1A  
                          u15850 08F0                            u15930 1F36  
                          _INDEX 008E                            u16580 3310  
                          u16660 2ABE                            u15765 0778  
                __end_of___lwdiv 3E2A                            _MASKS FDCF  
                __end_of___lwmod 426A                            i2l430 365A  
                          i2l432 3680                            i2l433 36AA  
                          i2l427 36D0                            i2l732 3E76  
                          i2l733 3E70                            i2l832 4664  
                          i2l781 4880                  ___awdiv@counter 00C8  
            ?_irobot_init_song_0 0001                            _PORTA 000F80  
                          _PORTB 000F81                            _PORTC 000F82  
                          _PORTD 000F83                            _PORTE 000F84  
                          _PORTF 000F85                            _PORTG 000F86  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96                            _TRISF 000F97  
                          _TRISG 000F98               __end_ofsin@coeff_a FFD3  
             __end_ofsin@coeff_b FFE3                 ??i2_Byte_GetPair 000D  
               ??i2_Byte_GetZone 0006               Port_TogglePin@pPin 00D0  
                 __CFG_FCMEN$OFF 000000                            _PortA 01B8  
                          _PortB 01AE                            _PortC 00A4  
                          _PortD 009A                            _PortE 0090  
                          _PortF 01C2                            _PortG 01A4  
        __end_of_Port_SetPinType 2172                  _ADC_Initialised 008F  
                 ??_Byte_GetPair 00C6                   ?i2_Port_SetPin 0010  
                    LED_Set@pLED 00CF                  __end_of_dpowers FDCF  
                 ??_Byte_GetZone 00BF                            _errno 013A  
       __size_of_Set_Addr_Window 00AA                 __end_of_MXK_Init 2484  
                   ?_eusart_init 0001             i2Byte_GetPair@pInput 000A  
               __end_of_SPI_Init 0D6C                 __end_of_SPI_Send 40D0  
          __end_ofi2_MXK_Release 4BE8                            pclath 000FFA  
                          tablat 000FF5                  __end_of_reverse 4064  
             __size_of_MXK_Queue 000E                   ??_Byte_SetByte 00BD  
              __end_of_ADC_Start 3C38                   ??_Byte_SetPair 00C9  
                 ??_Byte_SetQuad 00C9                            plusw2 000FDB  
                 ??_Byte_SetZone 00C0                            status 000FD8  
                          wtemp6 0052           __size_of_ADC_Calibrate 0014  
                _Configure_GPIOs 3F88             i2MXK_Queue@pCallback 0001  
                    i2delay_us@u 0003             ??_irobot_init_song_0 00BB  
                 _LCD_Word_Write 49E2              __size_of_LED_Toggle 0048  
                     _Event_NULL 000000      __size_of_Port_CheckPairType 006A  
                   ?_irobot_init 0001                  __initialization 2CF0  
            __size_of_HMI_Render 003E                     __end_of_main 4AFE  
                   __end_of_init 3AA4                     __end_of_itos 2EA2  
                   SPI_Send9@dat 007B              __end_of_Byte_SetBit 4208  
               __end_of_InitList FDA5      __size_of_Port_CheckQuadType 005A  
               __end_of_Mode_Set 4B24                        ??_ADC_Off 00BA  
    __size_of_Port_CheckPortType 0048                      HMI_Render@a 00C2  
                         ??_main 00FA                           ??_init 00FA  
                         ??_itos 00C5                    __activetblptr 000003  
              Port_SetPin@pInput 00C9                __end_of_LCD_Reset 4470  
              Port_SetPin@pValue 00CC                        ??_LED_Set 00CF  
              _MXK_InitDIPSwitch 4A3C                GetPortPORT@pInput 00BC  
         Port_CheckPairType@Pin1 00E4           Port_CheckPairType@Pin2 00E5  
              __end_of_LCD_Write 4960                      _GetPortPORT 3838  
                   ?i2_MXK_Queue 0001                      _GetPortTRIS 36EC  
     __end_of_PortProperty_Valid 3D36                 __end_of_Port_Set 14E6  
                    ?i2_delay_us 0001              __end_of_Button_Init 3124  
              Word_GetPair@pPair 00C8               ?_MXK_InitDIPSwitch 0001  
                      ??_SPI_DCS 00BC                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _ADC_On 4BD6  
                  _HMI_SetNumber 48EC           Port_SetQuadType@Output 00F4  
                         _ANCON0 000FC1                 ___awdiv@dividend 00C4  
                  ToSegment@pCHR 00BA           Port_SetQuadType@pInput 00F0  
                         i2l1630 2C56                           i2l1631 2CA2  
                         i2l1632 2C8E                           i2l1730 47AC  
                         i2l1627 2CDE                           i2l1732 47CC  
                         i2l1628 2CD4                           i2l1629 2C6C  
                         i2l1590 145E                   __CFG_WDTEN$OFF 000000  
            __size_of_ISR_Enable 000A                           i2l9220 4664  
                         i2l9222 4674                           _RCREG1 000FAF  
                         _RCSTA1 000FAC           __end_of_LCD_Word_Write 4A00  
                 _Timer0_Restart 4B92                           _SPBRG1 000FB0  
            ??_MXK_InitDIPSwitch 00F5                           _TXREG1 000FAE  
               __end_of___xxtofl 1FB2                   i2_MXK_SwitchTo 479A  
                         _TXSTA1 000FAD                       _Reset_High 4A1E  
                 OutSeg@pSegment 00BD                  ??i2_Timer0_Stop 0001  
            Port_TogglePin@Value 00D1           ADC_SetChannel@pChannel 00BB  
               __end_of_delay_ms 413A                     LED_Init@pLED 00E7  
               __end_of_delay_us 43D0                    ??_Timer0_Init 00CB  
                  ??_Timer2_Init 00CB                    ??_Timer0_Stop 00BA  
                     _Timer0_ISR 4892                Timer2_Init@DIVIDE 00D4  
                 __CFG_XINST$OFF 000000                           _OutSeg 3C38  
       __size_of_HMI_InitButtons 0006                       _Motor_Init 2F7A  
                         _iRWall 0086                       _Motor_Step 28BA  
                      ??___fladd 00ED       __end_of_update_IR_distance 2BF0  
                      ??___fldiv 00C2                        ??___awdiv 00C8  
                 __CFG_STVREN$ON 000000                           _change 004D  
                      ??___flmul 00C2                           _lMotor 0077  
                      ??___fltol 00BE                        ??___lldiv 00C2  
                         _lQueue 0063                       _TestButton 019A  
                      ??___lwdiv 00BE               __size_of_ToSegment 0284  
                      ??___lwmod 00BE         __end_of_Port_SetQuadType 19C0  
       i2Byte_GetZone@pChunkSize 0005                     HMI_GRender@a 0031  
           __end_of_Console_Init 3BB4                GetPortTRIS@pInput 00BC  
             __size_of_Reset_Low 001E                           clear_0 2D78  
                         clear_1 2D8A                           clear_2 2D96  
                         clear_3 2DA2                           clear_4 2DAE  
                         clear_5 2DBA                 ___awdiv@quotient 00CA  
                     Port_Init@i 01FF                       _iRDistance 013E  
              __end_of_MXK_Queue 4B6C       __end_ofHMI_SetButton@F7213 FDDC  
                     _iRBumpLeft 0080                       _iRBumpDrop 0039  
      __end_of_MXK_InitDIPSwitch 4A5A                    _ADC_Calibrate 4AFE  
                     _iRDropLeft 007E                    ?_eusart_putch 0001  
         HMI_SetSegments@pString 00BB              LCD_Word_Write@value 00BF  
                   __pdataCOMRAM 0042               __size_of_Port_Init 0192  
                  ??_Port_GetPin 00BD         Port_CheckPortType@Output 00F3  
                      ?_ADC_Init 00BE                  ??i2_Port_SetPin 0014  
                   __mediumconst FCF2      __end_ofTimer2_Init@PRESCALE FDDF  
       Port_CheckPortType@pDrive 00F2              update_SSD@renderSSD 00D0  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                     ?_MXK_Dequeue 0001  
       Port_CheckPortType@pInput 00F0                    ??_Port_SetPin 00CD  
                      ??_reverse 00BE            Console_MakeField@Fill 0264  
               ?_Port_SetPinType 00E0                   ?_HMI_SetNumber 00CB  
                 i2_Word_GetPair 4862          __end_of_Configure_GPIOs 3FF8  
         __end_of_Timer0_Restart 4B9E                    Set_Rotation@m 00BF  
                   ?_MXK_Release 0001                  __CFG_FOSC$HSPLL 000000  
         __end_ofi2_MXK_SwitchTo 47D0                     ___xxtofl@arg 00C4  
                   i2delay_us@us 0001                     ___xxtofl@exp 00C3  
                   ___xxtofl@val 00BA                  ?_LCD_Word_Write 00BF  
                     __accesstop 0060          __end_of__initialization 2DC0  
                      ?_LCD_Fill 00C3                        ?_LCD_Init 0001  
                  SPI_Init@pMode 00EC                        ?_LED_Init 0001  
       __end_ofi2_Timer0_Restart 4BAA                        ?_HMI_Init 0001  
              ??_Set_Addr_Window 00C2                    ___rparam_used 000001  
                     ___fltol@f1 00BA                      _Byte_SetBit 41A4  
                  __end_of_MASKS FDD8                   _PortA_Property FFEF  
                      LCD_Fill@i 00C5                        LCD_Fill@j 00C6  
                      LCD_Init@i 00F1                   __pcstackCOMRAM 0001  
                 _PortB_Property FFED              __size_ofi2_delay_us 0040  
                   __pidataBANK0 4BC4                     __pidataBANK1 4B7A  
                   __pidataBANK3 3124              i2Byte_SetBit@pInput 0001  
           __end_of_Byte_GetPair 4A96              i2Byte_SetBit@pValue 0004  
                  ?_Set_Rotation 0001              Timer0_Init@PRESCALE FDA5  
           __end_of_Byte_GetZone 397A                   _PortC_Property FFEB  
            __end_of_Timer0_Init 275A                        ?_MXK_Init 0001  
            __end_of_Timer2_Init 28BA              __end_of_Timer0_Stop 4BD0  
            update_IR_distance@i 02AE                   ?_ADC_Calibrate 0001  
                      ?_SPI_Init 00E7                        ?_SPI_Send 00BA  
                 ??_eusart_putch 00BA                      _Button_Init 3050  
              Port_SetType@pType 00F6             __end_of_Byte_SetByte 4B5E  
           __end_of_Byte_SetPair 4982                   _HMI_LeftSwitch 000000  
                 _PortD_Property FFE9             __end_of_Byte_SetQuad 49A4  
                   ??_LED_Toggle 00D2       eusart_putch@eusartSendChar 00BA  
           __end_of_Byte_SetZone 3598                   _HMI_DownSwitch 000000  
                  SPI_Send@pData 00BC                     ??_HMI_Render 00C2  
                 _PortE_Property FFE7                       ??_ADC_Init 00C1  
       __size_of_HMI_SetSegments 00BA           __end_ofi2_Word_GetPair 4892  
                 _PortF_Property FFE5          Port_CheckQuadType@Pair1 00ED  
        Port_CheckQuadType@Pair2 00EE         MXK_BlockSwitchTo@pModule 00C1  
                        ?_ADC_On 0001                 _localSensorAngle 006B  
                ?_Timer0_Restart 0001                __end_of_ToSegment 176A  
                 _PortG_Property FFE3                       __pbssBANK0 0060  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
                     __pbssBANK4 0400              __end_of_Port_GetPin 45DA  
        Port_CheckQuadType@pQuad 00EB                  reverse@iterator 00BF  
               ??_SPI_DisableISR 00BC                  ?i2_MXK_SwitchTo 0001  
              __end_of_Reset_Low 4A1E          __size_of_Port_TogglePin 0030  
                     ??_LCD_Fill 00C5                       ??_LCD_Init 00EF  
           __size_of_eusart_init 001E              __end_of_Port_SetPin 32AE  
         __end_of_PortA_Property FFF1                        ?_Mode_Set 0001  
             Byte_SetByte@pInput 00BA                       ??_LED_Init 00E7  
       ADC_ClockDivision@pDivide 00BA               Byte_SetByte@pValue 00BC  
                  ?_ISR_Function 0001                      ?_Reset_High 0001  
             _ADC_ConversionTime 454C                    ?_Timer0_Clear 0001  
                     ??_HMI_Init 00F5                    ?_Timer2_Clear 0001  
        Port_CheckPairType@Props 00E7           __end_of_PortB_Property FFEF  
              __end_of_Port_Init 2304                      ?_Timer0_ISR 0001  
        Port_CheckPairType@pPair 00E2               __end_of_LED_Toggle 454C  
                     _angleTotal 006F                Set_Addr_Window@xe 00C0  
              Set_Addr_Window@ye 00C1                Set_Addr_Window@xs 00C2  
              Set_Addr_Window@ys 00BF                          ?_OutSeg 00BD  
                    ?_Motor_Init 00E7               Byte_SetPair@pInput 00C5  
                    ?_Motor_Step 0001               Byte_SetPair@pValue 00C8  
         __end_of_PortC_Property FFED               Word_GetPair@pInput 00C6  
             __end_of_HMI_Render 46E0                   ??_Set_Rotation 00BF  
                      ?_Port_Set 00C9              ?_ADC_ConversionTime 0001  
              Port_GetPin@Output 00BF                     ??_ISR_Enable 00BA  
           __size_of_irobot_init 000E           __end_of_PortD_Property FFEB  
                        _ADC_AN0 00B5                          _ADC_AN1 01E3  
                        _ADC_AN2 01DE                          _ADC_AN3 01D9  
                     ??_MXK_Init 00FA                Port_GetPin@pInput 00BA  
                        _ADC_Off 4BBC         ADC_ClockDivision@unfound 00BC  
                     ??_SPI_Init 00ED                       ??_SPI_Send 00BD  
              ??_HMI_InitButtons 00BA       __size_of_MXK_InitDIPSwitch 001E  
         __end_of_PortE_Property FFE9      update_IR_distance@IRSamples 02B0  
            Console_Render@F6956 01F0                          _COUNTER 0075  
                        _LED_Set 43D0                        ?___xxtofl 00BA  
         __end_of_PortF_Property FFE7                      _gBackcolour 0033  
                ??_HMI_SetNumber 00CD                        _I2C1_Done 0137  
                ?i2_Word_GetPair 000D                        _I2C2_Done 0134  
                      _I2C1_More 0131                        _I2C2_More 012E  
                      ?_delay_ms 00BA                        ?_delay_us 00BA  
     __end_of_MXK_InitTestButton 4A78                          _SSP1ADD 000FC8  
                        _SSP1BUF 000FC9                          _SSP2BUF 000F6F  
           ??_ADC_ConversionTime 00BA           __end_of_PortG_Property FFE5  
        __size_of_ADC_SetChannel 001C                          _IRValue 006D  
                        _SPI_DCS 4832             __size_ofi2_MXK_Queue 000E  
                  ??_ADC_SetupIO 00BA                 ?_Configure_GPIOs 0001  
                __size_of_ADC_On 0006                 ADC_Init@pChannel 00C0  
           i2Byte_GetZone@Offset 0008                    ??_ADC_Voltage 00D7  
             __end_of_ISR_Enable 4BB4                   ??_ISR_Function 0017  
           i2Byte_GetZone@Output 0009                   ??_Timer0_Clear 00BA  
              Event_TestButton@j 0087                       ??_Mode_Set 00BA  
                 ??_Timer2_Clear 00BA                          _Font5x7 FDDF  
           i2Byte_GetZone@pChunk 0004         ADC_ConversionTime@pCount 00BB  
           i2Byte_GetZone@pInput 0001             SPI_DisableISR@pInput 00BA  
                Byte_SetBit@pBit 00BC             Port_TogglePin@pInput 00CE  
          __end_ofi2_Byte_SetBit 44BC                        _ADC_Start 3BB4  
                        __Hparam 0000                      _Timer0_Init 25F6  
                    _Timer2_Init 275A                          __Lparam 0000  
                    _Timer0_Stop 4BCA            __size_of_Console_Init 0086  
                        OutSeg@a 003C  __end_ofPortProperty_Valid@F6830 FDC5  
                        _iRAngle 013C                    LCD_Write@mode 00BD  
                __size_of_OutSeg 0082                       ??_Port_Set 00CC  
                        _Stepper 01D3                          ___fladd 0000  
                  ?_Port_SetType 00F4                          _gCursor 0042  
                        ___fldiv 0D6C                          ___awdiv 32AE  
                        ___flmul 04A8                          ___fltol 29E0  
                        _lBuffer 0463                          ___lldiv 336C  
                ??_ADC_Calibrate 00BA                          ___lwdiv 3DB2  
                        ___lwmod 4208                          _bearing 004A  
                     _currentPos 0029                          __pcinit 2CF0  
                        __ramtop 1000                          __ptext0 4AE8  
                        __ptext1 48C0                          __ptext2 48EC  
                        __ptext3 2DCA                          __ptext4 3FF8  
                        __ptext5 4208                          __ptext6 3DB2  
                        __ptext7 3428                          __ptext8 14E6  
                        __ptext9 46A2                        _T0CONbits 000FD5  
              i2MXK_SwitchTo@CUR 0007                          _dpowers FDC5  
                      _T2CONbits 000FCA                    LED_Set@pValue 00CE  
            __size_of_Reset_High 001E                       ??___xxtofl 00BE  
                   ?_GetPortPORT 00BA                     ?_GetPortTRIS 00BA  
                    _Port_GetPin 4594                __CFG_MSSPMSK$MSK5 000000  
            LCD_DrawRectangle@p2 01EC              LCD_DrawRectangle@p4 01E8  
                   ??i2_delay_us 0003                       ??_delay_ms 00BC  
                     ??_delay_us 00BC                          _reverse 3FF8  
                      _DIPSwitch 0190              __size_of_Timer0_ISR 002E  
                    _Port_SetPin 31EA                      _iRBumpRight 0081  
                      _LCD_Reset 4420              __size_of_Motor_Init 00D6  
            __size_of_Motor_Step 0126                        _LCD_Write 493E  
                    _iRDropRight 007F             __size_of_MXK_Dequeue 003E  
                     delay_ms@ms 00BA             end_of_initialization 2DC0  
            ADC_SetupIO@pChannel 00BC                       delay_us@us 00BA  
              ??_HMI_SetSegments 00BD                     _Console_Init 3B2E  
           __size_of_MXK_Release 001C       __end_of_Port_CheckPairType 41A4  
           __end_of_eusart_putch 4B50                          itos@Out 00C9  
             _PortProperty_Valid 3CBA               Byte_SetQuad@pInput 00C5  
             SPI_MinSpeed@pInput 00C9               Byte_SetQuad@pValue 00C8  
            __end_of_ADC_SetupIO 4802            __size_of_Byte_GetPair 001E  
    __size_of_irobot_init_song_0 0020                        i2u1671_48 48AA  
                ___lldiv@divisor 00BE            __size_of_Byte_GetZone 009C  
                     ?_ADC_Start 00BC                  ___lldiv@counter 00C6  
            __end_of_ADC_Voltage 2F7A                   ??_Port_SetType 00F7  
     __end_of_Port_CheckQuadType 4326                   Port_Init@pPort 01FE  
                        postdec1 000FE5                          postdec2 000FDD  
          __size_of_Byte_SetByte 000E            __size_of_Byte_SetPair 0022  
                        postinc0 000FEE                          postinc2 000FDE  
            ?_PortProperty_Valid 00C9            __size_of_Byte_SetQuad 0022  
     __end_of_Port_CheckPortType 4504            __size_of_Byte_SetZone 00B6  
             __end_ofi2_delay_us 46A2               Button_Init@pInitIO 02AE  
          Timer0_Init@pFrequency 00C7                ?_Port_SetQuadType 00F0  
                    _gForecolour 00FC           __size_ofi2_MXK_Release 0006  
                      _PORTFbits 000F85               ??_Port_SetQuadType 00F4  
               Byte_GetZone@MASK 00C0                      ___fladd@grs 00F8  
                      _MXK_Queue 4B5E                 __CFG_CPUDIV$OSC1 000000  
                  ___xxtofl@sign 00C2                 Byte_GetZone@pMax 00BC  
                     _update_SSD 48C0                        _TRISCbits 000F94  
             _update_IR_distance 2AEC                  _Set_Addr_Window 3598  
                 SPI_Init@pClock 00E7                 ??_LCD_Word_Write 00C1  
                    ___fldiv@grs 00CD                      ___fldiv@rem 00C7  
                 Port_Set@pInput 00C9                   SPI_Init@pInput 00ED  
           ??_PortProperty_Valid 00CD                __size_of_ADC_Init 007C  
                 Port_Set@pValue 00CB                       ?_LCD_Reset 0001  
           __end_of_Set_Rotation 3A12                       ?_LCD_Write 00BD  
                   _Byte_GetPair 4A78               HMI_SetButton@F7213 FDD8  
                  _cardinalAngle 0069                     _Byte_GetZone 38DE  
                  ?_MXK_SwitchTo 0001                   __end_of_ADC_On 4BDC  
                 _Port_TogglePin 4802              ?_update_IR_distance 0001  
               _Event_TestButton 000000                      ___flmul@grs 00C9  
           Port_SetPinType@Props 00E5          __size_ofi2_Byte_GetPair 001A  
                   _Byte_SetByte 4B50                     _Byte_SetPair 4960  
                ADC_SetupIO@MASK 00BD                     _Byte_SetQuad 4982  
        __size_ofi2_Byte_GetZone 0076                     _Byte_SetZone 34E2  
           Port_SetPinType@pType 00E3                ?i2_Timer0_Restart 0001  
                   ?_Byte_SetBit 00BA                    ?_SPI_MaxSpeed 00C9  
              __size_of_LCD_Fill 0058                __size_of_LCD_Init 0172  
              __size_of_LED_Init 0062                    ?_SPI_MinSpeed 00C9  
          __end_ofi2_Timer0_Stop 4BE2               ??i2_Timer0_Restart 0001  
              __size_of_HMI_Init 01FA                    ?i2_Motor_Step 0001  
                 __end_of_OutSeg 3CBA             ??_update_IR_distance 01FC  
                  __pidataCOMRAM 4B24                     ?_Button_Init 02AA  
                      _Bus_State 004C              i2Byte_GetPair@pPair 000C  
           __end_of_ISR_Function 14AA             __end_of_Timer0_Clear 4B92  
              __size_of_MXK_Init 0180             __end_of_Timer2_Clear 4BBC  
              __size_of_SPI_Init 041E                __size_of_SPI_Send 006C  
                  ?_Word_GetPair 00C6                 ??_Timer0_Restart 00BA  
             Port_SetType@Output 00F9              start_initialization 2CF0  
                     ?_MXK_Queue 00BA         PortProperty_Valid@Errors 00CF  
               ??i2_MXK_SwitchTo 0007               Port_SetType@pInput 00F4  
                 _ADC_SetChannel 4AB2                       HMI_Init@in 00F5  
            HMI_SetNumber@pInput 00CB            __end_ofi2_Port_SetPin 36EC  
         __end_of_Port_TogglePin 4832                    ?_Word_SetPair 00C9  
              Byte_SetBit@pInput 00BA                         ??_ADC_On 00BA  
                 ??_MXK_SwitchTo 00C0                Byte_SetBit@pValue 00BD  
    PortProperty_Valid@pPinDrive 00CB                      _ADC_SetupIO 47D0  
           MXK_BlockSwitchTo@CUR 00C0         PortProperty_Valid@pInput 00C9  
                  i2_MXK_Release 4BE2                      _ADC_Voltage 2EA2  
                 SPI_Send@pInput 00BA                     ??_Reset_High 00CE  
       __size_of_Port_SetPinType 01C0                   ??_SPI_MaxSpeed 00CB  
          Port_SetQuadType@pQuad 00F2                        _ToSegment 14E6  
          Port_SetQuadType@pType 00F3                   ??_SPI_MinSpeed 00CB  
                    ??_ADC_Start 00BE                     _HMI_UpSwitch 000000  
                      _Reset_Low 4A00                     ??_Timer0_ISR 0017  
                _HMI_InitButtons 4BD0                __size_of_Mode_Set 0012  
                 ADC_Init@pInput 00BE                        _gCharSize 01F8  
               Timer2_Init@INDEX 008C                        OutSeg@cur 003E  
                 ??i2_Motor_Step 0015                     ??_Motor_Init 00EB  
                       ??_OutSeg 00BE                        OutSeg@out 00C1  
                   ??_Motor_Step 00CE                        _iRAngleSS 011E  
                      _iRCliffFL 0084                        _iRCliffFR 0083  
             Byte_SetZone@Offset 00C3                        _Port_Init 2172  
                 _currentPosChar 0035                      __pdataBANK0 00FA  
                    __pdataBANK1 01F0                      __pdataBANK3 0300  
              __size_of_Port_Set 03BA               Byte_SetZone@pChunk 00BD  
                       ?_ADC_Off 0001                 ??i2_Word_GetPair 0010  
             Byte_SetZone@pInput 00BA               Byte_SetZone@pValue 00BF  
                  Mode_Set@pMode 00BA          __end_of_Set_Addr_Window 3642  
       Port_CheckQuadType@Output 00EF                        _gLineSize 01F4  
       Port_CheckQuadType@pDrive 00EC                        ___fladd@a 00E9  
                      ___fladd@b 00E5                   ??_Word_GetPair 00C9  
       Port_CheckQuadType@pInput 00E9                        ___fldiv@a 00BE  
                      ___fldiv@b 00BA                      __pbssBIGRAM 0463  
         __end_of_ADC_SetChannel 4ACE                         ?_LED_Set 00CE  
                      ___flmul@a 00BE                        ___flmul@b 00BA  
                    __pbssCOMRAM 0029                  ADC_Start@pInput 00BC  
             __end_of_Reset_High 4A3C                      ?_update_SSD 00D0  
                  __pcstackBANK0 00BA                    __pcstackBANK1 01FC  
                  __pcstackBANK2 02AA                       itos@Length 00C7  
                 ??_Word_SetPair 00CD                __size_of___xxtofl 01CE  
             __end_of_Timer0_ISR 48C0             __size_of_GetPortPORT 00A6  
                    ??_LCD_Reset 00D3             __size_of_GetPortTRIS 00A6  
           __end_of_Port_SetType 1BEA                         ?_SPI_DCS 00BA  
          __size_of_eusart_putch 000E                  ?_Port_TogglePin 00CE  
                  ??_eusart_init 00BA                      ??_LCD_Write 00BE  
              __size_of_delay_ms 006A                __size_of_delay_us 0052  
             __end_of_Motor_Init 3050              __CFG_CCP2MX$DEFAULT 000000  
             __end_of_Motor_Step 29E0            Timer2_Init@pFrequency 00C7  
                 ?i2_MXK_Release 0001                       sin@coeff_a FFBF  
                     sin@coeff_b FFD3         Port_CheckPairType@Output 00E6  
                     ?_ToSegment 0001         Port_CheckPairType@pDrive 00E3  
       Port_CheckPairType@pInput 00E0                   reverse@tempVar 00BE  
             _MXK_InitTestButton 4A5A                       ?_Reset_Low 0001  
                   ?_Timer0_Init 00C7                     ?_Timer2_Init 00C7  
                   ?_Timer0_Stop 0001                 ___lwdiv@dividend 00BA  
                  ??_irobot_init 00BB                    _lStepFunction 0066  
              Byte_SetPair@pPair 00C7                        __pintcode 1408  
                  __pmediumconst FCF2                         ?___fladd 00E5  
                       ?___fldiv 00BA                         ?___awdiv 00C4  
                      __ptext100 4BBC                        __ptext110 4470  
                      __ptext102 4892                        __ptext111 479A  
                      __ptext103 2BF0                        __ptext112 4662  
                      __ptext104 4BDC                        __ptext113 4BE2  
                      __ptext105 4B9E                        __ptext114 4B6C  
                      __ptext106 3642                        __ptext115 0000  
                      __ptext107 4862                        __ptext108 4ACE  
                      __ptext109 3E2A                        _pShiftVal 0071  
                       ?___flmul 00BA                         ?___fltol 00BA  
                       ?___lldiv 00BA                       ?_Port_Init 01FC  
           Timer0_Init@pCPUClock 00CD                         ?___lwdiv 00BA  
                       ?___lwmod 00BA              ?_MXK_InitTestButton 0001  
              _GetPortProperties 3792      __end_ofTimer0_Init@PRESCALE FDB5  
                   _eusart_putch 4B42                  _HMI_SetSegments 3428  
             ?_GetPortProperties 00BA            __size_of_Set_Rotation 0098  
                ?_ADC_SetChannel 0001                    ??i2_MXK_Queue 0004  
                    ??_MXK_Queue 00BD                     ?_Port_GetPin 00BA  
                       _ADC_Init 3D36                         ?_reverse 00BA  
                   ?_Port_SetPin 00C9            __end_of_HMI_SetNumber 4916  
               ___lwdiv@quotient 00BF                  _HMI_RightSwitch 000000  
    __size_of_ADC_ConversionTime 0048              ??_GetPortProperties 00BC  
           ??_MXK_InitTestButton 00E7               Byte_GetPair@pInput 00C3  
        __end_of_HMI_InitButtons 4BD6                i2Port_SetPin@Type 0014  
              i2Port_SetPin@pPin 0012                   i2_Byte_GetPair 4ACE  
                       _LCD_Fill 4326                         _LCD_Init 2484  
                       _HMIBoard 0140                   i2_Byte_GetZone 3E2A  
                       _LED_Init 426A                        delay_ms@u 00BC  
                      delay_us@u 00BC                         _HMI_Init 1BEA  
             MXK_Queue@pCallback 00BA                         _IPR1bits 000F9F  
                       _IPR3bits 000FA5                         _PIE1bits 000F9D  
            __end_of_eusart_init 49E2                         _PIE3bits 000FA3  
       __size_of_Configure_GPIOs 0070                        _rightWall 0036  
              Byte_SetQuad@pQuad 00C7                         _PIR1bits 000F9E  
                       _PIR3bits 000FA4                         i2u560_40 4690  
                       i2u490_40 3E94                         i2u490_45 3E90  
                       i2u556_44 4484                         i2u556_45 4480  
                       i2u557_44 44AA                         i2u557_45 44A6  
                       i2u488_40 3E4C                         i2u488_47 3E42  
                       i2u775_40 2C34                         i2u776_40 2C48  
                       i2u777_40 2C80             __size_of_Byte_SetBit 0064  
            __size_of_update_SSD 002C                         _RCONbits 000FD0  
           i2Word_GetPair@pInput 000D                 __CFG_WDTPS$32768 000000  
              Button_Init@pInput 02AA          __size_of_SPI_DisableISR 0028  
                       _SSP1CON1 000FC6                ??_Port_SetPinType 00E4  
                       _SSP1CON2 000FC5                         _SSP2CON1 000F6C  
                       _SSP2CON2 000F6B            __size_of_ISR_Function 00A2  
          __size_of_Timer0_Clear 000C                         _SSP1STAT 000FC7  
      __end_of_GetPortProperties 3838                         _SSP2STAT 000F6D  
                   _Set_Rotation 397A            __size_of_Timer2_Clear 0008  
           __end_of_MXK_SwitchTo 4662               _Port_CheckPairType 413A  
                       _MXK_Init 2304                  MXK_SwitchTo@CUR 00C0  
          __end_of_ADC_Calibrate 4B12                         _SPI_Init 094E  
            __end_of_irobot_init 4B42                         _SPI_Send 4064  
                     _ADCON0bits 000FC2                 __size_of_ADC_Off 0008  
                     _ADCON1bits 000FC1                 ?_Set_Addr_Window 00BF  
           Timer2_Init@pCPUClock 00D0             __size_of_Button_Init 00D4  
           __end_of_SPI_MaxSpeed 3F14              Port_SetPinType@pPin 00E2  
             _Port_CheckQuadType 42CC                    _MXK_DIPSwitch 000000  
            ?_Port_CheckPairType 00E0             __end_of_SPI_MinSpeed 3F88  
                  ??_MXK_Dequeue 00D0                 __size_of_LED_Set 0050  
         __size_ofi2_Byte_SetBit 004C               _Port_CheckPortType 44BC  
        PortProperty_Valid@F6830 FDB5             __end_ofi2_Motor_Step 2CF0  
                ??i2_MXK_Release 0001                        copy_data0 2D04  
                      copy_data1 2D24                        copy_data2 2D44  
                      copy_data3 2D64                    ??_MXK_Release 00BA  
         __end_ofi2_Byte_GetPair 4AE8        __size_of_Port_SetQuadType 0256  
               __size_of_SPI_DCS 0030              ?_Port_CheckQuadType 00E9  
         __end_ofi2_Byte_GetZone 3EA0              __end_ofi2_MXK_Queue 4B7A  
            ?_Port_CheckPortType 00F0                  itos@destination 00C3  
                       _InitList FCF3       __end_of_irobot_init_song_0 49C4  
           _Motor_Step$intlevel0 28C0                         _Mode_Set 4B12  
                    ??_ToSegment 00BA                     _ISR_Function 1408  
                   _Timer0_Clear 4B86                     _Timer2_Clear 4BB4  
           __end_of_Word_GetPair 479A                         _lCBuffer 0100  
           ??_Port_CheckPairType 00E4                      ??_Reset_Low 00CE  
                       __Hrparam 0000                     OutSeg@pInput 00C0  
                       __Lrparam 0000                      _mazeConsole 0400  
                Timer2_Init@RDIV 00CC                         _iRCliffL 0085  
                       _iRCliffR 0082                   LCD_Write@value 00BE  
                       _Port_Set 112C                     OutSeg@segset 003D  
                      rand@screw 003B             __end_of_Word_SetPair 4620  
                    ??_Port_Init 02AA          __end_of_HMI_SetSegments 34E2  
           ??_Port_CheckQuadType 00ED                 __size_of___fladd 04A8  
               __size_of___fldiv 03C0                 __size_of___awdiv 00BE  
               __size_of___flmul 04A6                 __size_of___fltol 010C  
               __size_of___lldiv 00BC                _MXK_BlockSwitchTo 471E  
               __size_of___lwdiv 0078             ??_Port_CheckPortType 00F3  
               __size_of___lwmod 0062                         _lBufferX 0040  
                       _lBufferY 003F              Timer2_Init@PRESCALE FDDC  
                LCD_Fill@pColour 00C3               ?_MXK_BlockSwitchTo 0001  
      __size_ofi2_Timer0_Restart 000C                         _lCurrent 0079  
         Byte_GetZone@pChunkSize 00BE           Byte_SetZone@pChunkSize 00BE  
          __size_of_Port_SetType 022A                    reverse@length 00BC  
                      itos@input 00C1            i2MXK_SwitchTo@pModule 0008  
                       ___xxtofl 1DE4               Motor_Init@pAddress 00E9  
                       _delay_ms 40D0                         _delay_us 437E  
                       _clearall 0041                  ___lwdiv@divisor 00BC  
                ___lwdiv@counter 00BE                  Port_GetPin@pPin 00BC  
                       __ptext10 3C38                         __ptext11 2AEC  
                       __ptext20 49A4                         __ptext12 29E0  
                       __ptext21 4B34                         __ptext13 0000  
                       __ptext30 44BC                         __ptext22 4B42  
                       __ptext14 32AE                         __ptext31 112C  
                       __ptext23 49C4                         __ptext15 2EA2  
                       __ptext40 4BCA                         __ptext32 4B50  
                       __ptext24 2F7A                         __ptext16 1DE4  
                       __ptext41 4B92                         __ptext33 36EC  
                       __ptext25 25F6                         __ptext17 04A8  
                       __ptext50 3598                         __ptext42 4620  
                       __ptext34 3792                         __ptext26 4B86  
                       __ptext18 0D6C                         __ptext51 49E2  
                       __ptext43 4A96                         __ptext35 3838  
                       __ptext27 2304                         __ptext19 3A12  
                       __ptext60 4A1E                         __ptext52 493E  
                       __ptext44 4B5E                         __ptext36 426A  
                       __ptext28 2172                         __ptext61 4504  
                       __ptext53 4064                         __ptext45 471E  
                       __ptext37 43D0                         __ptext29 19C0  
                       __ptext70 336C                         __ptext62 4802  
                       __ptext54 4B12                         __ptext46 437E  
                       __ptext38 46E0                         __ptext71 4BB4  
                       __ptext63 31EA                         __ptext55 3F88  
                       __ptext47 2484                         __ptext39 28BA  
            ??_MXK_BlockSwitchTo 00C0                         __ptext80 176A  
                       __ptext72 4916                         __ptext64 4594  
                       __ptext56 3EA0                         __ptext48 397A  
                       __ptext81 45DA                         __ptext73 4832  
                       __ptext65 4BAA                         __ptext57 4420  
                       __ptext49 4326                         __ptext90 34E2  
                       __ptext82 4960                         __ptext74 3050  
                       __ptext66 1BEA                         __ptext58 40D0  
                       __ptext91 3B2E                         __ptext83 42CC  
                       __ptext75 4A3C                         __ptext67 3F14  
                       __ptext59 4A00                         __ptext92 3BB4  
                       __ptext84 413A                         __ptext76 4BD0  
                       __ptext68 094E                         __ptext93 3D36  
                       __ptext85 3CBA                         __ptext77 4A5A  
                       __ptext69 275A                         __ptext94 47D0  
                       __ptext86 475C                         __ptext78 1FB2  
                       __ptext95 4AB2                         __ptext87 4A78  
                       __ptext79 41A4                         __ptext96 454C  
                       __ptext88 38DE                         __ptext97 3AA4  
                       __ptext89 4982                         __ptext98 4AFE  
                       __ptext99 4BD6                     _SSP1CON1bits 000FC6  
               __size_of_reverse 006C                     _SSP1CON2bits 000FC5  
    __size_of_PortProperty_Valid 007C               i2Byte_GetZone@MASK 0007  
              _ADC_ClockDivision 3AA4                     ?_ADC_SetupIO 0001  
                   _SSP2CON1bits 000F6C                     _SSP2CON2bits 000F6B  
                    _eusart_init 49C4                  ?i2_Byte_GetPair 000A  
                ?i2_Byte_GetZone 0001               i2Byte_GetZone@pMax 0003  
               ?_HMI_InitButtons 0001                         _gridSize 00FA  
             ?_ADC_ClockDivision 0001                     ?_ADC_Voltage 00D3  
            __end_of_MXK_Dequeue 471E                HMI_SetSegments@in 00BE  
          Button_Init@pThreshold 02AC                    __size_of_main 0016  
                  __size_of_init 0092                         _xPosNext 002D  
                  __size_of_itos 00D8                Byte_GetPair@pPair 00C5  
                       _yPosNext 002B              i2Port_SetPin@pInput 0010  
            i2Port_SetPin@pValue 0013              __end_of_MXK_Release 4AB2  
                 _MXK_TestButton 000000                    i2_Byte_SetBit 4470  
            ??_ADC_ClockDivision 00BA                     _iRDistanceSS 0122  
                    _irobot_init 4B34              i2Word_GetPair@pPair 000F  
                 ADC_Voltage@max 00D9                   ADC_Voltage@ref 00DD  
      __end_of_MXK_BlockSwitchTo 475C             __size_of_Timer0_Init 0164  
           __size_of_Timer2_Init 0160                         int$flags 0051  
           __size_of_Timer0_Stop 0006                     _Port_SetType 19C0  
                   Port_Set@Type 00E0       __size_of_GetPortProperties 00A6  
                   _iRDropCaster 007D                ??_Configure_GPIOs 00EF  
                   _SSP1STATbits 000FC7      __size_of_update_IR_distance 0104  
                 Timer0_Init@DIV 012A                   Timer0_Init@PRE 008D  
                   _SSP2STATbits 000F6D                       _LED_Toggle 4504  
           Button_Init@pGetState 02B1           PortProperty_Valid@Pair 00DF  
               ??_Port_TogglePin 00D1                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2           PortProperty_Valid@pPin 00CC  
       _update_IR_distance$15702 02AA                       _HMI_Render 46A2  
                   ??_update_SSD 00D2                 Byte_SetZone@MASK 00C4  
                    i2_MXK_Queue 4B6C        __end_of_ADC_ClockDivision 3B2E  
                 Timer2_Init@DIV 0126                   Timer2_Init@PRE 008B  
               Byte_SetZone@pMax 00BC           __size_ofi2_Timer0_Stop 0006  
           __size_of_Port_GetPin 0046             Button_Init@pFunction 02B4  
                       itos@Data 00C5             __size_of_Port_SetPin 00C4  
                       intlevel2 0000                     reverse@input 00BA  
               ___lwmod@dividend 00BA                 ___lldiv@dividend 00BA  
 update_IR_distance@IRCumulative 02B1                    _iRScriptIndex 003A  
        __size_of_LCD_Word_Write 001E                   ?i2_Byte_SetBit 0001  
                  _iRScriptStack 0200            __size_of_MXK_SwitchTo 0042  
                 _SPI_DisableISR 4916                  Port_Init@pInput 01FC  
             __end_of_update_SSD 48EC           __size_ofi2_Port_SetPin 00AA  
                     _ISR_Enable 4BAA                 ?_HMI_SetSegments 00BB  
          __size_of_SPI_MaxSpeed 0074                 ??_ADC_SetChannel 00BA  
                  SPI_DCS@pInput 00BA            __size_of_SPI_MinSpeed 0074  
          __size_ofi2_Motor_Step 0100                ADC_Voltage@pInput 00D3  
               ___lldiv@quotient 00C2                    ??_GetPortPORT 00BC  
                ___lwmod@divisor 00BC                    ??_GetPortTRIS 00BC  
             Word_SetPair@pInput 00C9                  ___lwmod@counter 00BE  
             Word_SetPair@pValue 00CC                 Motor_Init@pMotor 00E7  
                    _MXK_Dequeue 46E0                ADC_Voltage@output 00E1  
                  _distanceTotal 002F                   LED_Toggle@pLED 00D2  
                  ___fladd@signs 00F5                 _Port_SetQuadType 176A  
                    _MXK_Release 4A96                     _MXK_SwitchTo 4620  
          __size_of_Word_GetPair 003E               Byte_GetZone@Offset 00C1  
                  ?_Console_Init 0001                Word_SetPair@pPair 00CB  
                _Port_SetPinType 1FB2                     ___fladd@aexp 00F6  
                   ___fladd@bexp 00F7          __size_of_Timer0_Restart 000C  
             Byte_GetZone@Output 00C2               Byte_GetZone@pChunk 00BD  
             Byte_GetZone@pInput 00BA          __size_ofi2_MXK_SwitchTo 0036  
          __size_of_Word_SetPair 0046           __end_of_SPI_DisableISR 493E  
                   _SPI_MaxSpeed 3EA0                     _SPI_MinSpeed 3F14  
             Port_Set@TypeActual 00DE  
